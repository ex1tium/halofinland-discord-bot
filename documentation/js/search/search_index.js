var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Additional.html",[0,0.26,1,0.956]],["body/interfaces/Additional.html",[0,0.49,1,1.644,2,1.022,3,0.167,4,0.146,5,0.146,6,2.131,7,0.232,8,0.725,9,1.306,10,3.348,11,1.064,12,0.372,13,0.018,14,1.725,15,1.171,16,0.812,17,2.267,18,0.293,19,2.863,20,1.611,21,3.21,22,3.21,23,3.21,24,3.21,25,3.21,26,3.21,27,3.21,28,3.21,29,3.21,30,2.541,31,2.223,32,2.131,33,2.541,34,2.131,35,1.801,36,2.131,37,2.131,38,2.131,39,2.131,40,1.476,41,2.131,42,1.9,43,0.851,44,0.012,45,0.012]],["title/interfaces/Additional-1.html",[0,0.217,1,0.798,46,2.034]],["body/interfaces/Additional-1.html",[0,0.513,1,1.611,2,0.973,3,0.159,4,0.139,5,0.139,7,0.221,8,0.701,9,1.28,11,0.902,12,0.265,13,0.018,14,1.737,15,1.115,16,0.773,18,0.307,43,1.25,44,0.012,45,0.012,47,1.549,48,1.549,49,1.628,50,2.276,51,1.628,52,1.628,53,2.276,54,2.327,55,1.549,56,2.327,57,1.628,58,1.628,59,1.628,60,2.276,61,1.628,62,1.628,63,1.628,64,2.276,65,1.628,66,1.628,67,1.628,68,1.628,69,1.628,70,1.628,71,1.628,72,1.628,73,1.628,74,1.628,75,1.628,76,2.169,77,1.549,78,1.628,79,1.628,80,1.628,81,2.276,82,2.003,83,1.628,84,1.628,85,1.549,86,1.549,87,1.628,88,1.628,89,1.628,90,1.628,91,1.474]],["title/classes/AllExceptionsFilter.html",[92,0.282,93,2.267]],["body/classes/AllExceptionsFilter.html",[3,0.165,4,0.144,5,0.144,7,0.229,8,0.719,12,0.416,13,0.018,18,0.165,20,1.057,31,1.459,44,0.012,45,0.012,92,0.298,93,3.216,94,1.392,95,3.217,96,3.426,97,2.055,98,6.025,99,2.32,100,2.436,101,1.554,102,3.043,103,2.27,104,3.976,105,6.916,106,1.463,107,5.337,108,1.783,109,1.419,110,1.626,111,2.436,112,1.879,113,2.211,114,3.748,115,5.337,116,6.025,117,6.44,118,3.976,119,4.598,120,1.212,121,3.216,122,1.027,123,5.337,124,5.548,125,1.057,126,1.057,127,2.576,128,2.396,129,1.987,130,3.976,131,3.976,132,5.337,133,3.426,134,3.976,135,3.976,136,3.976,137,3.426,138,2.254,139,3.976,140,3.976,141,3.976,142,3.976,143,3.976,144,3.976,145,5.337,146,3.976,147,3.976,148,3.976,149,3.976,150,3.976,151,2.522,152,3.976,153,3.976,154,3.976,155,3.976]],["title/interfaces/AllTime.html",[0,0.26,30,1.778]],["body/interfaces/AllTime.html",[0,0.474,1,1.447,2,0.906,3,0.148,4,0.129,5,0.129,6,1.889,7,0.206,8,0.668,9,0.72,10,2.907,11,1.069,12,0.497,13,0.018,14,1.736,15,1.038,16,0.72,17,2.01,18,0.284,19,2.69,20,1.779,21,3.546,22,3.546,23,3.546,24,3.546,25,3.546,26,3.546,27,3.546,28,3.546,29,3.546,30,2.69,31,2.089,32,1.889,33,2.341,34,1.889,35,1.597,36,1.889,37,1.889,38,1.889,39,1.889,40,1.309,41,1.889,42,1.685,43,0.754,44,0.011,45,0.011]],["title/controllers/AppController.html",[40,1.381,156,2.643]],["body/controllers/AppController.html",[3,0.086,4,0.075,5,0.075,7,0.12,9,1.158,11,0.296,12,0.475,13,0.018,18,0.086,20,1.455,40,1.215,44,0.008,45,0.008,46,4.298,92,0.156,97,0.801,99,2.209,100,0.841,101,0.964,103,0.885,106,1.002,109,1.885,110,1.009,111,0.841,113,1.215,120,1.257,121,2.486,122,1.236,125,0.553,126,0.553,128,1.996,138,1.444,156,2.326,157,1.173,158,1.793,159,5.471,160,4.713,161,4.704,162,2.081,163,2.081,164,1.254,165,3.312,166,2.081,167,1.461,168,2.081,169,1.793,170,1.254,171,1.793,172,2.146,173,0.553,174,2.326,175,0.801,176,1.996,177,1.793,178,1.348,179,2.081,180,1.461,181,1.793,182,1.461,183,2.081,184,2.081,185,1.867,186,2.081,187,1.655,188,2.081,189,2.081,190,1.254,191,1.867,192,1.793,193,1.603,194,1.996,195,2.081,196,1.339,197,1.793,198,2.854,199,3.312,200,2.081,201,2.081,202,2.081,203,2.081,204,1.603,205,2.081,206,1.793,207,1.461,208,2.081,209,2.081,210,2.081,211,2.081,212,2.081,213,2.081,214,1.793,215,2.081,216,2.081,217,2.081,218,2.081,219,0.763,220,2.081,221,1.254,222,2.081,223,2.081,224,1.603,225,2.081,226,1.461,227,2.081,228,1.483,229,2.081,230,2.081,231,2.081,232,2.081,233,1.603,234,2.081,235,2.081,236,2.081,237,2.854,238,2.081,239,2.081,240,3.312,241,2.081,242,4.126,243,2.146,244,2.353,245,1.254,246,2.733,247,2.326,248,2.186,249,3.607,250,4.704,251,4.713,252,3.04,253,2.077,254,1.461,255,1.793,256,3.544,257,2.081,258,1.793,259,2.081,260,2.081,261,3.179,262,2.552,263,2.326,264,2.326,265,1.348,266,2.854,267,1.461,268,2.081,269,2.486,270,3.555,271,2.146,272,1.793,273,2.081,274,2.081,275,1.793,276,1.793,277,1.603,278,1.603,279,1.793,280,1.461,281,2.081,282,1.461,283,2.081,284,1.603,285,4.704,286,4.126,287,4.126,288,2.081,289,3.312,290,2.552,291,2.081,292,2.081,293,2.081,294,2.081,295,1.603,296,2.081,297,2.081,298,2.081,299,1.254,300,2.081,301,2.081,302,2.081,303,2.081,304,2.081,305,2.081]],["title/modules/AppModule.html",[16,0.759,306,2.643]],["body/modules/AppModule.html",[3,0.155,4,0.135,5,0.135,13,0.018,16,1.033,18,0.155,44,0.012,45,0.012,92,0.28,93,3.085,119,3.222,122,1.433,125,0.994,126,0.994,156,4.1,157,2.886,176,4.092,177,3.222,191,3.828,192,3.222,193,2.881,219,1.372,253,1.512,306,5.259,307,2.108,308,3.085,309,3.222,310,3.222,311,3.222,312,4.399,313,4.399,314,4.092,315,3.596,316,2.626,317,2.423,318,3.74,319,3.944,320,4.498,321,2.253,322,2.423,323,3.74,324,3.944,325,2.886,326,1.981,327,5.121,328,3.74,329,3.74,330,2.626,331,2.881,332,2.108,333,3.74,334,3.317,335,2.626,336,3.74,337,3.74,338,2.881,339,3.944,340,3.74,341,2.626,342,3.74,343,3.74,344,3.74,345,3.74,346,3.74,347,3.74,348,3.222,349,2.881,350,3.74,351,3.222,352,3.74,353,3.74,354,2.881,355,3.74,356,2.881,357,2.881]],["title/injectables/AppService.html",[176,2.267,358,1.381]],["body/injectables/AppService.html",[3,0.226,4,0.197,5,0.197,7,0.314,11,0.928,13,0.017,18,0.226,44,0.015,45,0.015,92,0.409,101,1.899,106,1.324,120,1.661,122,1.049,125,1.449,176,3.929,358,2.393,359,2.888,360,4.697,361,7.232,362,5.451,363,2,364,5.451,365,5.451]],["title/interfaces/Assists.html",[0,0.26,56,1.381]],["body/interfaces/Assists.html",[0,0.51,1,1.479,2,0.944,3,0.154,4,0.135,5,0.135,7,0.214,8,0.687,9,0.75,11,0.725,12,0.402,13,0.018,14,1.744,15,1.082,16,0.75,18,0.306,43,1.231,44,0.012,45,0.012,47,1.503,48,1.503,49,1.58,50,2.24,51,1.58,52,1.58,53,2.24,54,2.298,55,1.503,56,2.408,57,1.58,58,1.58,59,1.58,60,2.24,61,1.58,62,1.58,63,1.58,64,2.24,65,1.58,66,1.58,67,1.58,68,1.58,69,1.58,70,1.58,71,1.58,72,1.58,73,2.663,74,2.663,75,2.663,76,2.135,77,1.503,78,1.58,79,1.58,80,1.58,81,2.24,82,1.963,83,1.58,84,1.58,85,1.503,86,1.503,87,1.58,88,1.58,89,1.58,90,1.58,91,1.431]],["title/interfaces/Breakdowns.html",[0,0.26,81,1.449]],["body/interfaces/Breakdowns.html",[0,0.51,1,1.479,2,0.944,3,0.154,4,0.135,5,0.135,7,0.214,8,0.687,9,0.75,11,0.725,12,0.402,13,0.018,14,1.734,15,1.082,16,0.75,18,0.306,43,1.231,44,0.012,45,0.012,47,1.503,48,1.503,49,1.58,50,2.24,51,1.58,52,1.58,53,2.24,54,2.632,55,1.503,56,2.632,57,1.58,58,1.58,59,1.58,60,2.24,61,1.58,62,1.58,63,1.58,64,2.24,65,1.58,66,1.58,67,1.58,68,1.58,69,1.58,70,1.58,71,1.58,72,1.58,73,1.58,74,1.58,75,1.58,76,2.594,77,1.503,78,1.58,79,1.58,80,1.58,81,2.411,82,1.963,83,1.58,84,1.58,85,1.503,86,1.503,87,1.58,88,1.58,89,1.58,90,1.58,91,1.431]],["title/interfaces/Choice.html",[0,0.26,366,1.88]],["body/interfaces/Choice.html",[0,0.436,2,1.312,3,0.214,4,0.187,5,0.187,7,0.298,8,0.85,11,1.078,12,0.471,13,0.017,14,1.144,18,0.261,20,1.888,44,0.014,45,0.014,109,1.936,194,3.803,196,2.088,244,1.807,249,3.626,252,2.736,261,3.978,366,3.406,367,3.626,368,3.978,369,4.432,370,4.449]],["title/classes/CommandValidationFilter.html",[92,0.282,371,2.121]],["body/classes/CommandValidationFilter.html",[3,0.17,4,0.148,5,0.148,7,0.236,8,0.734,12,0.376,13,0.018,18,0.17,20,1.448,44,0.012,45,0.012,92,0.408,94,1.434,95,3.055,97,2.096,99,2.354,100,2.473,101,1.585,102,3.079,106,1.322,108,1.368,109,1.448,110,1.248,111,2.473,112,1.936,113,2.244,114,3.823,120,1.248,122,1.254,125,1.089,126,1.089,138,1.905,151,1.936,173,1.089,175,1.577,196,2.473,219,2.244,221,3.28,228,1.835,295,3.156,299,2.468,371,3.069,372,3.685,373,3.529,374,6.116,375,4.096,376,4.096,377,6.517,378,5.269,379,6.517,380,4.096,381,5.445,382,4.096,383,2.309,384,4.096,385,2.309,386,4.096,387,3.069,388,4.096,389,4.096,390,4.096,391,4.096,392,3.529,393,3.529,394,3.156,395,2.72]],["title/interfaces/CsrsRootObject.html",[0,0.26,42,1.778]],["body/interfaces/CsrsRootObject.html",[0,0.49,1,1.829,2,1.022,3,0.167,4,0.146,5,0.146,6,2.131,7,0.232,8,0.725,9,0.812,10,3.057,11,1.048,12,0.372,13,0.018,14,1.718,15,1.171,16,0.812,17,2.267,18,0.293,19,2.863,20,1.611,21,3.21,22,3.21,23,3.21,24,3.21,25,3.21,26,3.21,27,3.21,28,3.21,29,3.21,30,2.541,31,2.223,32,2.131,33,3.057,34,2.131,35,1.801,36,2.131,37,2.131,38,2.131,39,2.131,40,1.476,41,2.131,42,2.541,43,1.368,44,0.012,45,0.012]],["title/interfaces/Current.html",[0,0.26,19,1.778]],["body/interfaces/Current.html",[0,0.474,1,1.447,2,0.906,3,0.148,4,0.129,5,0.129,6,1.889,7,0.206,8,0.668,9,0.72,10,2.907,11,1.069,12,0.497,13,0.018,14,1.736,15,1.038,16,0.72,17,2.01,18,0.284,19,2.907,20,1.779,21,3.546,22,3.546,23,3.546,24,3.546,25,3.546,26,3.546,27,3.546,28,3.546,29,3.546,30,2.341,31,2.089,32,1.889,33,2.341,34,1.889,35,1.597,36,1.889,37,1.889,38,1.889,39,1.889,40,1.309,41,1.889,42,1.685,43,0.754,44,0.011,45,0.011]],["title/interfaces/Damage.html",[0,0.26,60,1.449]],["body/interfaces/Damage.html",[0,0.51,1,1.479,2,0.944,3,0.154,4,0.135,5,0.135,7,0.214,8,0.687,9,0.75,11,0.725,12,0.402,13,0.018,14,1.744,15,1.082,16,0.75,18,0.306,43,1.231,44,0.012,45,0.012,47,1.503,48,1.503,49,1.58,50,2.24,51,1.58,52,1.58,53,2.24,54,2.298,55,1.503,56,2.298,57,1.58,58,1.58,59,1.58,60,2.411,61,2.663,62,2.663,63,2.663,64,2.24,65,1.58,66,1.58,67,1.58,68,1.58,69,1.58,70,1.58,71,1.58,72,1.58,73,1.58,74,1.58,75,1.58,76,2.135,77,1.503,78,1.58,79,1.58,80,1.58,81,2.24,82,1.963,83,1.58,84,1.58,85,1.503,86,1.503,87,1.58,88,1.58,89,1.58,90,1.58,91,1.431]],["title/interfaces/Data.html",[0,0.26,43,0.796]],["body/interfaces/Data.html",[0,0.502,1,1.403,2,0.856,3,0.14,4,0.122,5,0.122,7,0.194,8,0.641,9,0.68,11,0.677,12,0.492,13,0.018,14,1.739,15,0.981,16,0.68,18,0.301,43,1.269,44,0.011,45,0.011,47,1.362,48,1.362,49,1.432,50,2.126,51,1.432,52,1.432,53,2.657,54,2.202,55,1.362,56,2.202,57,1.432,58,1.432,59,1.432,60,2.657,61,1.432,62,1.432,63,1.432,64,2.657,65,1.432,66,1.432,67,1.432,68,1.432,69,1.432,70,1.432,71,1.432,72,1.432,73,1.432,74,1.432,75,1.432,76,2.026,77,1.362,78,1.432,79,1.432,80,1.432,81,2.657,82,2.31,83,1.432,84,1.432,85,2.427,86,2.427,87,2.552,88,2.552,89,2.552,90,2.552,91,1.297]],["title/interfaces/DefineDiscordCommand.html",[0,0.26,194,2.267]],["body/interfaces/DefineDiscordCommand.html",[0,0.404,2,1.159,3,0.189,4,0.165,5,0.165,7,0.263,8,0.787,11,1.052,12,0.524,13,0.017,14,1.427,18,0.242,20,1.213,44,0.013,45,0.013,109,1.867,110,2.294,194,4.231,196,1.845,244,2.377,249,4.77,252,3.599,261,5.233,366,3.394,367,3.204,368,3.515,369,5.044,370,5.852]],["title/injectables/DiscordApiService.html",[191,2.121,358,1.381]],["body/injectables/DiscordApiService.html",[3,0.111,4,0.097,5,0.097,7,0.154,8,0.541,11,0.998,12,0.473,13,0.018,14,1.07,18,0.111,20,0.71,31,0.98,43,1.022,44,0.009,45,0.009,92,0.2,99,2.219,100,1.954,101,1.17,102,2.283,103,1.709,106,1.526,108,1.614,109,1.61,110,1.472,111,1.954,112,1.262,113,1.474,120,1.472,122,1.166,125,0.71,129,1.334,138,1.881,151,2.862,190,1.609,191,2.265,194,3.473,196,1.625,197,2.3,219,2.428,221,3.238,228,1.799,244,2.017,249,4.048,262,3.095,290,3.095,299,1.609,325,3.03,326,1.414,332,1.505,358,1.474,359,1.414,363,2.473,367,1.875,395,2.414,396,4.981,397,2.3,398,4.831,399,4.831,400,5.375,401,5.375,402,4.018,403,2.67,404,3.774,405,3.129,406,4.018,407,4.018,408,4.018,409,2.67,410,3.095,411,2.67,412,4.018,413,2.67,414,4.018,415,2.67,416,2.67,417,2.057,418,2.057,419,2.057,420,5.764,421,2.67,422,5.764,423,2.67,424,4.018,425,2.057,426,1.875,427,2.559,428,2.67,429,2.67,430,2.67,431,2.67,432,2.67,433,3.721,434,3.721,435,4.162,436,2.67,437,2.67,438,2.559,439,2.559,440,2.67,441,2.67,442,3.462,443,2.67,444,2.67,445,2.67,446,2.67,447,2.67,448,2.67]],["title/classes/GetDto.html",[92,0.282,449,2.643]],["body/classes/GetDto.html",[3,0.211,4,0.184,5,0.184,7,0.294,8,0.843,9,1.367,11,0.89,12,0.352,13,0.018,18,0.211,44,0.014,45,0.014,92,0.382,94,1.781,106,1.236,122,0.98,126,1.353,164,3.066,173,1.353,244,1.781,246,3.126,247,3.526,248,3.314,252,3.314,253,2.058,271,4.388,272,4.385,366,2.543,449,4.393,450,3.921,451,3.574,452,5.09,453,3.526,454,3.297,455,4.385,456,5.39,457,5.09]],["title/controllers/HaloDotApiController.html",[40,1.381,458,2.643]],["body/controllers/HaloDotApiController.html",[3,0.136,4,0.119,5,0.119,7,0.19,11,0.667,13,0.018,18,0.136,31,1.208,35,1.475,40,1.208,44,0.011,45,0.011,92,0.247,99,2.511,100,1.332,101,1.364,102,1.556,103,1.4,106,1.324,111,1.332,113,1.208,120,1.662,121,2.823,122,1.362,125,0.876,126,0.876,128,1.984,129,1.645,138,1.909,151,2.577,157,1.856,169,2.837,172,2.133,173,0.876,174,1.856,175,1.268,178,2.133,180,2.312,181,2.837,190,1.984,196,1.332,204,2.537,219,2.001,228,2.442,269,1.984,325,2.641,326,1.745,330,2.312,332,1.856,334,4.586,335,4.171,363,1.719,395,1.645,404,3.29,405,2.133,417,2.537,418,2.537,419,2.537,427,1.745,438,1.745,439,1.745,458,3.29,459,4.576,460,2.837,461,2.837,462,2.823,463,5.941,464,5.941,465,5.941,466,3.293,467,3.293,468,3.293,469,2.837,470,2.837,471,2.537,472,2.214,473,2.133,474,3.293,475,3.293,476,3.293,477,2.837,478,3.293,479,2.837,480,2.837,481,2.837,482,3.293,483,3.293,484,3.293,485,3.293,486,3.293,487,3.293,488,3.293,489,3.293,490,3.293,491,3.293,492,3.293,493,2.837,494,3.293,495,5.454,496,3.293,497,3.293,498,3.293,499,3.293,500,3.293,501,5.454,502,3.293,503,3.293,504,3.293,505,3.293]],["title/injectables/HaloDotApiMiddleware.html",[358,1.381,506,2.643]],["body/injectables/HaloDotApiMiddleware.html",[3,0.187,4,0.163,5,0.163,7,0.26,8,0.782,12,0.312,13,0.018,18,0.187,20,1.201,31,2.483,44,0.013,45,0.013,92,0.339,97,1.739,99,2.469,100,2.736,101,1.689,106,1.409,108,1.508,109,1.201,110,1.376,111,2.347,112,2.134,113,2.129,120,1.376,121,2.721,122,1.117,125,1.201,127,2.925,138,1.58,167,4.752,267,4.075,334,4.154,358,2.129,359,2.393,506,4.075,507,4.939,508,3.891,509,5.803,510,5.524,511,5.83,512,6.767,513,4.516,514,3.479,515,5.803,516,4.516,517,5.803,518,3.479,519,4.516,520,4.516,521,4.516,522,4.516]],["title/modules/HaloDotApiModule.html",[16,0.759,312,2.438]],["body/modules/HaloDotApiModule.html",[3,0.146,4,0.128,5,0.128,12,0.34,13,0.018,16,0.992,18,0.146,44,0.011,45,0.011,92,0.264,93,2.96,95,1.76,97,1.357,101,1.026,106,0.856,108,1.177,109,0.937,110,1.074,120,1.074,121,2.123,122,1.382,125,0.937,126,1.306,157,2.77,172,2.282,173,0.937,219,1.293,269,2.123,307,1.986,308,2.96,312,4.778,314,4.017,315,3.45,316,2.474,317,2.282,319,3.785,320,4.358,324,3.785,325,3.189,326,1.867,331,2.714,332,1.986,334,4.319,335,3.45,338,2.714,339,3.785,348,3.036,349,2.714,354,2.714,356,2.714,357,2.714,405,2.282,426,3.45,433,3.785,434,3.785,458,3.973,459,3.785,462,3.409,472,3.15,473,2.282,506,2.474,507,2.714,523,3.036,524,3.523,525,3.036,526,3.523,527,3.523,528,4.914,529,6.121,530,3.523,531,4.914,532,4.914,533,3.523,534,3.523,535,3.523,536,3.523,537,5.546,538,3.523,539,3.036,540,3.036,541,3.973,542,4.233,543,4.233,544,3.523,545,3.523,546,3.523,547,3.523]],["title/injectables/HaloDotApiService.html",[358,1.381,472,1.778]],["body/injectables/HaloDotApiService.html",[0,0.388,1,1.01,3,0.081,4,0.071,5,0.071,7,0.113,8,0.427,9,0.802,10,2.152,11,0.966,12,0.345,13,0.018,14,1.574,15,0.573,16,0.397,18,0.242,19,1.878,20,1.211,21,2.106,22,2.106,23,2.106,24,2.106,25,2.106,26,2.106,27,2.106,28,2.106,29,2.106,30,1.496,31,1.458,32,1.042,33,1.496,34,2.413,35,2.04,36,2.413,37,2.413,38,1.042,39,1.042,40,0.722,41,1.042,42,0.929,43,0.416,44,0.007,45,0.007,92,0.148,99,2.433,100,1.607,101,0.922,102,1.878,103,1.347,106,1.417,108,1.328,109,1.057,110,1.211,111,0.795,112,0.929,113,1.458,120,1.388,122,0.961,125,0.523,128,2.395,129,1.582,138,2.212,151,2.521,167,4.098,190,1.185,219,2.269,221,2.395,228,1.78,325,2.568,326,1.042,332,1.109,358,1.162,359,1.042,363,2.319,395,1.986,404,3.199,405,2.575,417,1.515,418,1.515,419,1.515,425,4.495,426,2.224,427,2.106,433,3.509,434,2.439,438,2.106,439,2.106,442,2.728,462,2.395,472,1.496,477,3.424,479,2.728,480,4.597,481,1.695,514,1.515,537,4.302,539,2.728,540,2.728,541,2.791,542,2.728,543,2.728,548,1.695,549,3.974,550,4.556,551,3.925,552,3.167,553,3.167,554,1.967,555,3.167,556,1.967,557,3.424,558,1.967,559,3.167,560,1.967,561,3.167,562,1.967,563,1.967,564,3.167,565,1.967,566,3.974,567,3.167,568,1.967,569,1.967,570,4.556,571,1.967,572,3.167,573,1.967,574,1.967,575,5.336,576,3.167,577,1.967,578,3.167,579,3.167,580,1.695,581,1.967,582,3.167,583,1.695,584,1.967,585,1.967,586,3.167,587,1.967,588,1.967,589,1.967,590,1.967]],["title/interfaces/Kills.html",[0,0.26,54,1.381]],["body/interfaces/Kills.html",[0,0.509,1,1.467,2,0.931,3,0.152,4,0.133,5,0.133,7,0.211,8,0.68,9,0.739,11,0.718,12,0.43,13,0.018,14,1.745,15,1.066,16,0.739,18,0.305,43,1.221,44,0.011,45,0.011,47,1.481,48,1.481,49,1.557,50,2.223,51,1.557,52,1.557,53,2.223,54,2.395,55,1.481,56,2.284,57,1.557,58,1.557,59,1.557,60,2.223,61,1.557,62,1.557,63,1.557,64,2.223,65,1.557,66,1.557,67,1.557,68,1.557,69,2.647,70,2.647,71,2.647,72,2.647,73,1.557,74,1.557,75,1.557,76,2.119,77,1.481,78,1.557,79,1.557,80,1.557,81,2.223,82,1.943,83,1.557,84,1.557,85,1.481,86,1.481,87,1.557,88,1.557,89,1.557,90,1.557,91,1.41]],["title/interfaces/Matches.html",[0,0.26,76,1.381]],["body/interfaces/Matches.html",[0,0.509,1,1.467,2,0.931,3,0.152,4,0.133,5,0.133,7,0.211,8,0.68,9,0.739,11,0.718,12,0.43,13,0.018,14,1.745,15,1.066,16,0.739,18,0.305,43,1.221,44,0.011,45,0.011,47,1.481,48,1.481,49,1.557,50,2.223,51,1.557,52,1.557,53,2.223,54,2.284,55,1.481,56,2.284,57,1.557,58,1.557,59,1.557,60,2.223,61,1.557,62,1.557,63,1.557,64,2.223,65,1.557,66,1.557,67,1.557,68,1.557,69,1.557,70,1.557,71,1.557,72,1.557,73,1.557,74,1.557,75,1.557,76,2.284,77,2.517,78,2.647,79,2.647,80,2.647,81,2.223,82,1.943,83,1.557,84,1.557,85,1.481,86,1.481,87,1.557,88,1.557,89,1.557,90,1.557,91,1.41]],["title/classes/MessageFromUserGuard.html",[92,0.282,178,2.438]],["body/classes/MessageFromUserGuard.html",[3,0.21,4,0.184,5,0.184,7,0.293,12,0.351,13,0.018,18,0.21,44,0.014,45,0.014,92,0.381,94,1.776,97,2.404,101,1.818,106,1.232,108,1.695,109,1.349,110,1.546,120,1.546,122,1.202,126,1.349,173,1.349,174,4.085,175,1.954,178,4.045,180,4.385,363,1.862,369,4.385,471,4.81,583,4.372,591,4.372,592,6.765,593,6.245,594,6.245,595,5.075,596,4.372,597,5.075,598,4.372]],["title/classes/MessageToUpperPipe.html",[92,0.282,182,2.643]],["body/classes/MessageToUpperPipe.html",[3,0.214,4,0.187,5,0.187,7,0.298,12,0.357,13,0.018,18,0.214,44,0.014,45,0.014,92,0.387,94,1.807,97,2.43,101,1.838,106,1.254,108,1.725,109,1.373,110,1.573,122,1.215,126,1.373,173,1.373,174,4.177,175,1.988,182,4.432,224,3.978,363,1.895,599,5.438,600,4.449,601,6.817,602,6.312,603,5.164,604,5.164,605,5.164,606,5.164]],["title/controllers/Oauth2DiscordController.html",[40,1.381,607,2.643]],["body/controllers/Oauth2DiscordController.html",[3,0.177,4,0.155,5,0.155,7,0.247,12,0.295,13,0.018,18,0.177,31,2.677,40,1.569,44,0.013,45,0.013,92,0.321,99,1.646,100,1.729,101,1.63,106,1.038,108,1.428,109,1.137,110,1.303,111,2.265,113,1.569,120,1.303,122,0.823,124,3.683,125,1.137,129,2.136,138,2.186,157,2.41,164,2.576,167,5.05,173,1.489,219,2.292,228,2.797,253,1.729,341,3.932,363,1.569,461,3.683,510,4.825,514,4.314,607,3.932,608,4.314,609,3.683,610,3.683,611,6.245,612,4.275,613,7.379,614,4.275,615,4.275,616,4.275,617,4.275,618,4.275,619,4.275,620,6.245,621,6.245,622,4.275,623,4.275,624,4.275,625,4.275,626,4.275,627,4.275,628,4.275,629,4.275]],["title/modules/Oauth2DiscordModule.html",[16,0.759,313,2.438]],["body/modules/Oauth2DiscordModule.html",[3,0.23,4,0.201,5,0.201,13,0.017,16,1.331,18,0.23,44,0.015,45,0.015,92,0.417,122,1.269,125,1.477,157,3.718,307,3.131,313,4.272,341,3.9,607,4.939,608,4.279,610,4.785,630,5.554,631,5.554]],["title/injectables/PrismaService.html",[358,1.381,632,1.994]],["body/injectables/PrismaService.html",[3,0.199,4,0.174,5,0.174,7,0.278,12,0.332,13,0.018,18,0.199,44,0.014,45,0.014,92,0.361,97,1.853,101,1.759,106,1.467,108,1.607,109,1.279,110,1.466,120,1.841,122,1.163,125,1.279,160,6.274,219,2.712,228,2.706,358,2.217,359,2.549,632,3.201,633,4.145,634,6.042,635,6.604,636,6.042,637,6.042,638,6.927,639,4.812,640,4.145,641,4.812,642,3.707,643,4.812,644,4.812,645,4.812]],["title/interfaces/QueueGroups.html",[0,0.26,33,1.778]],["body/interfaces/QueueGroups.html",[0,0.484,1,1.504,2,0.975,3,0.159,4,0.139,5,0.139,6,2.033,7,0.221,8,0.702,9,0.775,10,2.999,11,1.039,12,0.409,13,0.018,14,1.711,15,1.117,16,0.775,17,2.163,18,0.29,19,2.796,20,1.573,21,3.135,22,3.135,23,3.135,24,3.135,25,3.135,26,3.135,27,3.135,28,3.135,29,3.135,30,2.462,31,2.614,32,2.033,33,2.796,34,3.362,35,2.65,36,3.135,37,3.135,38,3.362,39,3.135,40,2.171,41,3.135,42,1.813,43,0.812,44,0.012,45,0.012]],["title/classes/RegisterDto.html",[92,0.282,646,2.643]],["body/classes/RegisterDto.html",[3,0.203,4,0.177,5,0.177,7,0.282,8,0.822,9,1.343,11,0.991,12,0.422,13,0.017,18,0.203,44,0.014,45,0.014,92,0.367,94,1.712,106,1.482,122,0.941,126,1.301,164,3.678,173,1.301,244,2.136,246,3.05,247,3.441,248,3.234,252,3.691,253,2.817,254,4.672,255,5.259,258,5.259,366,2.444,451,4.286,453,3.751,454,3.169,646,4.286,647,4.214,648,5.259,649,4.892,650,4.892]],["title/interfaces/Response.html",[0,0.26,31,1.381]],["body/interfaces/Response.html",[0,0.488,1,1.527,2,1.006,3,0.164,4,0.143,5,0.143,6,2.097,7,0.228,8,0.717,9,0.799,10,3.434,11,1.045,12,0.415,13,0.018,14,1.716,15,1.152,16,0.799,17,2.231,18,0.292,19,3.39,20,1.598,21,3.185,22,3.185,23,3.185,24,3.185,25,3.185,26,3.185,27,3.185,28,3.185,29,3.185,30,3.037,31,2.359,32,3.405,33,2.514,34,2.097,35,1.773,36,2.097,37,2.097,38,2.097,39,2.097,40,1.452,41,2.097,42,1.87,43,0.837,44,0.012,45,0.012]],["title/interfaces/Season.html",[0,0.26,10,1.778]],["body/interfaces/Season.html",[0,0.474,1,1.447,2,0.906,3,0.148,4,0.129,5,0.129,6,1.889,7,0.206,8,0.668,9,0.72,10,3.055,11,1.069,12,0.497,13,0.018,14,1.736,15,1.038,16,0.72,17,2.01,18,0.284,19,2.69,20,1.779,21,3.546,22,3.546,23,3.546,24,3.546,25,3.546,26,3.546,27,3.546,28,3.546,29,3.546,30,2.341,31,2.089,32,1.889,33,2.341,34,1.889,35,1.597,36,1.889,37,1.889,38,1.889,39,1.889,40,1.309,41,1.889,42,1.685,43,0.754,44,0.011,45,0.011]],["title/interfaces/ServiceRecord.html",[0,0.26,91,1.449]],["body/interfaces/ServiceRecord.html",[0,0.512,1,1.803,2,0.959,3,0.156,4,0.137,5,0.137,7,0.218,8,0.694,9,0.761,11,0.733,12,0.356,13,0.018,14,1.735,15,1.098,16,0.761,18,0.307,43,1.5,44,0.012,45,0.012,47,1.525,48,1.525,49,1.604,50,2.258,51,1.604,52,1.604,53,2.258,54,2.312,55,1.525,56,2.312,57,1.604,58,1.604,59,1.604,60,2.258,61,1.604,62,1.604,63,1.604,64,2.258,65,1.604,66,1.604,67,1.604,68,1.604,69,1.604,70,1.604,71,1.604,72,1.604,73,1.604,74,1.604,75,1.604,76,2.152,77,1.525,78,1.604,79,1.604,80,1.604,81,2.258,82,1.983,83,1.604,84,1.604,85,1.525,86,1.525,87,1.604,88,1.604,89,1.604,90,1.604,91,1.983]],["title/modules/SharedModule.html",[16,0.759,314,2.267]],["body/modules/SharedModule.html",[3,0.131,4,0.115,5,0.115,13,0.018,16,0.92,18,0.131,44,0.01,45,0.01,92,0.238,93,2.746,95,1.583,122,1.415,125,0.843,126,1.212,172,4.399,173,0.843,174,3.009,175,1.22,185,4.048,187,3.588,191,1.786,193,2.441,224,2.441,253,1.281,290,2.441,307,1.786,308,2.746,314,4.499,315,3.201,316,2.225,317,2.053,319,3.511,320,4.112,324,4.112,325,3.291,326,1.679,331,3.511,332,1.786,338,2.441,339,3.511,349,2.441,354,2.441,356,2.441,357,3.511,396,3.511,404,2.225,426,2.225,472,3.393,473,2.053,598,2.73,632,3.805,651,2.73,652,2.73,653,2.73,654,3.169,655,4.558,656,3.169,657,4.558,658,4.558,659,3.169,660,2.73,661,4.558,662,3.169,663,2.73,664,3.169,665,3.169,666,2.225,667,4.558,668,3.169,669,3.169,670,3.169,671,3.169,672,3.169,673,4.558,674,3.169,675,3.169,676,3.169,677,3.169,678,3.169,679,3.169,680,3.169,681,3.169,682,3.169,683,3.169,684,3.169,685,3.169,686,3.169,687,3.169,688,3.169,689,3.169,690,3.169,691,3.169,692,3.169,693,3.169]],["title/interfaces/Shots.html",[0,0.26,64,1.449]],["body/interfaces/Shots.html",[0,0.509,1,1.467,2,0.931,3,0.152,4,0.133,5,0.133,7,0.211,8,0.68,9,0.739,11,0.718,12,0.43,13,0.018,14,1.745,15,1.066,16,0.739,18,0.305,43,1.221,44,0.011,45,0.011,47,1.481,48,1.481,49,1.557,50,2.223,51,1.557,52,1.557,53,2.223,54,2.284,55,1.481,56,2.284,57,1.557,58,1.557,59,1.557,60,2.223,61,1.557,62,1.557,63,1.557,64,2.396,65,2.647,66,2.647,67,2.647,68,2.647,69,1.557,70,1.557,71,1.557,72,1.557,73,1.557,74,1.557,75,1.557,76,2.119,77,1.481,78,1.557,79,1.557,80,1.557,81,2.223,82,1.943,83,1.557,84,1.557,85,1.481,86,1.481,87,1.557,88,1.557,89,1.557,90,1.557,91,1.41]],["title/classes/StatsBaseCommand.html",[92,0.282,694,2.899]],["body/classes/StatsBaseCommand.html",[3,0.165,4,0.144,5,0.144,13,0.018,18,0.165,44,0.012,45,0.012,92,0.299,94,1.395,95,1.991,97,1.534,109,1.604,113,1.462,122,1.401,125,1.06,126,1.06,138,1.871,170,2.401,173,1.421,175,1.534,196,2.606,243,2.582,244,1.871,245,2.401,246,1.991,247,2.247,248,2.111,256,3.907,265,2.582,321,2.401,322,3.463,363,1.961,371,2.247,372,2.401,383,2.247,385,2.247,387,2.247,694,4.118,695,3.433,696,2.798,697,3.985,698,2.582,699,2.582,700,5.346,701,3.221,702,2.798,703,3.221,704,3.463,705,3.754,706,3.985,707,3.754,708,3.985,709,3.754,710,3.985,711,3.754,712,3.985,713,2.798,714,2.798,715,2.582,716,3.433,717,3.433,718,3.985,719,3.433,720,3.985,721,3.985,722,3.07,723,2.111,724,5.346,725,3.985,726,3.07]],["title/classes/StatsDto.html",[92,0.282,696,2.643]],["body/classes/StatsDto.html",[3,0.196,4,0.171,5,0.171,11,0.931,12,0.413,13,0.018,14,1.45,18,0.196,44,0.014,45,0.014,92,0.354,94,1.652,109,1.829,122,0.909,126,1.255,173,1.255,244,2.483,252,3.644,253,2.782,366,2.359,453,4.085,454,3.059,696,4.192,723,3.468,727,4.068,728,5.97,729,4.722,730,4.722,731,5.97,732,5.97,733,4.722,734,6.547,735,4.722]],["title/classes/StatsGetSubCommand.html",[92,0.282,709,2.643]],["body/classes/StatsGetSubCommand.html",[3,0.068,4,0.06,5,0.06,7,0.095,8,0.368,9,1.048,11,0.389,12,0.243,13,0.018,18,0.113,20,1.684,44,0.006,45,0.006,54,1.003,55,1.106,56,1.003,76,1.003,77,1.106,85,1.106,86,1.106,92,0.205,94,0.575,95,0.822,97,1.351,99,1.748,100,1.419,101,0.796,102,0.777,103,1.163,106,0.852,108,0.913,109,1.752,110,0.833,111,1.419,112,0.777,113,1.906,120,0.501,122,1.15,125,0.933,126,0.727,138,1.976,151,1.659,170,1.648,173,1.088,175,0.633,187,2.044,196,0.665,207,2.465,219,1.288,221,1.648,228,2.917,244,0.957,245,1.648,246,0.822,253,2.693,256,1.065,265,1.065,266,1.417,295,3.498,321,1.648,322,1.771,363,1.906,371,0.927,372,0.991,383,2.928,385,1.979,387,2.56,394,4.349,395,0.822,427,0.871,438,0.871,439,0.871,449,2.872,453,0.927,472,1.933,473,1.065,666,1.155,698,1.771,699,2.942,701,0.991,702,1.155,703,2.465,704,1.771,709,1.92,713,1.155,714,1.155,715,1.771,717,1.417,722,1.267,723,1.449,736,1.417,737,1.771,738,1.644,739,2.734,740,2.356,741,2.734,742,1.155,743,1.644,744,2.465,745,2.872,746,1.644,747,1.417,748,1.92,749,1.644,750,1.644,751,4.901,752,3.441,753,1.644,754,1.644,755,1.644,756,2.734,757,2.106,758,2.106,759,1.267,760,4.002,761,4.901,762,2.734,763,4.091,764,2.734,765,2.734,766,4.091,767,2.734,768,2.734,769,2.734,770,5.824,771,2.734,772,2.734,773,2.734,774,2.734,775,2.942,776,2.734,777,6.111,778,2.734,779,2.734,780,2.734,781,2.734,782,4.091,783,2.734,784,2.106,785,2.106,786,2.734,787,2.734,788,2.734,789,2.465,790,1.644,791,5.439,792,5.439,793,4.541,794,4.19,795,4.091,796,2.734,797,2.734,798,2.734,799,2.356,800,1.644,801,4.091,802,4.091,803,3.024,804,1.267,805,1.267,806,1.644,807,1.417,808,1.644,809,1.644,810,1.644,811,3.51,812,1.644,813,1.644,814,1.644,815,1.644,816,1.644,817,1.267,818,1.267,819,1.644,820,1.644,821,2.356,822,1.417,823,2.356,824,1.417,825,1.417,826,1.417,827,1.417,828,1.417]],["title/classes/StatsHelpDto.html",[92,0.282,829,2.643]],["body/classes/StatsHelpDto.html",[3,0.212,4,0.185,5,0.185,7,0.295,8,0.846,12,0.354,13,0.018,18,0.212,44,0.014,45,0.014,92,0.384,94,1.792,106,1.243,122,0.985,126,1.361,164,3.084,173,1.361,244,1.792,252,3.326,253,2.07,278,5.231,279,5.409,280,5.101,282,4.408,284,4.836,366,2.558,451,3.595,453,3.539,454,3.316,455,4.41,829,4.408,830,3.943,831,5.119,832,5.119,833,5.119]],["title/classes/StatsHelpSubCommand.html",[92,0.282,707,2.643]],["body/classes/StatsHelpSubCommand.html",[3,0.105,4,0.091,5,0.091,7,0.146,8,0.519,9,1.054,11,0.359,12,0.266,13,0.018,18,0.159,20,1.732,44,0.009,45,0.009,92,0.289,94,0.884,95,1.261,97,1.798,99,1.798,100,1.888,101,1.121,102,1.193,103,1.985,106,1.134,108,0.843,109,1.844,110,1.173,111,1.888,112,1.193,113,1.917,114,2.704,120,0.769,122,1.253,125,1.241,126,1.024,129,1.261,138,1.348,151,1.82,170,2.32,173,1.389,174,1.423,175,0.972,196,1.557,219,1.713,243,2.495,244,1.348,245,2.32,246,1.924,248,1.338,253,1.557,254,2.704,256,3.84,262,1.945,264,2.704,269,1.521,270,2.175,276,4.022,277,1.945,278,2.967,280,1.773,282,1.773,321,2.32,322,2.495,363,2.064,371,1.423,372,1.521,383,2.632,385,2.632,387,2.171,393,3.318,394,2.967,395,1.261,427,1.338,438,1.338,439,1.338,453,1.423,462,1.521,698,2.495,699,3.643,701,1.521,702,1.773,703,3.147,704,1.635,707,2.704,713,1.773,714,1.773,715,2.495,722,1.945,723,1.338,737,2.495,742,1.773,744,3.278,745,3.668,747,3.318,748,2.704,775,2.495,784,2.967,785,2.967,789,2.704,794,2.967,807,3.318,821,3.318,822,2.175,823,3.318,824,2.175,825,2.175,826,2.175,827,2.175,828,2.175,829,3.668,834,2.175,835,3.851,836,2.525,837,2.525,838,2.525,839,3.851,840,1.945,841,2.175,842,3.851,843,3.851,844,2.525,845,3.851,846,3.851,847,3.851,848,3.851,849,2.525,850,2.525,851,2.525,852,2.525,853,2.525,854,2.525,855,2.525,856,3.851,857,3.851,858,2.525,859,2.525,860,2.525,861,2.525,862,2.525,863,4.669,864,3.851,865,2.525,866,2.525,867,2.525,868,2.525,869,2.525,870,2.525,871,2.525,872,3.851,873,3.851,874,3.851,875,3.851,876,2.967,877,3.851,878,2.525,879,2.525,880,2.525,881,2.525,882,2.525,883,2.525,884,2.525,885,2.525,886,2.525,887,2.525,888,2.525,889,2.525]],["title/classes/StatsRegSubCommand.html",[92,0.282,705,2.643]],["body/classes/StatsRegSubCommand.html",[3,0.113,4,0.099,5,0.099,7,0.158,8,0.551,9,1.389,12,0.338,13,0.018,18,0.113,20,1.684,43,0.578,44,0.009,45,0.009,46,2.648,92,0.205,94,0.956,95,1.365,97,1.574,99,2.093,100,1.981,101,1.19,102,1.291,103,1.738,106,1.189,108,1.365,109,1.77,110,1.245,111,1.981,112,1.291,113,2.136,114,2.87,120,0.832,122,1.305,125,1.087,126,0.726,127,1.77,129,1.365,138,2.037,151,1.931,170,1.646,173,1.087,175,1.052,185,2.304,187,2.716,196,1.105,206,2.354,207,2.87,219,1.797,228,1.223,243,1.77,244,0.956,245,1.646,246,2.042,247,1.54,248,1.447,253,1.105,254,4.29,263,2.87,265,1.77,271,1.77,321,1.646,322,2.648,363,1.797,371,1.54,372,1.646,383,3.065,385,2.761,387,1.54,395,1.365,427,1.447,438,1.447,439,1.447,472,1.291,473,1.77,632,1.447,646,3.818,648,3.522,660,2.354,663,2.354,666,1.918,698,1.77,699,3.173,701,1.646,702,1.918,703,3.276,704,1.77,705,2.87,713,1.918,714,1.918,715,1.77,737,2.648,742,1.918,744,2.87,745,2.87,748,1.918,752,1.918,757,2.104,758,4.484,759,2.104,760,4.188,775,2.648,789,2.87,794,2.104,804,2.104,805,3.773,817,3.149,818,2.104,840,2.104,890,2.354,891,2.354,892,4.088,893,2.732,894,2.732,895,2.732,896,2.732,897,3.522,898,4.898,899,2.732,900,2.732,901,2.732,902,2.354,903,4.088,904,2.732,905,2.732,906,2.732,907,2.732,908,2.354,909,3.522,910,3.522,911,4.088,912,4.088,913,2.732,914,2.732,915,2.732]],["title/classes/StatsUpdateSubCommand.html",[92,0.282,711,2.643]],["body/classes/StatsUpdateSubCommand.html",[3,0.141,4,0.123,5,0.123,7,0.196,8,0.646,9,1.367,12,0.384,13,0.018,18,0.141,20,1.476,43,0.719,44,0.011,45,0.011,92,0.255,94,1.19,97,1.845,99,2.137,100,2.245,101,1.395,102,1.607,103,1.446,106,1.348,108,1.601,109,1.689,110,1.46,111,2.245,112,1.607,113,2.211,120,1.036,122,1.269,125,1.275,126,0.904,127,2.203,129,1.699,138,2.109,151,2.265,170,2.049,173,1.275,175,1.309,187,3.011,196,1.375,207,3.366,219,2.037,228,1.523,243,2.203,244,1.19,245,2.049,246,1.699,247,1.917,248,1.802,256,2.203,264,3.366,265,2.203,267,2.388,321,2.049,363,2.211,383,3.129,385,3.129,387,1.917,395,1.699,427,1.802,438,1.802,439,1.802,666,2.388,698,2.203,699,3.596,701,2.049,703,3.631,704,2.203,711,3.366,715,2.203,737,3.105,742,2.388,744,3.366,745,3.366,748,2.388,752,3.366,757,2.62,758,4.276,759,2.62,760,4.276,775,2.203,789,2.388,804,2.62,805,3.692,817,2.62,818,2.62,840,2.62,841,2.93,891,2.93,897,4.13,902,2.93,908,2.93,909,2.93,910,2.93,916,2.93,917,4.793,918,4.793,919,4.232,920,3.401,921,3.401,922,3.401]],["title/interfaces/Summary.html",[0,0.26,53,1.449]],["body/interfaces/Summary.html",[0,0.505,1,1.435,2,0.892,3,0.145,4,0.127,5,0.127,7,0.202,8,0.66,9,0.708,11,0.697,12,0.472,13,0.018,14,1.746,15,1.022,16,0.708,18,0.303,43,1.194,44,0.011,45,0.011,47,1.419,48,1.419,49,1.492,50,2.684,51,1.492,52,1.492,53,2.353,54,2.508,55,2.471,56,2.508,57,2.598,58,2.598,59,2.598,60,2.174,61,1.492,62,1.492,63,1.492,64,2.174,65,1.492,66,1.492,67,1.492,68,1.492,69,1.492,70,1.492,71,1.492,72,1.492,73,1.492,74,1.492,75,1.492,76,2.071,77,1.419,78,1.492,79,1.492,80,1.492,81,2.174,82,1.886,83,1.492,84,1.492,85,1.419,86,1.419,87,1.492,88,1.492,89,1.492,90,1.492,91,1.351]],["title/classes/TestCommand.html",[92,0.282,923,2.899]],["body/classes/TestCommand.html",[3,0.143,4,0.125,5,0.125,7,0.2,11,0.797,12,0.387,13,0.018,18,0.143,20,0.92,44,0.011,45,0.011,46,2.242,92,0.26,94,1.211,97,1.868,99,1.333,101,1.413,103,2.383,106,1.178,108,1.156,109,1.49,110,1.055,120,1.055,122,1.169,126,1.29,128,2.085,138,1.698,173,1.29,175,1.333,196,2.266,204,2.666,226,2.43,244,1.211,271,3.144,299,3.659,363,1.781,385,1.951,392,2.982,410,2.666,472,1.635,541,2.43,701,3.376,703,3.659,719,4.181,723,1.834,726,4.317,737,3.144,740,2.982,752,2.43,876,2.666,923,3.738,924,2.982,925,3.461,926,3.461,927,3.408,928,2.666,929,3.461,930,4.853,931,3.461,932,3.461,933,3.461,934,3.461,935,3.461,936,3.461,937,3.461,938,3.461,939,4.853,940,3.461,941,3.461,942,3.461,943,3.461,944,3.461,945,3.461,946,3.461,947,3.461,948,4.853,949,3.461,950,3.461,951,2.982,952,3.461,953,2.982,954,3.461,955,2.666,956,2.982,957,3.461,958,4.853,959,2.982,960,2.982,961,3.461,962,3.461,963,2.982,964,2.982,965,2.982,966,3.461,967,3.461,968,3.461]],["title/interfaces/TimePlayed.html",[0,0.26,82,1.449]],["body/interfaces/TimePlayed.html",[0,0.512,1,1.49,2,0.959,3,0.156,4,0.137,5,0.137,7,0.218,8,0.694,9,0.761,11,0.897,12,0.356,13,0.018,14,1.739,15,1.098,16,0.761,18,0.307,43,1.24,44,0.012,45,0.012,47,1.525,48,1.525,49,1.604,50,2.258,51,1.604,52,1.604,53,2.258,54,2.312,55,1.525,56,2.312,57,1.604,58,1.604,59,1.604,60,2.258,61,1.604,62,1.604,63,1.604,64,2.258,65,1.604,66,1.604,67,1.604,68,1.604,69,1.604,70,1.604,71,1.604,72,1.604,73,1.604,74,1.604,75,1.604,76,2.152,77,1.525,78,1.604,79,1.604,80,1.604,81,2.258,82,2.258,83,2.68,84,2.68,85,1.525,86,1.525,87,1.604,88,1.604,89,1.604,90,1.604,91,1.452]],["title/interfaces/ToJsonResponse.html",[0,0.26,927,2.643]],["body/interfaces/ToJsonResponse.html",[0,0.277,2,1.02,3,0.166,4,0.145,5,0.145,7,0.231,8,0.724,11,1.107,12,0.527,13,0.018,14,1.341,18,0.166,44,0.012,45,0.012,46,2.599,226,4.538,299,2.418,369,4.869,410,4.979,541,4.538,723,3.424,876,4.979,927,3.771,928,3.091,951,5.214,953,5.568,955,4.979,956,5.568,959,5.568,960,5.568,963,5.568,964,5.568,965,5.568,969,3.457,970,6.053,971,6.053,972,6.053]],["title/injectables/TwitterService.html",[185,2.121,358,1.381]],["body/injectables/TwitterService.html",[3,0.077,4,0.109,5,0.067,7,0.107,8,0.407,11,0.689,12,0.408,13,0.018,18,0.077,20,1.288,35,0.831,43,0.392,44,0.007,45,0.007,92,0.139,99,2.551,100,1.544,101,0.879,102,2.454,103,1.284,106,1.564,108,1.735,109,1.569,110,1.583,111,0.75,112,1.805,113,2.279,120,1.668,121,1.118,122,1.136,125,0.493,126,0.493,128,2.301,129,2.595,138,2.124,151,2.993,171,3.792,173,0.493,174,1.046,175,0.714,185,1.702,190,1.118,198,2.602,219,2.508,226,2.121,228,2.452,237,4.175,263,1.303,264,2.121,275,2.602,299,1.118,325,2.481,326,0.983,330,1.303,358,1.108,359,0.983,363,2.529,383,1.702,387,1.046,395,2.595,405,1.956,425,1.429,427,2.752,438,2.752,439,2.752,462,1.118,469,1.598,470,1.598,493,1.598,511,2.602,551,3.792,557,1.598,580,1.598,632,2.332,723,0.983,775,1.202,784,1.429,785,2.942,799,2.602,955,1.429,973,1.598,974,3.82,975,3.82,976,3.82,977,3.02,978,4.402,979,3.02,980,3.02,981,3.02,982,3.02,983,1.855,984,3.82,985,3.82,986,3.02,987,3.02,988,6.771,989,1.855,990,6.21,991,1.855,992,3.02,993,1.855,994,3.02,995,1.855,996,3.02,997,1.855,998,3.02,999,3.02,1000,1.855,1001,3.02,1002,1.855,1003,3.82,1004,1.855,1005,3.82,1006,3.02,1007,1.855,1008,3.02,1009,1.855,1010,1.855,1011,1.855,1012,1.855,1013,1.855,1014,1.855,1015,1.855,1016,1.598,1017,1.598,1018,1.598,1019,3.02,1020,1.855,1021,1.598,1022,1.598,1023,1.855,1024,1.855,1025,1.855,1026,1.855,1027,1.855,1028,1.855,1029,1.855,1030,1.855,1031,1.855,1032,1.855,1033,1.855,1034,1.855,1035,1.855,1036,1.855,1037,3.82,1038,1.855,1039,1.855,1040,1.855,1041,1.855,1042,1.855,1043,3.02,1044,1.855,1045,3.02,1046,1.855,1047,1.855,1048,1.855,1049,1.855,1050,1.855,1051,1.855,1052,1.855,1053,1.855,1054,1.855,1055,3.02,1056,1.855,1057,1.855,1058,1.855,1059,1.855,1060,1.855,1061,1.855,1062,1.855,1063,1.855,1064,1.855,1065,3.82,1066,3.82,1067,1.855,1068,1.855,1069,1.855,1070,1.855,1071,1.855,1072,1.855,1073,1.855,1074,1.855,1075,1.855,1076,1.855,1077,4.402,1078,1.855,1079,1.855,1080,1.855,1081,1.855,1082,1.855,1083,1.855,1084,3.02,1085,1.855,1086,3.82,1087,3.02,1088,3.02,1089,3.02,1090,1.855,1091,1.855,1092,1.855,1093,1.855]],["title/classes/UpdateDto.html",[92,0.282,919,2.643]],["body/classes/UpdateDto.html",[3,0.218,4,0.19,5,0.19,7,0.303,8,0.86,9,1.386,11,0.908,12,0.363,13,0.017,18,0.218,44,0.014,45,0.014,92,0.394,94,1.84,106,1.276,122,1.012,126,1.398,164,3.167,173,1.398,244,1.84,246,3.188,247,3.597,248,3.38,252,3.38,253,2.58,366,2.626,451,3.691,453,3.597,454,3.405,919,4.48,1094,4.529,1095,5.256]],["title/injectables/UserService.html",[187,1.88,358,1.381]],["body/injectables/UserService.html",[3,0.143,4,0.125,5,0.125,7,0.199,12,0.494,13,0.018,14,1.074,18,0.143,43,1.352,44,0.011,45,0.011,92,0.259,101,1.411,103,1.469,106,1.609,108,2.213,109,1.762,110,2.019,120,1.947,122,1.077,125,0.918,127,2.238,138,1.696,187,2.421,214,4.175,219,2.732,221,4.308,358,1.778,359,1.83,363,2.345,632,3.215,642,2.661,723,2.567,803,2.976,1018,2.976,1096,2.976,1097,4.846,1098,4.846,1099,4.846,1100,3.454,1101,3.454,1102,5.598,1103,4.846,1104,5.598,1105,3.454,1106,4.846,1107,6.944,1108,3.454,1109,4.846,1110,6.068,1111,3.454,1112,6.068,1113,4.846,1114,3.454,1115,4.846,1116,4.846,1117,3.454,1118,3.454,1119,5.598,1120,5.598,1121,5.598,1122,3.454,1123,5.598,1124,3.454,1125,3.454,1126,3.454,1127,3.454,1128,3.454,1129,3.454]],["title/interfaces/Vehicles.html",[0,0.26,50,1.449]],["body/interfaces/Vehicles.html",[0,0.512,1,1.49,2,0.959,3,0.156,4,0.137,5,0.137,7,0.218,8,0.694,9,0.761,11,0.733,12,0.356,13,0.018,14,1.742,15,1.098,16,0.761,18,0.307,43,1.24,44,0.012,45,0.012,47,1.525,48,1.525,49,1.604,50,2.426,51,2.68,52,2.68,53,2.258,54,2.312,55,1.525,56,2.312,57,1.604,58,1.604,59,1.604,60,2.258,61,1.604,62,1.604,63,1.604,64,2.258,65,1.604,66,1.604,67,1.604,68,1.604,69,1.604,70,1.604,71,1.604,72,1.604,73,1.604,74,1.604,75,1.604,76,2.152,77,1.525,78,1.604,79,1.604,80,1.604,81,2.258,82,1.983,83,1.604,84,1.604,85,1.525,86,1.525,87,1.604,88,1.604,89,1.604,90,1.604,91,1.452]],["title/coverage.html",[1130,3.961]],["body/coverage.html",[0,0.517,1,1.072,5,0.103,6,3.402,10,1.347,12,0.197,13,0.018,19,1.347,30,1.347,31,1.046,33,1.347,40,1.843,42,1.347,43,0.603,44,0.01,45,0.01,47,2.844,48,2.844,50,1.098,53,1.098,54,1.046,56,1.046,60,1.098,64,1.098,76,1.046,81,1.098,82,1.098,91,1.098,92,0.542,93,1.718,95,2.108,96,2.456,113,1.046,156,2.002,158,2.456,176,1.718,178,1.847,180,2.002,182,2.002,185,1.607,187,1.425,191,1.607,194,1.718,196,2.031,263,5.488,334,3.254,335,2.002,341,2.002,358,2.356,360,2.456,366,1.425,367,2.963,368,3.251,371,1.607,372,1.718,373,2.456,396,2.196,397,2.456,449,2.002,450,2.196,458,2.002,459,2.196,460,2.456,471,2.196,472,1.347,506,2.002,507,2.196,508,2.456,548,2.456,591,2.456,599,2.456,600,2.456,607,2.002,608,2.196,609,2.456,632,1.511,633,2.456,646,2.002,647,2.456,694,2.196,695,2.456,696,2.002,705,2.002,707,2.002,709,2.002,711,2.002,727,2.456,736,2.456,829,2.002,830,2.196,834,2.456,890,2.456,916,2.456,919,2.002,923,2.196,924,2.456,927,2.002,928,2.196,969,2.456,973,2.456,1094,2.456,1096,2.456,1130,2.196,1131,2.456,1132,2.851,1133,2.851,1134,7.033,1135,6.594,1136,6.949,1137,5.024,1138,2.456,1139,2.851,1140,2.456,1141,2.851,1142,5.024,1143,5.553,1144,2.851,1145,5.024,1146,2.851,1147,2.851,1148,2.851,1149,2.851]],["title/dependencies.html",[308,2.728,1150,3.14]],["body/dependencies.html",[13,0.018,44,0.014,45,0.014,125,1.643,126,1.643,173,1.785,175,1.921,190,3.006,308,3.006,326,2.643,330,3.503,332,2.812,378,4.298,462,3.723,518,3.843,642,3.843,1016,4.298,1017,4.298,1021,4.298,1022,4.298,1151,4.989,1152,4.989,1153,4.989,1154,4.989,1155,4.989,1156,6.713,1157,4.989,1158,4.989,1159,4.989,1160,4.989,1161,4.989,1162,4.989,1163,4.989,1164,4.989,1165,4.989,1166,4.989,1167,4.989,1168,4.989,1169,4.989,1170,4.989,1171,4.989,1172,4.989,1173,4.989]],["title/miscellaneous/enumerations.html",[1174,2.205,1175,3.901]],["body/miscellaneous/enumerations.html",[7,0.329,13,0.017,20,1.78,44,0.015,45,0.015,253,2.304,271,3.691,280,4.701,282,4.701,284,5.157,450,4.389,456,5.768,830,4.389,1174,4.001,1175,4.909,1176,5.698,1177,5.698]],["title/miscellaneous/functions.html",[1174,2.205,1178,3.901]],["body/miscellaneous/functions.html",[7,0.343,13,0.016,44,0.016,45,0.016,1138,5.124,1140,6.234,1174,4.177,1178,5.124,1179,5.948]],["title/index.html",[7,0.181,233,2.419,1180,2.705]],["body/index.html",[4,0.166,13,0.018,35,2.059,44,0.013,45,0.013,137,3.962,173,1.561,244,1.609,269,3.537,277,3.542,435,5.058,640,3.962,726,4.522,1130,3.542,1181,5.058,1182,3.962,1183,4.599,1184,4.599,1185,4.599,1186,5.871,1187,4.599,1188,6.813,1189,5.871,1190,4.599,1191,4.599,1192,5.871,1193,4.599,1194,4.599,1195,7.316,1196,4.599,1197,4.599,1198,7.198,1199,4.599,1200,5.871,1201,4.599,1202,4.599,1203,4.599,1204,5.871,1205,4.599,1206,4.599,1207,4.599,1208,5.871,1209,4.599,1210,5.058,1211,5.871,1212,4.599,1213,4.599,1214,4.599,1215,3.962,1216,4.599,1217,4.599,1218,4.599,1219,4.599,1220,4.599,1221,4.599,1222,3.542]],["title/license.html",[233,2.419,1180,2.705,1222,2.419]],["body/license.html",[13,0.013,44,0.013,45,0.013,267,4.122,269,2.771,317,2.979,518,3.542,596,3.962,716,3.962,1131,3.962,1181,3.962,1182,3.962,1210,3.962,1222,3.542,1223,6.467,1224,4.599,1225,4.599,1226,4.599,1227,5.871,1228,4.599,1229,4.599,1230,4.599,1231,4.599,1232,4.599,1233,4.599,1234,5.871,1235,7.48,1236,4.599,1237,4.599,1238,4.599,1239,6.467,1240,4.599,1241,5.871,1242,4.599,1243,4.599,1244,4.599,1245,4.599,1246,4.599,1247,4.599,1248,4.599,1249,4.599,1250,4.599,1251,5.871,1252,4.599,1253,4.599,1254,4.599,1255,4.599,1256,4.599,1257,4.599,1258,4.599,1259,5.871,1260,5.871,1261,4.599,1262,4.599,1263,4.599,1264,4.599,1265,4.599,1266,4.599,1267,4.599,1268,4.599,1269,4.599,1270,4.599,1271,4.599,1272,4.599,1273,4.599,1274,4.599,1275,4.599,1276,4.599,1277,4.599,1278,4.599,1279,4.599,1280,4.599,1281,4.599,1282,4.599,1283,4.599,1284,4.599,1285,4.599,1286,4.599,1287,4.599]],["title/modules.html",[307,2.899]],["body/modules.html",[13,0.015,44,0.015,45,0.015,133,4.925,306,4.014,307,3.222,312,3.703,313,3.703,314,3.444,1215,6.134,1288,7.12,1289,7.12,1290,7.345,1291,5.717]],["title/overview.html",[1292,4.43]],["body/overview.html",[2,1.089,13,0.018,44,0.013,45,0.013,94,1.5,157,2.416,172,4.297,176,3.767,185,4.057,187,3.596,191,3.525,251,3.692,306,5.304,307,2.416,308,3.379,309,3.692,310,3.692,311,3.692,312,4.826,313,4.05,314,4.645,315,3.939,316,3.009,317,2.776,351,3.692,359,2.27,472,3.449,523,3.692,525,3.692,632,3.813,651,3.692,652,3.692,653,3.692,1292,3.692,1293,4.286,1294,4.286,1295,4.286]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":263,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsRegSubCommand.html":{},"injectables/TwitterService.html":{},"coverage.html":{}}}],["0.0.3",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["0.26.1",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":46,"title":{"interfaces/Additional-1.html":{}},"body":{"controllers/AppController.html":{},"classes/StatsRegSubCommand.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["1.0.0",{"_index":1193,"title":{},"body":{"index.html":{}}}],["1.0.2",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["1.6.5",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["13.6.0",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["181093139690422272",{"_index":958,"title":{},"body":{"classes/TestCommand.html":{}}}],["2",{"_index":240,"title":{},"body":{"controllers/AppController.html":{}}}],["2.0.16",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["2.1.12",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["2.26.0",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["2.3",{"_index":542,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["200",{"_index":442,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["2021",{"_index":1225,"title":{},"body":{"license.html":{}}}],["2022",{"_index":1226,"title":{},"body":{"license.html":{}}}],["2199023255551n",{"_index":961,"title":{},"body":{"classes/TestCommand.html":{}}}],["22",{"_index":1295,"title":{},"body":{"overview.html":{}}}],["24",{"_index":259,"title":{},"body":{"controllers/AppController.html":{}}}],["2753",{"_index":872,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["3",{"_index":251,"title":{},"body":{"controllers/AppController.html":{},"overview.html":{}}}],["3.0.2",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["3.8.1",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1293,"title":{},"body":{"overview.html":{}}}],["5",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["7",{"_index":1294,"title":{},"body":{"overview.html":{}}}],["7.4.0",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["910901692227256330",{"_index":957,"title":{},"body":{"classes/TestCommand.html":{}}}],["911328079207624746",{"_index":954,"title":{},"body":{"classes/TestCommand.html":{}}}],["911368720440496208",{"_index":204,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"classes/TestCommand.html":{}}}],["912494585433952346",{"_index":962,"title":{},"body":{"classes/TestCommand.html":{}}}],["912663389724090379",{"_index":952,"title":{},"body":{"classes/TestCommand.html":{}}}],["_allowedchannelids",{"_index":476,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["_appservice",{"_index":205,"title":{},"body":{"controllers/AppController.html":{}}}],["_client",{"_index":974,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_configservice",{"_index":405,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["_configservice.get('halodottoken",{"_index":538,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["_discordapiservice",{"_index":209,"title":{},"body":{"controllers/AppController.html":{}}}],["_discordcommandprovider",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["_discordprovider",{"_index":985,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_group",{"_index":934,"title":{},"body":{"classes/TestCommand.html":{}}}],["_halodotapi",{"_index":740,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/TestCommand.html":{}}}],["_halodotapiinfinitebaseurl",{"_index":477,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["_halodotapiservice",{"_index":478,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["_halosupporttweets",{"_index":975,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_headers",{"_index":549,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["_hoistedoptions",{"_index":936,"title":{},"body":{"classes/TestCommand.html":{}}}],["_http",{"_index":479,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["_httpservice",{"_index":407,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["_logger",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["_prismaservice",{"_index":984,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_subcommand",{"_index":935,"title":{},"body":{"classes/TestCommand.html":{}}}],["_submap",{"_index":201,"title":{},"body":{"controllers/AppController.html":{}}}],["_twitterallowedsearchauthorids",{"_index":976,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_twitterservice",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsRegSubCommand.html":{}}}],["_userservice",{"_index":207,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["above",{"_index":1258,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":982,"title":{},"body":{"injectables/TwitterService.html":{}}}],["accuracy",{"_index":68,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["action",{"_index":1281,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1052,"title":{},"body":{"injectables/TwitterService.html":{}}}],["addfields",{"_index":775,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["additional",{"_index":1,"title":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["against",{"_index":809,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["age",{"_index":731,"title":{},"body":{"classes/StatsDto.html":{}}}],["alikomennoille",{"_index":850,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["all_time",{"_index":32,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["allexceptionsfilter",{"_index":93,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["allow",{"_index":255,"title":{},"body":{"controllers/AppController.html":{},"classes/RegisterDto.html":{}}}],["allow_stats_logging",{"_index":903,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["allowedchannelids",{"_index":203,"title":{},"body":{"controllers/AppController.html":{}}}],["allowfactory",{"_index":692,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowguilds",{"_index":687,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowlogging",{"_index":254,"title":{},"body":{"controllers/AppController.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["alltime",{"_index":30,"title":{"interfaces/AllTime.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["alpha",{"_index":543,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["amazing",{"_index":1216,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1249,"title":{},"body":{"license.html":{}}}],["animal",{"_index":937,"title":{},"body":{"classes/TestCommand.html":{}}}],["animal_dog",{"_index":938,"title":{},"body":{"classes/TestCommand.html":{}}}],["api",{"_index":462,"title":{},"body":{"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["api.controller",{"_index":536,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["api.controller.ts",{"_index":460,"title":{},"body":{"controllers/HaloDotApiController.html":{},"coverage.html":{}}}],["api.controller.ts:33",{"_index":468,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["api.controller.ts:42",{"_index":466,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["api.controller.ts:48",{"_index":467,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["api.middleware",{"_index":534,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["api.middleware.ts",{"_index":508,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"coverage.html":{}}}],["api.middleware.ts:10",{"_index":513,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["api.middleware.ts:6",{"_index":516,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["api.module",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["api.module.ts",{"_index":526,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["api.module.ts:44",{"_index":530,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["api.service",{"_index":193,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["api.service.ts",{"_index":397,"title":{},"body":{"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["api.service.ts:12",{"_index":415,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:14",{"_index":416,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:15",{"_index":406,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:29",{"_index":413,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:71",{"_index":411,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:96",{"_index":409,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api/halo",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["app",{"_index":640,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":645,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":177,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["appcontroller",{"_index":156,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application/json",{"_index":540,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["application_command",{"_index":951,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["application_command_autocomplete",{"_index":972,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["applicationid",{"_index":953,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["apply(halodotapimiddleware",{"_index":546,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["appmodule",{"_index":306,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":176,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["arising",{"_index":1285,"title":{},"body":{"license.html":{}}}],["assists",{"_index":56,"title":{"interfaces/Assists.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["associated",{"_index":1236,"title":{},"body":{"license.html":{}}}],["async",{"_index":219,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["author_id",{"_index":1066,"title":{},"body":{"injectables/TwitterService.html":{}}}],["authorization",{"_index":434,"title":{},"body":{"injectables/DiscordApiService.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["authors",{"_index":1274,"title":{},"body":{"license.html":{}}}],["autoregisterglobalcommands",{"_index":670,"title":{},"body":{"modules/SharedModule.html":{}}}],["available",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules.html":{}}}],["average",{"_index":63,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["await",{"_index":228,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["axios",{"_index":419,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["axiosresponse",{"_index":418,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["b",{"_index":1072,"title":{},"body":{"injectables/TwitterService.html":{}}}],["backers",{"_index":1217,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":1005,"title":{},"body":{"injectables/TwitterService.html":{}}}],["behaviorsubject(null",{"_index":1006,"title":{},"body":{"injectables/TwitterService.html":{}}}],["betrayals",{"_index":57,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["body",{"_index":613,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["body.json",{"_index":627,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["bodyjson",{"_index":626,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["boolean",{"_index":369,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"classes/MessageFromUserGuard.html":{},"interfaces/ToJsonResponse.html":{}}}],["bootstrap",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bot",{"_index":435,"title":{},"body":{"injectables/DiscordApiService.html":{},"index.html":{}}}],["bottoken",{"_index":398,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["botuser",{"_index":803,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"injectables/UserService.html":{}}}],["botuser.gamertag",{"_index":806,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["breakdowns",{"_index":81,"title":{"interfaces/Breakdowns.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["browse",{"_index":1290,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1288,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":868,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["bugi",{"_index":886,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["built",{"_index":1183,"title":{},"body":{"index.html":{}}}],["c",{"_index":1224,"title":{},"body":{"license.html":{}}}],["callbackfordiscordoauth2",{"_index":611,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["callbackfordiscordoauth2(request",{"_index":612,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["called",{"_index":1187,"title":{},"body":{"index.html":{}}}],["callouts",{"_index":75,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["canactive",{"_index":593,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["canactive(event",{"_index":594,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["catch",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["catch((error",{"_index":394,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["catch(exception",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exceptionlist",{"_index":376,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["catch(validationerror",{"_index":384,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["certain",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["channel",{"_index":275,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["channel.name",{"_index":1042,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channel.send",{"_index":1039,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channelid",{"_index":955,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["charge",{"_index":1231,"title":{},"body":{"license.html":{}}}],["choice",{"_index":366,"title":{"interfaces/Choice.html":{}},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["choice(city",{"_index":733,"title":{},"body":{"classes/StatsDto.html":{}}}],["choice(language",{"_index":833,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["choice(publicstats",{"_index":457,"title":{},"body":{"classes/GetDto.html":{}}}],["choices",{"_index":261,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{}}}],["chosen",{"_index":882,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["city",{"_index":734,"title":{},"body":{"classes/StatsDto.html":{}}}],["claim",{"_index":1277,"title":{},"body":{"license.html":{}}}],["class",{"_index":92,"title":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"classes/UpdateDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":94,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"classes/UpdateDto.html":{},"overview.html":{}}}],["client",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["clientprovider",{"_index":199,"title":{},"body":{"controllers/AppController.html":{}}}],["cluster_appmodule",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_halodotapimodule",{"_index":523,"title":{},"body":{"modules/HaloDotApiModule.html":{},"overview.html":{}}}],["cluster_halodotapimodule_imports",{"_index":524,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["cluster_halodotapimodule_providers",{"_index":525,"title":{},"body":{"modules/HaloDotApiModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":651,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":653,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":652,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["command",{"_index":196,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"coverage.html":{}}}],["command.js",{"_index":669,"title":{},"body":{"modules/SharedModule.html":{}}}],["commandid",{"_index":410,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["commandinteraction",{"_index":703,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["commandname",{"_index":963,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["commands",{"_index":290,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{}}}],["commandvalidationfilter",{"_index":371,"title":{"classes/CommandValidationFilter.html":{}},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["community",{"_index":1182,"title":{},"body":{"index.html":{},"license.html":{}}}],["conditions",{"_index":1257,"title":{},"body":{"license.html":{}}}],["config",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["config.service",{"_index":659,"title":{},"body":{"modules/SharedModule.html":{}}}],["configmodule",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["configmodule.forroot",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{}}}],["configservice.get('guildid",{"_index":691,"title":{},"body":{"modules/SharedModule.html":{}}}],["configservice.get('token",{"_index":668,"title":{},"body":{"modules/SharedModule.html":{}}}],["configure",{"_index":527,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["configure(consumer",{"_index":528,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["connection",{"_index":1286,"title":{},"body":{"license.html":{}}}],["console.debug('twitterallowedsearchauthorids",{"_index":1025,"title":{},"body":{"injectables/TwitterService.html":{}}}],["console.log",{"_index":522,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["console.log('1",{"_index":790,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["console.log('2",{"_index":800,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["console.log('3",{"_index":810,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["console.log('4",{"_index":815,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["console.log('5",{"_index":820,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["console.log('discordapi",{"_index":424,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["console.log('found",{"_index":1082,"title":{},"body":{"injectables/TwitterService.html":{}}}],["console.log('interaction.command",{"_index":966,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.member",{"_index":944,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.options",{"_index":932,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.tojson",{"_index":941,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.token",{"_index":946,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.tostring",{"_index":942,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.user",{"_index":948,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('iscommand",{"_index":931,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('registercommand",{"_index":437,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["console.log('users",{"_index":213,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(`user",{"_index":721,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["console.log(invite",{"_index":303,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(json.stringify(interaction",{"_index":720,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["console.log(message",{"_index":222,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(this.discordprovider.getclient",{"_index":211,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(this.discordprovider.getclient().channels",{"_index":210,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":138,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["constructembedtweetmessage",{"_index":977,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructembedtweetmessage(tweet",{"_index":987,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["constructor(_configservice",{"_index":983,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructor(_halodotapi",{"_index":738,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["constructor(_http",{"_index":554,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["constructor(_httpservice",{"_index":403,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["constructor(_userservice",{"_index":891,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["constructor(httpadapterhost",{"_index":104,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(prisma",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/HaloDotApiMiddleware.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/UserService.html":{}}}],["consumer",{"_index":531,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["content",{"_index":539,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["contract",{"_index":1282,"title":{},"body":{"license.html":{}}}],["controller",{"_index":40,"title":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"controllers/Oauth2DiscordController.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["controller('halo",{"_index":474,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["controller('oauth2",{"_index":615,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["controllers",{"_index":157,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"overview.html":{}}}],["controllers/halo",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/oauth2",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["copies",{"_index":1251,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1234,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1223,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1130,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":1091,"title":{},"body":{"injectables/TwitterService.html":{}}}],["created_at",{"_index":1065,"title":{},"body":{"injectables/TwitterService.html":{}}}],["createmessage",{"_index":1037,"title":{},"body":{"injectables/TwitterService.html":{}}}],["createuser",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(data",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{}}}],["cron",{"_index":469,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/TwitterService.html":{}}}],["cron(cronexpression.every_30_seconds",{"_index":484,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["cron(cronexpression.every_5_minutes",{"_index":493,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/TwitterService.html":{}}}],["cron(cronexpression.every_5_seconds",{"_index":492,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["cronexpression",{"_index":470,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/TwitterService.html":{}}}],["crossplay",{"_index":39,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["cryptum",{"_index":537,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["csrsmodels",{"_index":17,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["csrsmodels.csrsrootobject",{"_index":576,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["csrsrootobject",{"_index":42,"title":{"interfaces/CsrsRootObject.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["ctx",{"_index":140,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["current",{"_index":19,"title":{"interfaces/Current.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["cursor",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["damage",{"_index":60,"title":{"interfaces/Damage.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["damages",{"_index":1278,"title":{},"body":{"license.html":{}}}],["data",{"_index":43,"title":{"interfaces/Data.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["data.options",{"_index":429,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["data.type",{"_index":428,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["database",{"_index":258,"title":{},"body":{"controllers/AppController.html":{},"classes/RegisterDto.html":{}}}],["date",{"_index":1021,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["date().toisostring",{"_index":148,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["date(a.created_at).valueof",{"_index":1073,"title":{},"body":{"injectables/TwitterService.html":{}}}],["date(b.created_at).valueof",{"_index":1074,"title":{},"body":{"injectables/TwitterService.html":{}}}],["date(tweet.created_at",{"_index":1055,"title":{},"body":{"injectables/TwitterService.html":{}}}],["deal",{"_index":1238,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1287,"title":{},"body":{"license.html":{}}}],["dealt",{"_index":62,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["deaths",{"_index":55,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["declare",{"_index":15,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["decorators",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["default",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["default_permission",{"_index":370,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{}}}],["defer",{"_index":749,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["deferred",{"_index":964,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["defined",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{}}}],["definediscordcommand",{"_index":194,"title":{"interfaces/DefineDiscordCommand.html":{}},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["deletecommand",{"_index":400,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand(commandid",{"_index":408,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand.status",{"_index":446,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deleteuser",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(where",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":308,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":693,"title":{},"body":{"modules/SharedModule.html":{}}}],["description",{"_index":244,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"classes/UpdateDto.html":{},"index.html":{}}}],["destroys",{"_index":51,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["development",{"_index":1197,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":912,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["discord",{"_index":173,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"dependencies.html":{},"index.html":{}}}],["discord.controller",{"_index":631,"title":{},"body":{"modules/Oauth2DiscordModule.html":{}}}],["discord.controller.ts",{"_index":609,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"coverage.html":{}}}],["discord.controller.ts:10",{"_index":614,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["discord.js",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"controllers/HaloDotApiController.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["discord.module",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["discord.module.ts",{"_index":630,"title":{},"body":{"modules/Oauth2DiscordModule.html":{}}}],["discord/oauth2",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["discord_user_id",{"_index":805,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["discordapiservice",{"_index":191,"title":{"injectables/DiscordApiService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["discordargumentmetadata",{"_index":379,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["discordclientoptions",{"_index":671,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordclientprovider",{"_index":171,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["discordcommand",{"_index":701,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["discordcommandprovider",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["discordconfigservice",{"_index":658,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordexceptionfilter",{"_index":374,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["discordguard",{"_index":592,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["discordjs/rest",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["discordmodule",{"_index":656,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordmodule.forrootasync",{"_index":667,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordpipetransform",{"_index":601,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["discordprovider",{"_index":215,"title":{},"body":{"controllers/AppController.html":{}}}],["discordtransformedcommand",{"_index":699,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["discordurl",{"_index":399,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["distribute",{"_index":1247,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1131,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dot",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["draws",{"_index":80,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["driver",{"_index":74,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["dto",{"_index":744,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["dto.age",{"_index":827,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["dto.allowlogging",{"_index":895,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["dto.city",{"_index":828,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["dto.email",{"_index":826,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["dto.gamertag",{"_index":757,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["dto.lang",{"_index":839,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["dto.name",{"_index":722,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["dto/email.dto",{"_index":822,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["duo",{"_index":37,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["e2e",{"_index":1205,"title":{},"body":{"index.html":{}}}],["edit",{"_index":286,"title":{},"body":{"controllers/AppController.html":{}}}],["email",{"_index":823,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["emaildto",{"_index":821,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["emailsubcommand",{"_index":824,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["embed",{"_index":724,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["embedhelpen",{"_index":877,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["embedhelpfi",{"_index":842,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["embedreply",{"_index":760,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["embeds",{"_index":387,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["embedtweet",{"_index":1043,"title":{},"body":{"injectables/TwitterService.html":{}}}],["emp",{"_index":73,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["en",{"_index":284,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpDto.html":{},"miscellaneous/enumerations.html":{}}}],["enabled",{"_index":911,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["enableshutdownhooks",{"_index":636,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":637,"title":{},"body":{"injectables/PrismaService.html":{}}}],["english",{"_index":283,"title":{},"body":{"controllers/AppController.html":{}}}],["enter",{"_index":250,"title":{},"body":{"controllers/AppController.html":{}}}],["enum",{"_index":455,"title":{},"body":{"classes/GetDto.html":{},"classes/StatsHelpDto.html":{}}}],["enumerations",{"_index":1175,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envfilepath",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["environment/.env",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["environment/config",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["ephemeral",{"_index":876,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["error",{"_index":151,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["error(`problem",{"_index":1040,"title":{},"body":{"injectables/TwitterService.html":{}}}],["error(error",{"_index":581,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["error.response",{"_index":504,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["error.stack",{"_index":395,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["errorembed",{"_index":795,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["ett",{"_index":853,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["etwitterstreamevent",{"_index":1012,"title":{},"body":{"injectables/TwitterService.html":{}}}],["event",{"_index":596,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"license.html":{}}}],["exception",{"_index":119,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["exception.getstatus",{"_index":143,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.property",{"_index":391,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["exceptionfilter",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionlist",{"_index":381,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["exceptionlist.map((exception",{"_index":388,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["export",{"_index":18,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["exports",{"_index":655,"title":{},"body":{"modules/SharedModule.html":{}}}],["express",{"_index":518,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":634,"title":{},"body":{"injectables/PrismaService.html":{}}}],["false",{"_index":271,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"classes/StatsRegSubCommand.html":{},"classes/TestCommand.html":{},"miscellaneous/enumerations.html":{}}}],["feature",{"_index":870,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["fetchreply",{"_index":751,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["fi",{"_index":282,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["files",{"_index":1237,"title":{},"body":{"license.html":{}}}],["filters/discord",{"_index":372,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["filters/globalexceptions",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["filters/globalexceptions.ts",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["filters/globalexceptions.ts:40",{"_index":107,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["filters/globalexceptions.ts:44",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["finally",{"_index":812,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["finland",{"_index":1181,"title":{},"body":{"index.html":{},"license.html":{}}}],["fired",{"_index":65,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["first",{"_index":922,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["fitness",{"_index":1270,"title":{},"body":{"license.html":{}}}],["fns",{"_index":1022,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["following",{"_index":1256,"title":{},"body":{"license.html":{}}}],["fom",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["forever",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["forguild",{"_index":690,"title":{},"body":{"modules/SharedModule.html":{}}}],["format",{"_index":1020,"title":{},"body":{"injectables/TwitterService.html":{}}}],["format(new",{"_index":1056,"title":{},"body":{"injectables/TwitterService.html":{}}}],["forroutes(halodotapicontroller",{"_index":547,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["found",{"_index":799,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{}}}],["framework",{"_index":1186,"title":{},"body":{"index.html":{}}}],["free",{"_index":1230,"title":{},"body":{"license.html":{}}}],["function",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1178,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1254,"title":{},"body":{"license.html":{}}}],["gamer",{"_index":247,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["gamertag",{"_index":9,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["gamertagille",{"_index":867,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["gamertägisi",{"_index":861,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["gametag",{"_index":819,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["get.dto",{"_index":746,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["get.status",{"_index":441,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["get/get.command",{"_index":710,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["getcommands",{"_index":401,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["getdto",{"_index":449,"title":{"classes/GetDto.html":{}},"body":{"classes/GetDto.html":{},"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["gethello",{"_index":361,"title":{},"body":{"injectables/AppService.html":{}}}],["getmotd",{"_index":550,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["getmotdasync",{"_index":587,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["getnewtweets",{"_index":1010,"title":{},"body":{"injectables/TwitterService.html":{}}}],["getting",{"_index":1180,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":1229,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1291,"title":{},"body":{"modules.html":{}}}],["grenades",{"_index":70,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["grow",{"_index":1212,"title":{},"body":{"index.html":{}}}],["guards/message",{"_index":179,"title":{},"body":{"controllers/AppController.html":{}}}],["guildid",{"_index":956,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["hakee",{"_index":866,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["halo",{"_index":269,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"classes/StatsHelpSubCommand.html":{},"index.html":{},"license.html":{}}}],["halodotapi",{"_index":717,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{}}}],["halodotapicontroller",{"_index":458,"title":{"controllers/HaloDotApiController.html":{}},"body":{"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["halodotapimiddleware",{"_index":506,"title":{"injectables/HaloDotApiMiddleware.html":{}},"body":{"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["halodotapimodule",{"_index":312,"title":{"modules/HaloDotApiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules.html":{},"overview.html":{}}}],["halodotapiservice",{"_index":472,"title":{"injectables/HaloDotApiService.html":{}},"body":{"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/TestCommand.html":{},"coverage.html":{},"overview.html":{}}}],["halosupport",{"_index":1047,"title":{},"body":{"injectables/TwitterService.html":{}}}],["handler",{"_index":737,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["handler(@payload",{"_index":748,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["handler(dto",{"_index":742,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["handler(interaction",{"_index":719,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/TestCommand.html":{}}}],["hasparam",{"_index":756,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["header",{"_index":520,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["headers",{"_index":433,"title":{},"body":{"injectables/DiscordApiService.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["headshots",{"_index":71,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["hello",{"_index":364,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":276,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpSubCommand.html":{}}}],["help.dto",{"_index":837,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["help/help.command",{"_index":708,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["here",{"_index":137,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"index.html":{}}}],["hereby",{"_index":1228,"title":{},"body":{"license.html":{}}}],["hh:mm",{"_index":1057,"title":{},"body":{"injectables/TwitterService.html":{}}}],["hidm6wwaszuc15ahw8japc3kjoaloizh63kn3xgqn4gmhegbxo3dfej1oqbme2oq",{"_index":545,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["hijacks",{"_index":52,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["holders",{"_index":1275,"title":{},"body":{"license.html":{}}}],["host",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":141,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hours",{"_index":260,"title":{},"body":{"controllers/AppController.html":{}}}],["httpadapter",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":150,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":155,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":105,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpmodule",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["httpmodule.register",{"_index":544,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["httpmodule.registerasync",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{}}}],["https://cryptum.halodotapi.com",{"_index":569,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["https://cryptum.halodotapi.com/games/hi",{"_index":481,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["https://discord.com/api/v8/applications/${this._configservice.get('applicationid')}/guilds/${this._configservice.get('guildid')}/commands",{"_index":423,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["https://discord.js.org",{"_index":848,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["https://github.com/discordjs/discord.js/issues/7005",{"_index":755,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["https://i.imgur.com/affp7pu.png",{"_index":847,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["https://twitter.com/halosupport",{"_index":1049,"title":{},"body":{"injectables/TwitterService.html":{}}}],["httpservice",{"_index":404,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{}}}],["httpstatus",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/Oauth2DiscordController.html":{}}}],["httpstatus.internal_server_error",{"_index":144,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.ok",{"_index":629,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["human",{"_index":84,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["iconurl",{"_index":1048,"title":{},"body":{"injectables/TwitterService.html":{}}}],["id",{"_index":226,"title":{},"body":{"controllers/AppController.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["identifier",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"injectables/PrismaService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["implied",{"_index":1266,"title":{},"body":{"license.html":{}}}],["import",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["include",{"_index":718,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["included",{"_index":1261,"title":{},"body":{"license.html":{}}}],["including",{"_index":1241,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":638,"title":{},"body":{"injectables/PrismaService.html":{}}}],["infinite",{"_index":270,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpSubCommand.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["init",{"_index":551,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["initial_measurement_matches",{"_index":28,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["inject",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["injectable",{"_index":358,"title":{"injectables/AppService.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":359,"title":{},"body":{"injectables/AppService.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":777,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["input",{"_index":38,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["installation",{"_index":1194,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1196,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":142,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["intents",{"_index":657,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_message_reactions",{"_index":685,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_message_typing",{"_index":686,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_messages",{"_index":684,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_bans",{"_index":675,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_emojis_and_stickers",{"_index":676,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_integrations",{"_index":677,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_invites",{"_index":679,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_members",{"_index":674,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_message_reactions",{"_index":682,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_message_typing",{"_index":683,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_messages",{"_index":673,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_presences",{"_index":681,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_voice_states",{"_index":680,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_webhooks",{"_index":678,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guilds",{"_index":672,"title":{},"body":{"modules/SharedModule.html":{}}}],["interaction",{"_index":385,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["interaction.command",{"_index":967,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.deferred",{"_index":791,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.deferreply",{"_index":750,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.deletereply",{"_index":811,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.editreply('edit",{"_index":813,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.editreply(replymessage).then((reply",{"_index":792,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.fetchreply",{"_index":753,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.followup(replymessage",{"_index":814,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.iscommand",{"_index":392,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/TestCommand.html":{}}}],["interaction.member",{"_index":945,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.options",{"_index":933,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.replied",{"_index":770,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.reply",{"_index":393,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsHelpSubCommand.html":{}}}],["interaction.reply('testing",{"_index":950,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.reply(reply).catch((error",{"_index":915,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["interaction.reply(replymessage).then((reply",{"_index":801,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.tojson",{"_index":940,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.token",{"_index":947,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.tostring",{"_index":943,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.user",{"_index":949,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.user.id",{"_index":759,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["interactionreplyoptions",{"_index":704,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{},"overview.html":{}}}],["invite",{"_index":300,"title":{},"body":{"controllers/AppController.html":{}}}],["iscommand",{"_index":930,"title":{},"body":{"classes/TestCommand.html":{}}}],["isglobal",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["ispublic",{"_index":272,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{}}}],["issue",{"_index":1063,"title":{},"body":{"injectables/TwitterService.html":{}}}],["ja",{"_index":888,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["join",{"_index":1219,"title":{},"body":{"index.html":{}}}],["json",{"_index":621,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.parse(configservice.get('allowguilds",{"_index":688,"title":{},"body":{"modules/SharedModule.html":{}}}],["json.parse(this._configservice.get('twitterallowedsearchauthorids",{"_index":1024,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.s",{"_index":498,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["json.stringify(body.body",{"_index":628,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(ctx.getresponse",{"_index":154,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["json.stringify(deletecommand.data",{"_index":448,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["json.stringify(exception",{"_index":152,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["json.stringify(get.data",{"_index":444,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["json.stringify(headers",{"_index":589,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["json.stringify(request.body",{"_index":622,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(response.body",{"_index":625,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(search",{"_index":1069,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(this._client",{"_index":1030,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(tweet",{"_index":1093,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(user",{"_index":1033,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(userexists",{"_index":900,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["kda",{"_index":85,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["kdr",{"_index":86,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["kehitysehdotukset",{"_index":889,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["kills",{"_index":54,"title":{"interfaces/Kills.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["kind",{"_index":1265,"title":{},"body":{"license.html":{}}}],["kuva",{"_index":875,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["käyttäjän",{"_index":864,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["landed",{"_index":66,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["lang",{"_index":278,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{}}}],["language",{"_index":280,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"miscellaneous/enumerations.html":{}}}],["lastvaluefrom",{"_index":417,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["lastvaluefrom(this._http.get(url",{"_index":570,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["lastvaluefrom(this._httpservice.delete",{"_index":445,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["lastvaluefrom(this._httpservice.get",{"_index":440,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["latest",{"_index":885,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["left",{"_index":79,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["liability",{"_index":1279,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1276,"title":{},"body":{"license.html":{}}}],["license",{"_index":1222,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":1211,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1242,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1267,"title":{},"body":{"license.html":{}}}],["literal",{"_index":1110,"title":{},"body":{"injectables/UserService.html":{}}}],["load",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["logged",{"_index":257,"title":{},"body":{"controllers/AppController.html":{}}}],["logger",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["logger('statsregsubcommand",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["logger(appcontroller.name",{"_index":200,"title":{},"body":{"controllers/AppController.html":{}}}],["logger(discordapiservice.name",{"_index":414,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["logger(halodotapicontroller.name",{"_index":475,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["logger(halodotapimiddleware.name",{"_index":515,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["logger(halodotapiservice.name",{"_index":564,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["logger(oauth2discordcontroller.name",{"_index":616,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["logger(statsgetsubcommand.name",{"_index":741,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["logger(statsupdatesubcommand.name",{"_index":918,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["logger(twitterservice.name",{"_index":1008,"title":{},"body":{"injectables/TwitterService.html":{}}}],["logging",{"_index":648,"title":{},"body":{"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{}}}],["losses",{"_index":78,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["map",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["matches",{"_index":76,"title":{"interfaces/Matches.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["matches_played",{"_index":88,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["matching",{"_index":45,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["maxredirects",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["means",{"_index":881,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["measurement_matches_remaining",{"_index":21,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["medals",{"_index":59,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["melee",{"_index":69,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["member",{"_index":959,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["memberpermissions",{"_index":960,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["merchantability",{"_index":1269,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1245,"title":{},"body":{"license.html":{}}}],["message",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["message.author.bot",{"_index":598,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"modules/SharedModule.html":{}}}],["message.channelid",{"_index":227,"title":{},"body":{"controllers/AppController.html":{}}}],["message.content",{"_index":224,"title":{},"body":{"controllers/AppController.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{}}}],["message.content.touppercase",{"_index":606,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["message.reply('message",{"_index":229,"title":{},"body":{"controllers/AppController.html":{}}}],["message_component",{"_index":971,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["messagecreate",{"_index":597,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["messageembed",{"_index":383,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["messageembed().addfields",{"_index":389,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["messageembed().settitle('stats",{"_index":725,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["messagefromuserguard",{"_index":178,"title":{"classes/MessageFromUserGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["messagetoupperpipe",{"_index":182,"title":{"classes/MessageToUpperPipe.html":{}},"body":{"controllers/AppController.html":{},"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["metadata",{"_index":378,"title":{},"body":{"classes/CommandValidationFilter.html":{},"dependencies.html":{}}}],["metadata.context",{"_index":386,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["method",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["methods",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["middlewareconsumer",{"_index":529,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["miscellaneous",{"_index":1174,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missed",{"_index":67,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["mit",{"_index":1210,"title":{},"body":{"index.html":{},"license.html":{}}}],["mnk",{"_index":41,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["mode",{"_index":1200,"title":{},"body":{"index.html":{}}}],["models/sub",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["modify",{"_index":1244,"title":{},"body":{"license.html":{}}}],["module",{"_index":16,"title":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules/SharedModule.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"modules/Oauth2DiscordModule.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["modules",{"_index":307,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1221,"title":{},"body":{"index.html":{}}}],["motd",{"_index":572,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["motd.unsubscribe",{"_index":483,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["name",{"_index":109,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["namespace",{"_index":590,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["nest",{"_index":1188,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"controllers/HaloDotApiController.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":517,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["nestmodule",{"_index":532,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["new",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"coverage.html":{}}}],["newtweets",{"_index":237,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["newtweets.push(tweet",{"_index":1080,"title":{},"body":{"injectables/TwitterService.html":{}}}],["next",{"_index":511,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"injectables/TwitterService.html":{}}}],["next(tweets",{"_index":992,"title":{},"body":{"injectables/TwitterService.html":{}}}],["next_sub_tier",{"_index":27,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["next_tier",{"_index":25,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["next_tier_start",{"_index":26,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["nextfunction",{"_index":512,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["nickname",{"_index":730,"title":{},"body":{"classes/StatsDto.html":{}}}],["node.js",{"_index":1185,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1273,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1259,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1195,"title":{},"body":{"index.html":{}}}],["null",{"_index":299,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["number",{"_index":14,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["oauth2",{"_index":610,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{}}}],["oauth2discordcontroller",{"_index":607,"title":{"controllers/Oauth2DiscordController.html":{}},"body":{"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["oauth2discordmodule",{"_index":313,"title":{"modules/Oauth2DiscordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules.html":{},"overview.html":{}}}],["object.values(exception.constraints).map((value",{"_index":390,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["observable",{"_index":557,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["obtaining",{"_index":1233,"title":{},"body":{"license.html":{}}}],["old",{"_index":909,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["on('messagecreate",{"_index":216,"title":{},"body":{"controllers/AppController.html":{}}}],["once",{"_index":168,"title":{},"body":{"controllers/AppController.html":{}}}],["once('ready",{"_index":165,"title":{},"body":{"controllers/AppController.html":{}}}],["onmessage(message",{"_index":220,"title":{},"body":{"controllers/AppController.html":{}}}],["onmoduledestroy",{"_index":159,"title":{},"body":{"controllers/AppController.html":{}}}],["onmoduleinit",{"_index":160,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{}}}],["onready",{"_index":161,"title":{},"body":{"controllers/AppController.html":{}}}],["open",{"_index":35,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"injectables/TwitterService.html":{},"index.html":{}}}],["open').catch((error",{"_index":765,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["optional",{"_index":110,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["options",{"_index":249,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{}}}],["options.model",{"_index":197,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{}}}],["options.model.ts",{"_index":368,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"coverage.html":{}}}],["orderby",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["otherwise",{"_index":1284,"title":{},"body":{"license.html":{}}}],["out",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1292,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1150,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":453,"title":{},"body":{"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/UpdateDto.html":{}}}],["param({description",{"_index":451,"title":{},"body":{"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["parametri",{"_index":851,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["params",{"_index":1112,"title":{},"body":{"injectables/UserService.html":{}}}],["paramtype",{"_index":454,"title":{},"body":{"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["paramtype.integer",{"_index":732,"title":{},"body":{"classes/StatsDto.html":{}}}],["particular",{"_index":1271,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":617,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["patch",{"_index":1060,"title":{},"body":{"injectables/TwitterService.html":{}}}],["path",{"_index":149,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["payload",{"_index":698,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["permission",{"_index":1227,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":287,"title":{},"body":{"controllers/AppController.html":{}}}],["permit",{"_index":1252,"title":{},"body":{"license.html":{}}}],["person",{"_index":1232,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1253,"title":{},"body":{"license.html":{}}}],["phone",{"_index":728,"title":{},"body":{"classes/StatsDto.html":{}}}],["phonenumber",{"_index":729,"title":{},"body":{"classes/StatsDto.html":{}}}],["ping",{"_index":970,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["pipes/message",{"_index":183,"title":{},"body":{"controllers/AppController.html":{}}}],["played",{"_index":782,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["please",{"_index":1220,"title":{},"body":{"index.html":{}}}],["pollhalosupporttweets",{"_index":978,"title":{},"body":{"injectables/TwitterService.html":{}}}],["portions",{"_index":1263,"title":{},"body":{"license.html":{}}}],["post",{"_index":431,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["post.pipe().subscribe((data",{"_index":436,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["power_weapons",{"_index":72,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["prefix",{"_index":461,"title":{},"body":{"controllers/HaloDotApiController.html":{},"controllers/Oauth2DiscordController.html":{}}}],["prints",{"_index":747,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["prisma",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botusercreateinput",{"_index":1104,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserorderbywithrelationinput",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserupdateinput",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserwhereinput",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserwhereuniqueinput",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.service",{"_index":1018,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["prisma/client",{"_index":642,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":635,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":661,"title":{},"body":{"modules/SharedModule.html":{}}}],["prismaservice",{"_index":632,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/PrismaService.html":{},"modules/SharedModule.html":{},"classes/StatsRegSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":99,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{}}}],["problem",{"_index":1062,"title":{},"body":{"injectables/TwitterService.html":{}}}],["processed",{"_index":230,"title":{},"body":{"controllers/AppController.html":{}}}],["production",{"_index":1189,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1184,"title":{},"body":{"index.html":{}}}],["project",{"_index":1208,"title":{},"body":{"index.html":{}}}],["promise",{"_index":221,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"injectables/UserService.html":{}}}],["promise.reject(error",{"_index":794,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["promise.reject(this._logger.error(error",{"_index":439,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["promise.reject(this._logger.error(error.stack",{"_index":438,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["provide",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["provided",{"_index":716,"title":{},"body":{"classes/StatsBaseCommand.html":{},"license.html":{}}}],["providers",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["publicly",{"_index":274,"title":{},"body":{"controllers/AppController.html":{}}}],["publicstats",{"_index":456,"title":{},"body":{"classes/GetDto.html":{},"miscellaneous/enumerations.html":{}}}],["publish",{"_index":1246,"title":{},"body":{"license.html":{}}}],["pull",{"_index":268,"title":{},"body":{"controllers/AppController.html":{}}}],["purpose",{"_index":1272,"title":{},"body":{"license.html":{}}}],["päivit",{"_index":862,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["query",{"_index":266,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{}}}],["queue",{"_index":34,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["queuegroups",{"_index":33,"title":{"interfaces/QueueGroups.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["raportit",{"_index":887,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["read",{"_index":277,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpSubCommand.html":{},"index.html":{}}}],["readonly",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{}}}],["ready",{"_index":1190,"title":{},"body":{"index.html":{}}}],["record",{"_index":1084,"title":{},"body":{"injectables/TwitterService.html":{}}}],["record.models.ts",{"_index":48,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["record/global",{"_index":585,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["recordtweet",{"_index":979,"title":{},"body":{"injectables/TwitterService.html":{}}}],["recordtweet(tweetdata",{"_index":996,"title":{},"body":{"injectables/TwitterService.html":{}}}],["reflect",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["reg",{"_index":243,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["register",{"_index":245,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["register.dto",{"_index":894,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["register/register.command",{"_index":706,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["registercommandoptions",{"_index":689,"title":{},"body":{"modules/SharedModule.html":{}}}],["registerdto",{"_index":646,"title":{"classes/RegisterDto.html":{}},"body":{"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["registered",{"_index":265,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["registernewcommand",{"_index":402,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["registernewcommand(name",{"_index":412,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["registers",{"_index":883,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["rekisteröi",{"_index":860,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["release",{"_index":1061,"title":{},"body":{"injectables/TwitterService.html":{}}}],["replied",{"_index":965,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["reply",{"_index":752,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["replymessage",{"_index":761,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["reports",{"_index":869,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["req",{"_index":514,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{}}}],["req.headers",{"_index":521,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["request",{"_index":167,"title":{},"body":{"controllers/AppController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{}}}],["request.data",{"_index":579,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["request.json",{"_index":619,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["request.status",{"_index":578,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestjson",{"_index":618,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["requestmethod",{"_index":533,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["requestplayerservicerecord",{"_index":552,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestplayerservicerecord(gamertag",{"_index":559,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestplayerstatscsr",{"_index":553,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestplayerstatscsr(gamertag",{"_index":561,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requests",{"_index":871,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["required",{"_index":252,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["res",{"_index":510,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"controllers/Oauth2DiscordController.html":{}}}],["res.data",{"_index":489,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["res.headers",{"_index":491,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["res.status",{"_index":487,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["reset",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["residence",{"_index":735,"title":{},"body":{"classes/StatsDto.html":{}}}],["resolve",{"_index":136,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["response",{"_index":31,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Additional.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["response.json",{"_index":624,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["responsebody",{"_index":145,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responsecsr",{"_index":495,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["responsecsr.data",{"_index":499,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["responsejson",{"_index":623,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["responseservicerecord",{"_index":501,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["restriction",{"_index":1240,"title":{},"body":{"license.html":{}}}],["result",{"_index":291,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":44,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":363,"title":{},"body":{"injectables/AppService.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":120,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["returnvalue",{"_index":575,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["rights",{"_index":1243,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":285,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":1198,"title":{},"body":{"index.html":{}}}],["runcommand",{"_index":463,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["rxjs",{"_index":190,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["saved",{"_index":914,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["schedulemodule",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["scopes",{"_index":302,"title":{},"body":{"controllers/AppController.html":{}}}],["se",{"_index":854,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["search",{"_index":1058,"title":{},"body":{"injectables/TwitterService.html":{}}}],["search.data.data.sort((a",{"_index":1071,"title":{},"body":{"injectables/TwitterService.html":{}}}],["season",{"_index":10,"title":{"interfaces/Season.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["seconds",{"_index":83,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["select",{"_index":279,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpDto.html":{}}}],["sell",{"_index":1250,"title":{},"body":{"license.html":{}}}],["sendchannel",{"_index":980,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sendchannel(channelid",{"_index":999,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sending",{"_index":1041,"title":{},"body":{"injectables/TwitterService.html":{}}}],["servicerecord",{"_index":91,"title":{"interfaces/ServiceRecord.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["servicerecordsmodels",{"_index":49,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["servicerecordsmodels.servicerecord",{"_index":582,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["services/discord",{"_index":192,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["services/twitter.service",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["services/user.service",{"_index":188,"title":{},"body":{"controllers/AppController.html":{}}}],["setauthor",{"_index":1046,"title":{},"body":{"injectables/TwitterService.html":{}}}],["setauthor('some",{"_index":846,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setcolor('#0099ff",{"_index":843,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setcolor('#40e0d0",{"_index":913,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["setcolor('#ccccff",{"_index":771,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setcolor('#dfff00",{"_index":908,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["setcolor('#ff0000",{"_index":796,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setcolor('#ff7f50",{"_index":816,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setdescription('gamertag",{"_index":817,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["setdescription('help",{"_index":879,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setdescription('new",{"_index":1050,"title":{},"body":{"injectables/TwitterService.html":{}}}],["setdescription('ohjeistus",{"_index":849,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setdescription(`stats",{"_index":798,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setdescription(statscsr.data[0].response.current.tier",{"_index":774,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setfooter",{"_index":784,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["setimage('https://i.imgur.com/affp7pu.png",{"_index":873,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setthumbnail('https://i.imgur.com/affp7pu.png",{"_index":856,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setthumbnail(statscsr.data[0].response.current.tier_image_url",{"_index":772,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["settimestamp",{"_index":789,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["settimestamp(new",{"_index":1054,"title":{},"body":{"injectables/TwitterService.html":{}}}],["settitle('error",{"_index":797,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["settitle('help",{"_index":878,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["settitle('ohjeet",{"_index":844,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["settitle('tweet",{"_index":1044,"title":{},"body":{"injectables/TwitterService.html":{}}}],["settitle(gamertag",{"_index":773,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["seturl('https://discord.js.org",{"_index":845,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["seturl(`https://twitter.com/i/web/status/${tweet.id",{"_index":1045,"title":{},"body":{"injectables/TwitterService.html":{}}}],["shall",{"_index":1260,"title":{},"body":{"license.html":{}}}],["shared/shared.module",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":314,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shots",{"_index":64,"title":{"interfaces/Shots.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["show",{"_index":273,"title":{},"body":{"controllers/AppController.html":{}}}],["situations",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["skip",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["software",{"_index":1235,"title":{},"body":{"license.html":{}}}],["solo",{"_index":36,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["sortdata",{"_index":1070,"title":{},"body":{"injectables/TwitterService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"index.html":{}}}],["sponsors",{"_index":1214,"title":{},"body":{"index.html":{}}}],["src/.../get.dto.ts",{"_index":1177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../help.dto.ts",{"_index":1176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":158,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:214",{"_index":162,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:32",{"_index":163,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:56",{"_index":166,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":360,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":362,"title":{},"body":{"injectables/AppService.html":{}}}],["src/commands/stats/get/get.command.ts",{"_index":736,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/get/get.command.ts:19",{"_index":739,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["src/commands/stats/get/get.command.ts:26",{"_index":743,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["src/commands/stats/get/get.dto.ts",{"_index":450,"title":{},"body":{"classes/GetDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/commands/stats/get/get.dto.ts:10",{"_index":452,"title":{},"body":{"classes/GetDto.html":{}}}],["src/commands/stats/help/help.command.ts",{"_index":834,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/help/help.command.ts:17",{"_index":835,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["src/commands/stats/help/help.command.ts:21",{"_index":836,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["src/commands/stats/help/help.dto.ts",{"_index":830,"title":{},"body":{"classes/StatsHelpDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/commands/stats/help/help.dto.ts:11",{"_index":832,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["src/commands/stats/register/register.command.ts",{"_index":890,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/register/register.command.ts:21",{"_index":892,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["src/commands/stats/register/register.command.ts:30",{"_index":893,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["src/commands/stats/register/register.dto.ts",{"_index":647,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/commands/stats/register/register.dto.ts:5",{"_index":650,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/commands/stats/register/register.dto.ts:7",{"_index":649,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/commands/stats/stats.command.ts",{"_index":695,"title":{},"body":{"classes/StatsBaseCommand.html":{},"coverage.html":{}}}],["src/commands/stats/stats.dto.ts",{"_index":727,"title":{},"body":{"classes/StatsDto.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.command.ts",{"_index":916,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.command.ts:16",{"_index":917,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["src/commands/stats/update/update.command.ts:20",{"_index":920,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["src/commands/stats/update/update.dto.ts",{"_index":1094,"title":{},"body":{"classes/UpdateDto.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.dto.ts:5",{"_index":1095,"title":{},"body":{"classes/UpdateDto.html":{}}}],["src/commands/test.command.ts",{"_index":924,"title":{},"body":{"classes/TestCommand.html":{},"coverage.html":{}}}],["src/commands/test.command.ts:11",{"_index":925,"title":{},"body":{"classes/TestCommand.html":{}}}],["src/commands/test.command.ts:16",{"_index":926,"title":{},"body":{"classes/TestCommand.html":{}}}],["src/controllers/halo",{"_index":459,"title":{},"body":{"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["src/controllers/oauth2",{"_index":608,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["src/exception",{"_index":95,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["src/guards/message",{"_index":471,"title":{},"body":{"controllers/HaloDotApiController.html":{},"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/halo",{"_index":507,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["src/models/interaction",{"_index":928,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["src/models/sub",{"_index":367,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["src/pipes/message",{"_index":599,"title":{},"body":{"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["src/services/discord",{"_index":396,"title":{},"body":{"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["src/services/halodotapi/csrs.models.ts",{"_index":6,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["src/services/halodotapi/halodotapi.service",{"_index":473,"title":{},"body":{"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["src/services/halodotapi/halodotapi.service.ts",{"_index":548,"title":{},"body":{"injectables/HaloDotApiService.html":{},"coverage.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:10",{"_index":563,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:11",{"_index":555,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:26",{"_index":558,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:43",{"_index":556,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:52",{"_index":562,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:75",{"_index":560,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:8",{"_index":565,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/service",{"_index":47,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["src/services/prisma.service",{"_index":660,"title":{},"body":{"modules/SharedModule.html":{},"classes/StatsRegSubCommand.html":{}}}],["src/services/prisma.service.ts",{"_index":633,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/services/prisma.service.ts:12",{"_index":639,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/prisma.service.ts:8",{"_index":641,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/prisma/prisma.module",{"_index":662,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/services/twitter.service",{"_index":663,"title":{},"body":{"modules/SharedModule.html":{},"classes/StatsRegSubCommand.html":{}}}],["src/services/twitter.service.ts",{"_index":973,"title":{},"body":{"injectables/TwitterService.html":{},"coverage.html":{}}}],["src/services/twitter.service.ts:116",{"_index":995,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:14",{"_index":1009,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:15",{"_index":1004,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:166",{"_index":997,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:17",{"_index":1007,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:188",{"_index":1002,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:19",{"_index":986,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:36",{"_index":991,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:52",{"_index":1011,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:56",{"_index":993,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:60",{"_index":1000,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:81",{"_index":989,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter/twitter.module",{"_index":665,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/services/user.service",{"_index":666,"title":{},"body":{"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["src/services/user.service.ts",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:12",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:18",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:35",{"_index":1105,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:41",{"_index":1111,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:52",{"_index":1108,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:9",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{}}}],["src/shared/shared.module",{"_index":535,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["src/shared/shared.module.ts",{"_index":654,"title":{},"body":{"modules/SharedModule.html":{}}}],["start",{"_index":1192,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1201,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1202,"title":{},"body":{"index.html":{}}}],["started",{"_index":233,"title":{"index.html":{},"license.html":{}},"body":{"controllers/AppController.html":{}}}],["statements",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":256,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["stats.dto",{"_index":697,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["stats/players/${gamertag}/csrs",{"_index":577,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["stats/players/${gamertag}/service",{"_index":584,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["statsbasecommand",{"_index":694,"title":{"classes/StatsBaseCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"coverage.html":{}}}],["statscsr",{"_index":763,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statscsr.data",{"_index":768,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsdto",{"_index":696,"title":{"classes/StatsDto.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"coverage.html":{}}}],["statsgetsubcommand",{"_index":709,"title":{"classes/StatsGetSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["statshelpdto",{"_index":829,"title":{"classes/StatsHelpDto.html":{}},"body":{"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["statshelpsubcommand",{"_index":707,"title":{"classes/StatsHelpSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["statsi",{"_index":874,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["statsrecord",{"_index":766,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data",{"_index":769,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.kda.tofixed(1",{"_index":780,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.kdr.tofixed(1",{"_index":781,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.matches_played",{"_index":783,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.assists",{"_index":779,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.deaths",{"_index":778,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.kills",{"_index":776,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.time_played.human",{"_index":787,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.win_rate.tofixed(1",{"_index":788,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsregsubcommand",{"_index":705,"title":{"classes/StatsRegSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["statssubcommands",{"_index":242,"title":{},"body":{"controllers/AppController.html":{}}}],["statsupdatesubcommand",{"_index":711,"title":{"classes/StatsUpdateSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"coverage.html":{}}}],["statuscode",{"_index":146,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["string",{"_index":11,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["sub.unsubscribe",{"_index":305,"title":{},"body":{"controllers/AppController.html":{}}}],["sub_command",{"_index":239,"title":{},"body":{"controllers/AppController.html":{}}}],["sub_command_group",{"_index":241,"title":{},"body":{"controllers/AppController.html":{}}}],["sub_tier",{"_index":24,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["subcommand",{"_index":745,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["subcommands",{"_index":880,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["subject",{"_index":1255,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1248,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":189,"title":{},"body":{"controllers/AppController.html":{}}}],["substantial",{"_index":1262,"title":{},"body":{"license.html":{}}}],["success",{"_index":825,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["successfully",{"_index":231,"title":{},"body":{"controllers/AppController.html":{}}}],["suicides",{"_index":58,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["summary",{"_index":53,"title":{"interfaces/Summary.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["suomeksi",{"_index":281,"title":{},"body":{"controllers/AppController.html":{}}}],["support",{"_index":1215,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1289,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":248,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["tai",{"_index":865,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["take",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["taken",{"_index":61,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["tarkoittaa",{"_index":852,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["test",{"_index":726,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/TestCommand.html":{},"index.html":{}}}],["test:covsupport",{"_index":1207,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1206,"title":{},"body":{"index.html":{}}}],["testcommand",{"_index":923,"title":{"classes/TestCommand.html":{}},"body":{"classes/TestCommand.html":{},"coverage.html":{}}}],["testing",{"_index":298,"title":{},"body":{"controllers/AppController.html":{}}}],["testquery",{"_index":464,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["tests",{"_index":1204,"title":{},"body":{"index.html":{}}}],["testservice",{"_index":465,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["text",{"_index":785,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["textchannel",{"_index":1019,"title":{},"body":{"injectables/TwitterService.html":{}}}],["thanks",{"_index":1213,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":643,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":644,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._client",{"_index":1027,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._client.v2.search('from:halosupport",{"_index":1059,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._client.v2.user('1093614084807741440",{"_index":1031,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._configservice.get('halodottoken",{"_index":567,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._configservice.get('token",{"_index":421,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._discordapiservice.deletecommand('912494585433952346",{"_index":293,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.getcommands",{"_index":292,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.getcommands().catch((error",{"_index":294,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.registernewcommand('stats",{"_index":289,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.registernewcommand('test",{"_index":297,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordprovider.getclient().channels.fetch(channelid",{"_index":1036,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._halodotapi.init",{"_index":968,"title":{},"body":{"classes/TestCommand.html":{}}}],["this._halodotapi.requestplayerservicerecord(gamertag).catch((error",{"_index":767,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._halodotapi.requestplayerstatscsr(gamertag",{"_index":764,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._halodotapiinfinitebaseurl",{"_index":480,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["this._halodotapiservice.getmotd().then((motd",{"_index":482,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._halodotapiservice.init().then((res",{"_index":485,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._halodotapiservice.requestplayerservicerecord('ex1tium1306",{"_index":502,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._halodotapiservice.requestplayerstatscsr('ex1tium1306",{"_index":496,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._halosupporttweets.asobservable",{"_index":1034,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._halosupporttweets.next([...tweets",{"_index":1035,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._headers",{"_index":566,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._http.get",{"_index":571,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._http.get(url",{"_index":574,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._httpservice.post",{"_index":432,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._logger.debug('search",{"_index":1068,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug('searching",{"_index":1067,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug(`delete",{"_index":447,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._logger.debug(`gamertag",{"_index":762,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.debug(`halodotapibaseurl",{"_index":568,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.debug(`headers",{"_index":588,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.debug(`registered",{"_index":443,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._logger.debug(`reply",{"_index":802,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.debug(`twitter",{"_index":1029,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug(`url",{"_index":573,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.debug(`userid",{"_index":907,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.error(`allexcepetionsfilter",{"_index":153,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this._logger.error(error",{"_index":295,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{}}}],["this._logger.error(error?.response?.data",{"_index":505,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.log('bot",{"_index":232,"title":{},"body":{"controllers/AppController.html":{}}}],["this._logger.log('responsecsr.data",{"_index":497,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.log(`newtweets",{"_index":238,"title":{},"body":{"controllers/AppController.html":{}}}],["this._logger.log(`res.data",{"_index":488,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.log(`res.headers",{"_index":490,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.log(`res.status",{"_index":486,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.verbose('help",{"_index":838,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["this._logger.verbose(`request",{"_index":620,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["this._logger.verbose(`tweet",{"_index":1092,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.verbose(`twitter",{"_index":1032,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.verbose(dto.gamertag",{"_index":905,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.verbose(interaction",{"_index":841,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["this._logger.verbose(interaction.user",{"_index":906,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.verbose(json.stringify(defer",{"_index":754,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.verbose(json.stringify(dto",{"_index":840,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["this._logger.verbose(reply",{"_index":793,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.warn('halodotapimiddleware",{"_index":519,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["this._logger.warn('responsecsr",{"_index":500,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.warn('responseservicerecord",{"_index":503,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.warn(`allowlogging",{"_index":896,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.warn(`url",{"_index":586,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.warn(`userexists",{"_index":899,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.warn(data",{"_index":430,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._prismaservice.tweet.create",{"_index":1085,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._prismaservice.tweet.findunique",{"_index":1076,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._prismaservice.tweet.upsert",{"_index":1090,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._submap.foreach(sub",{"_index":304,"title":{},"body":{"controllers/AppController.html":{}}}],["this._submap.set('newtweets",{"_index":235,"title":{},"body":{"controllers/AppController.html":{}}}],["this._submap.set('stats_command",{"_index":288,"title":{},"body":{"controllers/AppController.html":{}}}],["this._submap.set('test_command",{"_index":296,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterallowedsearchauthorids",{"_index":1023,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._twitterservice.init",{"_index":234,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterservice.newtweets$.subscribe((newtweets",{"_index":236,"title":{},"body":{"controllers/AppController.html":{}}}],["this._userservice.createuser",{"_index":904,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._userservice.updateuser",{"_index":902,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["this._userservice.user",{"_index":804,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["this._userservice.users({}).then((users",{"_index":212,"title":{},"body":{"controllers/AppController.html":{}}}],["this.allowedchannelids.some(id",{"_index":225,"title":{},"body":{"controllers/AppController.html":{}}}],["this.bottoken",{"_index":420,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this.constructembedtweetmessage(tweet",{"_index":1038,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.discordprovider.getclient().generateinvite",{"_index":301,"title":{},"body":{"controllers/AppController.html":{}}}],["this.discordurl",{"_index":422,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this.getmotdasync",{"_index":494,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this.httpadapterhost",{"_index":139,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.log(`incoming",{"_index":223,"title":{},"body":{"controllers/AppController.html":{}}}],["this.next(newtweets",{"_index":1083,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.prisma.botuser.create",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.delete",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.findmany",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.findunique",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.update",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["this.recordtweet(tweet",{"_index":1079,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.sendchannel('911189130543788062",{"_index":1081,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.twitterallowedsearchauthorids",{"_index":1026,"title":{},"body":{"injectables/TwitterService.html":{}}}],["throw",{"_index":580,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["thus",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["tier",{"_index":22,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tier_image_url",{"_index":29,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tier_start",{"_index":23,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tilastot",{"_index":863,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["time",{"_index":786,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["time_played",{"_index":89,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["timeout",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["timeplayed",{"_index":82,"title":{"interfaces/TimePlayed.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["timestamp",{"_index":147,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["todo",{"_index":807,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["tojson",{"_index":939,"title":{},"body":{"classes/TestCommand.html":{}}}],["tojson.model",{"_index":929,"title":{},"body":{"classes/TestCommand.html":{}}}],["tojson.model.ts",{"_index":969,"title":{},"body":{"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["tojsonresponse",{"_index":927,"title":{"interfaces/ToJsonResponse.html":{}},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["token",{"_index":426,"title":{},"body":{"injectables/DiscordApiService.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{}}}],["tort",{"_index":1283,"title":{},"body":{"license.html":{}}}],["total_score",{"_index":87,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["transform",{"_index":602,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transform([message",{"_index":605,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transform(undefined",{"_index":603,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transformpipe",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["true",{"_index":253,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/GetDto.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/UpdateDto.html":{},"miscellaneous/enumerations.html":{}}}],["true})@choice(language",{"_index":831,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["try",{"_index":427,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["tulostaa",{"_index":857,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["tweet",{"_index":990,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.author_id",{"_index":1075,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.fields",{"_index":1064,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.id",{"_index":1078,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.text",{"_index":1051,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet](https://twitter.com/i/web/status/${tweet.id",{"_index":1053,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet_id",{"_index":1077,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata",{"_index":998,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata.author_id",{"_index":1088,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata.created_at",{"_index":1089,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata.id",{"_index":1086,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata.text",{"_index":1087,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweets",{"_index":994,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetstream",{"_index":1013,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetv2",{"_index":988,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetv2singleresult",{"_index":1014,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitter",{"_index":1016,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["twitterapi",{"_index":1003,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitterapi(this._configservice.get('twitterbearertoken",{"_index":1028,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitterapiv2",{"_index":1015,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twittermodule",{"_index":664,"title":{},"body":{"modules/SharedModule.html":{}}}],["twitterservice",{"_index":185,"title":{"injectables/TwitterService.html":{}},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{},"classes/StatsRegSubCommand.html":{},"injectables/TwitterService.html":{},"coverage.html":{},"overview.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["types",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["tämän",{"_index":858,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["undefined",{"_index":583,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{}}}],["unit",{"_index":1203,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["update",{"_index":264,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["update.dto",{"_index":921,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["update/update.command",{"_index":712,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["updated",{"_index":818,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["updatedto",{"_index":919,"title":{"classes/UpdateDto.html":{}},"body":{"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["updates",{"_index":884,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["updateuser",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(params",{"_index":1109,"title":{},"body":{"injectables/UserService.html":{}}}],["upper.pipe",{"_index":184,"title":{},"body":{"controllers/AppController.html":{}}}],["upper.pipe.ts",{"_index":600,"title":{},"body":{"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["upper.pipe.ts:5",{"_index":604,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["upserttweet",{"_index":981,"title":{},"body":{"injectables/TwitterService.html":{}}}],["upserttweet(tweetdata",{"_index":1001,"title":{},"body":{"injectables/TwitterService.html":{}}}],["url",{"_index":425,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["use",{"_index":267,"title":{},"body":{"controllers/AppController.html":{},"injectables/HaloDotApiMiddleware.html":{},"classes/StatsUpdateSubCommand.html":{},"license.html":{}}}],["use(req",{"_index":509,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["useclass",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["usefactory",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["usefilters",{"_index":702,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["usefilters(commandvalidationfilter",{"_index":714,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["usegroup",{"_index":700,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["useguards",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{}}}],["useguards(messagefromuserguard",{"_index":217,"title":{},"body":{"controllers/AppController.html":{}}}],["usepipes",{"_index":170,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["usepipes(messagetoupperpipe",{"_index":218,"title":{},"body":{"controllers/AppController.html":{}}}],["usepipes(transformpipe",{"_index":715,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["user",{"_index":723,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["user(userwhereuniqueinput",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{}}}],["user.guard",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{}}}],["user.guard.ts",{"_index":591,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["user.guard.ts:5",{"_index":595,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["userexists",{"_index":897,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["userexists.discord_user_id",{"_index":901,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["userexists.gamertag",{"_index":910,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["userid",{"_index":758,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["users",{"_index":214,"title":{},"body":{"controllers/AppController.html":{},"injectables/UserService.html":{}}}],["users(params",{"_index":1116,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":187,"title":{"injectables/UserService.html":{}},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userwhereuniqueinput",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1209,"title":{},"body":{"index.html":{}}}],["v2",{"_index":1017,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["validation",{"_index":713,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["validation.ts",{"_index":373,"title":{},"body":{"classes/CommandValidationFilter.html":{},"coverage.html":{}}}],["validation.ts:13",{"_index":375,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validation.ts:16",{"_index":380,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validationerror",{"_index":377,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validationpipe",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["validator",{"_index":382,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["valinnainen",{"_index":855,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["value",{"_index":20,"title":{},"body":{"interfaces/Additional.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"miscellaneous/enumerations.html":{}}}],["vehicles",{"_index":50,"title":{"interfaces/Vehicles.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["version",{"_index":541,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["versions",{"_index":1191,"title":{},"body":{"index.html":{}}}],["viestin",{"_index":859,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["void",{"_index":121,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/TwitterService.html":{}}}],["warranties",{"_index":1268,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1264,"title":{},"body":{"license.html":{}}}],["wasupdated",{"_index":898,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["watch",{"_index":1199,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1280,"title":{},"body":{"license.html":{}}}],["win_rate",{"_index":90,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["wins",{"_index":77,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["without",{"_index":1239,"title":{},"body":{"license.html":{}}}],["world",{"_index":365,"title":{},"body":{"injectables/AppService.html":{}}}],["write",{"_index":808,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["xbox",{"_index":246,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["yes",{"_index":262,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{}}}],["you'd",{"_index":1218,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Additional.html":{"url":"interfaces/Additional.html","title":"interface - Additional","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Additional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gamertag\n                                        \n                                \n                                \n                                        \n                                            season\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gamertag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gamertag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        season:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Additional-1.html":{"url":"interfaces/Additional-1.html","title":"interface - Additional-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Additional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gamertag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gamertag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gamertag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exception-filters/globalExceptions.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/exception-filters/globalExceptions.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/exception-filters/globalExceptions.ts:40\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exception-filters/globalExceptions.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  private _logger: Logger = new Logger('StatsRegSubCommand')\n\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) { }\n\n  catch(exception: unknown, host: ArgumentsHost): void {\n    // In certain situations `httpAdapter` might not be available in the\n    // constructor method, thus we should resolve it here.\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const ctx = host.switchToHttp();\n\n    const httpStatus =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const responseBody = {\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n      error: JSON.stringify(exception)\n    };\n\n    this._logger.error(`AllExcepetionsFilter error response: ${JSON.stringify(ctx.getResponse())}`)\n\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AllTime.html":{"url":"interfaces/AllTime.html","title":"interface - AllTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AllTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onModuleDestroy\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                onReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \nonModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReady\n                        \n                    \n                \n            \n            \n                \nonReady()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Once('ready')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Logger, OnModuleDestroy, OnModuleInit, Request } from '@nestjs/common';\nimport { On, Once, UseGuards, UsePipes, DiscordClientProvider, DiscordCommandProvider } from '@discord-nestjs/core';\nimport { Message } from 'discord.js';\nimport { AppService } from './app.service';\nimport { MessageFromUserGuard } from './guards/message-fom-user.guard';\nimport { MessageToUpperPipe } from './pipes/message-to-upper.pipe';\nimport { TwitterService } from './services/twitter.service';\nimport { UserService } from './services/user.service';\nimport { Subscription } from 'rxjs';\nimport { DiscordApiService } from './services/discord-api.service';\nimport { DefineDiscordCommand } from './models/sub-command-options.model';\n// Client, ClientProvider, \n@Controller()\nexport class AppController implements OnModuleInit, OnModuleDestroy {\n  private readonly _logger = new Logger(AppController.name);\n  private _subMap = new Map();\n\n  allowedChannelIds: string[] = ['911368720440496208'];\n\n  constructor(\n    private readonly _appService: AppService,\n    private _twitterService: TwitterService,\n    private _userService: UserService,\n    private _discordCommandProvider: DiscordCommandProvider,\n    private _discordApiService: DiscordApiService\n\n  ) {\n    // console.log(this.discordProvider.getClient().channels)\n\n  }\n\n  onModuleInit() {\n    // console.log(this.discordProvider.getClient())\n\n    // this._userService.users({}).then((users) => {\n    //   console.log('users', users)\n    // })\n  }\n\n  // @Client()\n  // discordProvider: ClientProvider;\n\n  // @On('messageCreate')\n  // @UseGuards(MessageFromUserGuard)\n  // // @UsePipes(MessageToUpperPipe)\n  // async onMessage(message: Message): Promise {\n  //   console.log(message);\n  //   this.logger.log(`Incoming message: ${message.content}`);\n  //   if (this.allowedChannelIds.some(id => id == message.channelId)) {\n  //     await message.reply('Message processed successfully');\n  //   }\n  // }\n\n\n  @Once('ready')\n  onReady() {\n    this._logger.log('Bot was started!');\n\n    this._twitterService.init();\n\n    this._subMap.set('newTweets', this._twitterService.newTweets$.subscribe((newTweets) => {\n      if (newTweets) {\n        this._logger.log(`newTweets ${newTweets}`);\n      }\n    }))\n\n    // 1 is type SUB_COMMAND'\n    // 2 is type SUB_COMMAND_GROUP\n    const statsSubCommands: DefineDiscordCommand[] =\n      [\n        {\n          \"name\": \"reg\",\n          \"description\": \"Register your Xbox Gamer tag\",\n          \"type\": 1,\n          \"options\": [\n            {\n              \"name\": \"gamertag\",\n              \"description\": \"Enter Xbox Gamertag\",\n              \"type\": 3,\n              \"required\": true\n            },\n            {\n              \"name\": \"allowlogging\",\n              \"description\": \"Allow your stats to be logged in a database every 24 hours.\",\n              \"type\": 3,\n              \"required\": true,\n              \"choices\": [\n                {\n                  \"name\": \"Yes\",\n                  \"value\": \"1\"\n                },\n                {\n                  \"name\": \"No\",\n                  \"value\": \"0\"\n                },\n              ]\n            },\n          ]\n        },\n        {\n          \"name\": \"update\",\n          \"description\": \"Update your registered Xbox Gamer Tag\",\n          \"type\": 1,\n          \"options\": [\n            {\n              \"name\": \"gamertag\",\n              \"description\": \"Enter Xbox Gamertag\",\n              \"type\": 3,\n              \"required\": true\n            },\n\n          ]\n        },\n        {\n          \"name\": \"get\",\n          \"description\": \"Query your stats or use :gamertag: to query\",\n          \"type\": 1,\n          \"options\": [\n            {\n              \"name\": \"gamertag\",\n              \"description\": \"(Optional) Enter Xbox Gamertag to pull stats for Halo Infinite\",\n              \"type\": 3,\n              \"required\": false\n            },\n            // {\n            //   \"name\": \"isPublic\",\n            //   \"description\": \"(Optional) Show stats publicly on channel\",\n            //   \"type\": 3,\n            //   \"required\": false,\n            //   \"choices\": [\n            //     {\n            //       \"name\": \"Yes\",\n            //       \"value\": \"1\"\n            //     },\n            //     {\n            //       \"name\": \"No\",\n            //       \"value\": \"0\"\n            //     },\n            //   ]\n            // },\n          ]\n        },\n        {\n          \"name\": \"help\",\n          \"description\": \"READ ME\",\n          \"type\": 1,\n          \"options\": [\n            {\n              \"name\": \"lang\",\n              \"description\": \"Select language\",\n              \"type\": 3,\n              \"required\": true,\n              \"choices\": [\n                {\n                  \"name\": \"Suomeksi\",\n                  \"value\": \"fi\"\n                },\n                {\n                  \"name\": \"In English\",\n                  \"value\": \"en\"\n                },\n              ]\n            },\n\n          ]\n        },\n        // {\n        //   \"name\": \"role\",\n        //   \"description\": \"Get or edit permissions for a role\",\n        //   \"type\": 2,\n        //   \"options\": [\n        //     {\n        //       \"name\": \"get\",\n        //       \"description\": \"Get permissions for a role\",\n        //       \"type\": 1\n        //     },\n        //     {\n        //       \"name\": \"edit\",\n        //       \"description\": \"Edit permissions for a role\",\n        //       \"type\": 1\n        //     }\n        //   ]\n        // }\n\n        // {\n        //   name: 'reg',\n        //   description: 'Enter your Xbox Gamer Tag',\n        //   type: 1,\n        //   required: true\n        // }\n      ]\n    // this._subMap.set('stats_command', this._discordApiService.registerNewCommand('stats', 'Halo Infinite stats commands', 1, statsSubCommands))\n    // const result = await this._discordApiService.getCommands();\n    // this._discordApiService.deleteCommand('912494585433952346');\n\n    // this._discordApiService.getCommands().catch((error) => {\n    //   this._logger.error(error);\n    // })\n\n\n    // this._subMap.set('test_command', this._discordApiService.registerNewCommand('test', 'testing command', 1, null))\n\n    // this._discordApiService.registerNewCommand('stats', 'Halo Infinite stats commands', 1, statsSubCommands)\n\n\n    // const invite = this.discordProvider.getClient().generateInvite({\n    //   // scopes: \n    // });\n    // console.log(invite)\n  }\n\n\n\n  onModuleDestroy() {\n\n    this._subMap.forEach(sub => sub.unsubscribe())\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nHaloDotApiModule\n\nHaloDotApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHaloDotApiModule->AppModule\n\n\n\n\n\nOauth2DiscordModule\n\nOauth2DiscordModule\n\nAppModule -->\n\nOauth2DiscordModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDiscordApiService\n\nDiscordApiService\n\nAppModule -->\n\nDiscordApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            DiscordApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HaloDotApiModule\n                        \n                        \n                            Oauth2DiscordModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n// TransformPipe, ValidationPipe\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport config from '../environment/config'\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { HttpModule } from '@nestjs/axios';\nimport { HaloDotApiModule } from './controllers/halo-dot-api/halo-dot-api.module';\nimport { SharedModule } from './shared/shared.module';\nimport { DiscordApiService } from './services/discord-api.service';\nimport { AllExceptionsFilter } from './exception-filters/globalExceptions';\nimport { APP_FILTER } from '@nestjs/core';\nimport { Oauth2DiscordModule } from './controllers/oauth2-discord/oauth2-discord.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: ['./environment/.env'],\n      isGlobal: true,\n      load: [config],\n    }),\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async () => ({\n        // timeout: 15,\n        // maxRedirects: 5,\n      }),\n      inject: [ConfigService],\n    }),\n    ScheduleModule.forRoot(),\n    HaloDotApiModule,\n    Oauth2DiscordModule,\n    SharedModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    AppService, DiscordApiService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    \n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Assists.html":{"url":"interfaces/Assists.html","title":"interface - Assists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Assists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callouts\n                                        \n                                \n                                \n                                        \n                                            driver\n                                        \n                                \n                                \n                                        \n                                            emp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callouts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callouts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        driver\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        driver:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Breakdowns.html":{"url":"interfaces/Breakdowns.html","title":"interface - Breakdowns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Breakdowns\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assists\n                                        \n                                \n                                \n                                        \n                                            kills\n                                        \n                                \n                                \n                                        \n                                            matches\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assists:         Assists\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Assists\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kills\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kills:         Kills\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Kills\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matches:         Matches\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Matches\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Choice.html":{"url":"interfaces/Choice.html","title":"interface - Choice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Choice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sub-command-options.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefineDiscordCommand {\n  name: string;\n  description: string;\n  type?: number\n  options?: DefineDiscordCommand[]\n  required?: boolean\n  default_permission?: boolean\n  choices?: Choice[]\n}\n\nexport interface Choice {\n  name: string;\n  value: string\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommandValidationFilter.html":{"url":"classes/CommandValidationFilter.html","title":"class - CommandValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommandValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exception-filters/discord-command-validation.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/exception-filters/discord-command-validation.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exceptionList: ValidationError[], metadata: DiscordArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/exception-filters/discord-command-validation.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exceptionList\n                                    \n                                            ValidationError[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            DiscordArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  DiscordArgumentMetadata,\n  DiscordExceptionFilter,\n  Catch,\n} from '@discord-nestjs/core';\nimport { Logger } from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { MessageEmbed } from 'discord.js';\n\n@Catch(ValidationError)\nexport class CommandValidationFilter implements DiscordExceptionFilter {\n  private _logger: Logger = new Logger('StatsRegSubCommand')\n\n\n  async catch(\n    exceptionList: ValidationError[],\n    metadata: DiscordArgumentMetadata,\n  ): Promise {\n    const [interaction] = metadata.context;\n\n    const embeds = exceptionList.map((exception) =>\n      new MessageEmbed().addFields(\n        Object.values(exception.constraints).map((value) => ({\n          name: exception.property,\n          value,\n        })),\n      ),\n    );\n\n    if (interaction.isCommand()) await interaction.reply({ embeds }).catch((error) => {\n      this._logger.error(error, error && error.stack ? error.stack : null)\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CsrsRootObject.html":{"url":"interfaces/CsrsRootObject.html","title":"interface - CsrsRootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CsrsRootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            additional\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additional:         Additional\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Additional\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         QueueGroups[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QueueGroups[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Current.html":{"url":"interfaces/Current.html","title":"interface - Current","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Current\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Damage.html":{"url":"interfaces/Damage.html","title":"interface - Damage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Damage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            average\n                                        \n                                \n                                \n                                        \n                                            dealt\n                                        \n                                \n                                \n                                        \n                                            taken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        average\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        average:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dealt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dealt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taken:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            breakdowns\n                                        \n                                \n                                \n                                        \n                                            damage\n                                        \n                                \n                                \n                                        \n                                            kda\n                                        \n                                \n                                \n                                        \n                                            kdr\n                                        \n                                \n                                \n                                        \n                                            matches_played\n                                        \n                                \n                                \n                                        \n                                            shots\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            time_played\n                                        \n                                \n                                \n                                        \n                                            total_score\n                                        \n                                \n                                \n                                        \n                                            win_rate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        breakdowns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        breakdowns:         Breakdowns\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Breakdowns\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        damage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        damage:         Damage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Damage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kda\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kda:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kdr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kdr:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matches_played\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matches_played:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shots\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shots:         Shots\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Shots\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         Summary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Summary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time_played\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time_played:         TimePlayed\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimePlayed\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        win_rate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        win_rate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefineDiscordCommand.html":{"url":"interfaces/DefineDiscordCommand.html","title":"interface - DefineDiscordCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefineDiscordCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sub-command-options.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            choices\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default_permission\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        choices:         Choice[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Choice[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default_permission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default_permission:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         DefineDiscordCommand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefineDiscordCommand[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefineDiscordCommand {\n  name: string;\n  description: string;\n  type?: number\n  options?: DefineDiscordCommand[]\n  required?: boolean\n  default_permission?: boolean\n  choices?: Choice[]\n}\n\nexport interface Choice {\n  name: string;\n  value: string\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscordApiService.html":{"url":"injectables/DiscordApiService.html","title":"injectable - DiscordApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscordApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/discord-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                            \n                                botToken\n                            \n                            \n                                discordUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteCommand\n                            \n                            \n                                    Async\n                                getCommands\n                            \n                            \n                                    Async\n                                registerNewCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_httpService: HttpService, _configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/services/discord-api.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCommand(commandId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commandId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCommands\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommands()\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerNewCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNewCommand(name: string, description: string, type?: number, options?: DefineDiscordCommand[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                DefineDiscordCommand[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(DiscordApiService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        botToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discordUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { lastValueFrom } from 'rxjs';\nimport { DefineDiscordCommand } from 'src/models/sub-command-options.model';\nimport { AxiosResponse } from \"axios\";\n\n@Injectable()\nexport class DiscordApiService {\n\n  private _logger: Logger = new Logger(DiscordApiService.name)\n\n  discordUrl: string;\n  botToken: string;\n\n  constructor(\n    private _httpService: HttpService,\n    private _configService: ConfigService,\n  ) {\n    this.botToken = this._configService.get('token')\n    this.discordUrl = `https://discord.com/api/v8/applications/${this._configService.get('applicationId')}/guilds/${this._configService.get('guildID')}/commands`\n\n    console.log('discordAPI url for commands:', this.discordUrl)\n    console.log('discordAPI token:', this.botToken)\n\n  }\n\n  async registerNewCommand(name: string, description: string, type?: number, options?: DefineDiscordCommand[]) {\n\n    try {\n      const data: DefineDiscordCommand = {\n        \"name\": name,\n        \"description\": description,\n      }\n\n      if (type) {\n        data.type = type;\n      }\n\n      if (options) {\n        data.options = options;\n      }\n\n      this._logger.warn(data)\n\n\n      const post = this._httpService.post(\n        this.discordUrl,\n        data, {\n        headers: {\n          'Authorization': `Bot ${this.botToken}`\n        }\n      })\n\n      return post.pipe().subscribe((data) => {\n        console.log('registerCommand response', data)\n      })\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n\n\n\n  }\n\n  async getCommands(): Promise> {\n    try {\n      const get = await lastValueFrom(this._httpService.get(\n        this.discordUrl,\n        {\n          headers: {\n            'Authorization': `Bot ${this.botToken}`\n          }\n        }\n      ))\n\n      if (get.status == 200) {\n        this._logger.debug(`REGISTERED COMMANDS: `, JSON.stringify(get.data))\n        return get;\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n\n  }\n\n  async deleteCommand(commandId: string): Promise> {\n    try {\n      const deleteCommand = await lastValueFrom(this._httpService.delete(\n        this.discordUrl + `/${commandId}`,\n        {\n          headers: {\n            'Authorization': `Bot ${this.botToken}`\n          }\n        }\n      ))\n\n      if (deleteCommand.status == 200) {\n        this._logger.debug(`DELETE COMMAND: `, JSON.stringify(deleteCommand.data))\n\n        return deleteCommand;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetDto.html":{"url":"classes/GetDto.html","title":"class - GetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/get/get.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/get/get.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nenum PublicStats {\n  true,\n  false\n}\n\nexport class GetDto {\n  @Param({ description: 'Xbox Gamer Tag', required: false })\n  gamertag: string;\n  // @Choice(PublicStats)\n  // isPublic: PublicStats;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HaloDotApiController.html":{"url":"controllers/HaloDotApiController.html","title":"controller - HaloDotApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HaloDotApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/halo-dot-api/halo-dot-api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                halo-dot-api\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runCommand\n                            \n                            \n                                    Async\n                                testQuery\n                            \n                            \n                                testService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        runCommand\n                        \n                    \n                \n            \n            \n                \nrunCommand()\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/halo-dot-api/halo-dot-api.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        testQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    testQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/halo-dot-api/halo-dot-api.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testService\n                        \n                    \n                \n            \n            \n                \ntestService()\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/halo-dot-api/halo-dot-api.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { On, Command, DiscordCommandProvider } from '@discord-nestjs/core';\nimport { HttpService } from '@nestjs/axios';\nimport { Controller, Logger, UseGuards } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { Message } from 'discord.js';\nimport { lastValueFrom } from 'rxjs';\nimport { MessageFromUserGuard } from 'src/guards/message-fom-user.guard';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { AxiosResponse } from \"axios\";\n\n\n@Controller('halo-dot-api')\nexport class HaloDotApiController {\n  private readonly _logger = new Logger(HaloDotApiController.name);\n  private _allowedChannelIds: string[] = ['911368720440496208'];\n  private _haloDotApiInfiniteBaseUrl: string;\n\n  constructor(\n    private _haloDotApiService: HaloDotApiService,\n    private _http: HttpService,\n    private _configService: ConfigService\n  ) {\n\n    this._haloDotApiInfiniteBaseUrl = `https://cryptum.halodotapi.com/games/hi/`\n\n    // this._haloDotApiService.getMotd().then((motd) => {\n    //   motd.unsubscribe();\n    // })\n  }\n\n  // @Cron(CronExpression.EVERY_30_SECONDS)\n  testService() {\n    // this._haloDotApiService.init().then((res) => {\n    //   this._logger.log(`res.status: ${res.status}`)\n    //   this._logger.log(`res.data:`, res.data)\n    //   this._logger.log(`res.headers:`, res.headers)\n\n    // })\n  }\n\n  runCommand() {\n\n  }\n\n  // @Cron(CronExpression.EVERY_5_SECONDS)\n  // @Cron(CronExpression.EVERY_5_MINUTES)\n  async testQuery() {\n    try {\n      // const response = await this.getMotdAsync()\n      const responseCsr = await this._haloDotApiService.requestPlayerStatsCSR('ex1tium1306', 'open')\n      if (responseCsr) {\n        // this._logger.log('responseCsr.data: ',JSON.s responseCsr.data);\n        this._logger.warn('responseCsr', responseCsr);\n      }\n\n      const responseServiceRecord = await this._haloDotApiService.requestPlayerServiceRecord('ex1tium1306')\n      if (responseServiceRecord) {\n        this._logger.warn('responseServiceRecord', responseServiceRecord);\n      }\n\n\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n\n      // if (error && error.response) {\n      //   this._logger.error(error?.response?.data);\n      // }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HaloDotApiMiddleware.html":{"url":"injectables/HaloDotApiMiddleware.html","title":"injectable - HaloDotApiMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HaloDotApiMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/halo-dot-api.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/halo-dot-api.middleware.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HaloDotApiMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/middleware/halo-dot-api.middleware.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class HaloDotApiMiddleware implements NestMiddleware {\n  private _logger = new Logger(HaloDotApiMiddleware.name);\n  // constructor(private _logger: Logger) { }\n\n\n  use(req: Request, res: Response, next: NextFunction) {\n\n    // const\n\n    this._logger.warn('HaloDotApiMiddleWare HEADER: ', req.headers)\n    // console.log()\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HaloDotApiModule.html":{"url":"modules/HaloDotApiModule.html","title":"module - HaloDotApiModule","body":"\n                   \n\n\n\n\n    Modules\n    HaloDotApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HaloDotApiModule\n\n\n\ncluster_HaloDotApiModule_imports\n\n\n\ncluster_HaloDotApiModule_providers\n\n\n\n\nHaloDotApiModule\n\nHaloDotApiModule\n\nHaloDotApiModule -->\n\nHaloDotApiModule->HaloDotApiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHaloDotApiModule -->\n\nSharedModule->HaloDotApiModule\n\n\n\n\n\nHaloDotApiService\n\nHaloDotApiService\n\nHaloDotApiModule -->\n\nHaloDotApiService->HaloDotApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/controllers/halo-dot-api/halo-dot-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HaloDotApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HaloDotApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HaloDotApiModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/halo-dot-api/halo-dot-api.module.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DiscordCommandProvider } from '@discord-nestjs/core';\nimport { HttpModule } from '@nestjs/axios';\nimport { MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER } from '@nestjs/core';\nimport { AllExceptionsFilter } from 'src/exception-filters/globalExceptions';\nimport { HaloDotApiMiddleware } from 'src/middleware/halo-dot-api.middleware';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { SharedModule } from 'src/shared/shared.module';\nimport { HaloDotApiController } from './halo-dot-api.controller';\n\n@Module({\n  imports: [\n    SharedModule,\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (_configService: ConfigService) => ({\n        // headers: {\n        //   'Authorization': `Cryptum-Token ${_configService.get('haloDotToken')}`,\n        //   'Content-Type': 'application/json',\n        //   'Cryptum-API-Version': '2.3-alpha'\n        // }\n      }),\n      inject: [ConfigService],\n    }),\n    HaloDotApiModule\n    // HttpModule.register({\n    //   headers: {\n    //     'Authorization': 'Cryptum-Token HIDM6WWaSZUc15AhW8jAPc3kJoAlOizH63Kn3XGqn4gmHEgBxO3dfEj1oqbMe2Oq',\n    //     'Cryptum-API-Version': 'Cryptum-API-Version: 2.3-alpha'\n    //   }\n    // })\n  ],\n  controllers: [HaloDotApiController],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    HaloDotApiService]\n})\nexport class HaloDotApiModule implements NestModule {\n\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(HaloDotApiMiddleware)\n      .forRoutes(HaloDotApiController)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HaloDotApiService.html":{"url":"injectables/HaloDotApiService.html","title":"injectable - HaloDotApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HaloDotApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/halodotapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _haloDotApiInfiniteBaseUrl\n                            \n                            \n                                    Private\n                                _headers\n                            \n                            \n                                    Private\n                                    Readonly\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMotd\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                requestPlayerServiceRecord\n                            \n                            \n                                    Async\n                                requestPlayerStatsCSR\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpService, _configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMotd\n                        \n                    \n                \n            \n            \n                \ngetMotd()\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestPlayerServiceRecord\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestPlayerServiceRecord(gamertag: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gamertag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestPlayerStatsCSR\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestPlayerStatsCSR(gamertag: string, queue: \"open\" | \"solo-duo\")\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gamertag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queue\n                                    \n                                            \"open\" | \"solo-duo\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _haloDotApiInfiniteBaseUrl\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _headers\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HaloDotApiService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosResponse } from \"axios\";\nimport { lastValueFrom, Observable } from 'rxjs';\n@Injectable()\nexport class HaloDotApiService {\n  private readonly _logger = new Logger(HaloDotApiService.name);\n\n  private _haloDotApiInfiniteBaseUrl\n  private _headers;\n\n\n  constructor(\n    private _http: HttpService,\n    private _configService: ConfigService\n  ) {\n    this._haloDotApiInfiniteBaseUrl = `https://cryptum.halodotapi.com/games/hi/`;\n    this._headers = {\n      'Authorization': `Cryptum-Token ${this._configService.get('haloDotToken')}`,\n      'Content-Type': 'application/json',\n      'Cryptum-API-Version': '2.3-alpha'\n    }\n  }\n\n  async init(): Promise> {\n    try {\n      this._logger.debug(`haloDotApiBaseUrl: ${this._haloDotApiInfiniteBaseUrl}`)\n      const url = 'https://cryptum.halodotapi.com/'\n      // const req =\n      return await lastValueFrom(this._http.get(url));\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n    // this._http.get()\n\n  }\n\n  getMotd(): Observable> {\n    const url = this._haloDotApiInfiniteBaseUrl + 'motd';\n    this._logger.debug(`url: ${url}`)\n    const request = this._http.get(url, {\n\n    })\n    return request;\n  }\n\n  async requestPlayerStatsCSR(gamertag: string, queue: 'open' | 'solo-duo') {\n    try {\n      let returnValue: CsrsModels.CsrsRootObject;\n\n      const url = this._haloDotApiInfiniteBaseUrl + `stats/players/${gamertag}/csrs`;\n      const request = await lastValueFrom(this._http.get(url, {\n        headers: this._headers\n      }))\n      if (request && request.status === 200) {\n        returnValue = request.data as CsrsModels.CsrsRootObject;\n      }\n      return returnValue;\n\n    } catch (error) {\n      // throw new Error(error);\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  async requestPlayerServiceRecord(gamertag: string) {\n    try {\n      let returnValue: ServiceRecordsModels.ServiceRecord | undefined;\n\n      const url = this._haloDotApiInfiniteBaseUrl + `stats/players/${gamertag}/service-record/global`;\n      // this._logger.warn(`url: ${url}`)\n      const request = await lastValueFrom(this._http.get(url, {\n        headers: this._headers\n      }))\n      if (request && request.status == 200) {\n        returnValue = request.data as ServiceRecordsModels.ServiceRecord;\n      }\n      return returnValue;\n\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  // async getMotdAsync(): Promise> {\n  //   const url = this._haloDotApiInfiniteBaseUrl + 'motd';\n  //   this._logger.warn(`url: ${url}`)\n\n  //   const headers = {\n  //     'Authorization': `Cryptum-Token ${this._configService.get('haloDotToken')}`,\n  //     'Content-Type': 'application/json',\n  //     'Cryptum-API-Version': 'Cryptum-API-Version: 2.3-alpha'\n  //   }\n  //   this._logger.debug(`headers: ${JSON.stringify(headers)}`)\n  //   const request = lastValueFrom(this._http.get(url, {\n  //     headers\n  //   }))\n  //   return request;\n  // }\n}\n\n\n// declare module namespace {\n\n// export interface Current {\n//   value: number;\n//   measurement_matches_remaining: number;\n//   tier: string;\n//   tier_start: number;\n//   sub_tier: number;\n//   next_tier: string;\n//   next_tier_start: number;\n//   next_sub_tier: number;\n//   initial_measurement_matches: number;\n//   tier_image_url: string;\n// }\n\n// export interface Season {\n//   value: number;\n//   measurement_matches_remaining: number;\n//   tier: string;\n//   tier_start: number;\n//   sub_tier: number;\n//   next_tier: string;\n//   next_tier_start: number;\n//   next_sub_tier: number;\n//   initial_measurement_matches: number;\n//   tier_image_url: string;\n// }\n\n// export interface AllTime {\n//   value: number;\n//   measurement_matches_remaining: number;\n//   tier: string;\n//   tier_start: number;\n//   sub_tier: number;\n//   next_tier: string;\n//   next_tier_start: number;\n//   next_sub_tier: number;\n//   initial_measurement_matches: number;\n//   tier_image_url: string;\n// }\n\n// export interface Response {\n//   current: Current;\n//   season: Season;\n//   all_time: AllTime;\n// }\n\n// export interface QueueGroups {\n//   queue: 'open' | 'solo-duo';\n//   input: 'crossplay' | 'controller' | 'mnk';\n//   response: Response;\n// }\n\n// export interface Additional {\n//   gamertag: string;\n//   season: number;\n// }\n\n// export interface CsrsRootObject {\n//   data: QueueGroups[];\n//   additional: Additional;\n// }\n\n// }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Kills.html":{"url":"interfaces/Kills.html","title":"interface - Kills","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Kills\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            grenades\n                                        \n                                \n                                \n                                        \n                                            headshots\n                                        \n                                \n                                \n                                        \n                                            melee\n                                        \n                                \n                                \n                                        \n                                            power_weapons\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        grenades\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grenades:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headshots\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headshots:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        melee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        melee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        power_weapons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        power_weapons:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Matches.html":{"url":"interfaces/Matches.html","title":"interface - Matches","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Matches\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            draws\n                                        \n                                \n                                \n                                        \n                                            left\n                                        \n                                \n                                \n                                        \n                                            losses\n                                        \n                                \n                                \n                                        \n                                            wins\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        draws\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draws:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        losses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        losses:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wins:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageFromUserGuard.html":{"url":"classes/MessageFromUserGuard.html","title":"class - MessageFromUserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageFromUserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/message-fom-user.guard.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActive\n                        \n                    \n                \n            \n            \n                \ncanActive(event, undefined: [Message])\n                \n            \n\n\n            \n                \n                    Defined in src/guards/message-fom-user.guard.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            [Message]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DiscordGuard } from '@discord-nestjs/core';\nimport { Message } from 'discord.js';\n\nexport class MessageFromUserGuard implements DiscordGuard {\n  canActive(event: 'messageCreate', [message]: [Message]): boolean {\n    return !message.author.bot;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageToUpperPipe.html":{"url":"classes/MessageToUpperPipe.html","title":"class - MessageToUpperPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageToUpperPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/message-to-upper.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordPipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(undefined: [Message])\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/message-to-upper.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            [Message]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DiscordPipeTransform } from '@discord-nestjs/core';\nimport { Message } from 'discord.js';\n\nexport class MessageToUpperPipe implements DiscordPipeTransform {\n  transform([message]: [Message]): [Message] {\n    message.content = message.content.toUpperCase();\n\n    return [message];\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/Oauth2DiscordController.html":{"url":"controllers/Oauth2DiscordController.html","title":"controller - Oauth2DiscordController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  Oauth2DiscordController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/oauth2-discord/oauth2-discord.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                oauth2-discord\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                callbackForDiscordOauth2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        callbackForDiscordOauth2\n                        \n                    \n                \n            \n            \n                \n                    \n                    callbackForDiscordOauth2(request: Request, response: Response, body: Body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/controllers/oauth2-discord/oauth2-discord.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                            Body\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Request, Req, Logger, Body, Res, Response, HttpStatus } from '@nestjs/common';\n\n\n@Controller('oauth2-discord')\nexport class Oauth2DiscordController {\n\n  private _logger: Logger = new Logger(Oauth2DiscordController.name)\n\n  @Get()\n  async callbackForDiscordOauth2(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n    @Body() body: Body\n  ) {\n\n    if (request) {\n      // const requestJson = await request.json();\n      this._logger.verbose(`request json: ${JSON.stringify(request.body)}`)\n    }\n\n    if (response) {\n      // const responseJson = await response.json();\n      this._logger.verbose(`request json: ${JSON.stringify(response.body)}`)\n    }\n\n    if (body) {\n      // const bodyJson = await body.json();\n      this._logger.verbose(`request json: ${JSON.stringify(body.body)}`)\n    }\n\n    return HttpStatus.OK\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Oauth2DiscordModule.html":{"url":"modules/Oauth2DiscordModule.html","title":"module - Oauth2DiscordModule","body":"\n                   \n\n\n\n\n    Modules\n    Oauth2DiscordModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/controllers/oauth2-discord/oauth2-discord.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            Oauth2DiscordController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Oauth2DiscordController } from './oauth2-discord.controller';\n\n@Module({\n  controllers: [Oauth2DiscordController]\n})\nexport class Oauth2DiscordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient\n  implements OnModuleInit {\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueueGroups.html":{"url":"interfaces/QueueGroups.html","title":"interface - QueueGroups","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueueGroups\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            input\n                                        \n                                \n                                \n                                        \n                                            queue\n                                        \n                                \n                                \n                                        \n                                            response\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input:     \"crossplay\" | \"controller\" | \"mnk\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"crossplay\" | \"controller\" | \"mnk\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue:     \"open\" | \"solo-duo\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"open\" | \"solo-duo\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response:         Response\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Response\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/register/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowlogging\n                            \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allowlogging\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Allow logging to a database', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class RegisterDto {\n  @Param({ description: 'Xbox Gamer Tag', required: true })\n  gamertag: string;\n  @Param({ description: 'Allow logging to a database', required: true })\n  allowlogging: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            all_time\n                                        \n                                \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            season\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        all_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        all_time:         AllTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AllTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         Current\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Current\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        season:         Season\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Season\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Season.html":{"url":"interfaces/Season.html","title":"interface - Season","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Season\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceRecord.html":{"url":"interfaces/ServiceRecord.html","title":"interface - ServiceRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            additional\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additional:         Additional\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Additional\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nDiscordCommandProvider \n\nDiscordCommandProvider \n\n\n\nHaloDotApiService \n\nHaloDotApiService \n\n\n\nPrismaService \n\nPrismaService \n\n\n\nTwitterService \n\nTwitterService \n\n\n\nUserService \n\nUserService \n\n\n\nSharedModule\n\nSharedModule\n\nDiscordCommandProvider  -->\n\nSharedModule->DiscordCommandProvider \n\n\n\nHaloDotApiService  -->\n\nSharedModule->HaloDotApiService \n\n\n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\nTwitterService  -->\n\nSharedModule->TwitterService \n\n\n\nUserService  -->\n\nSharedModule->UserService \n\n\n\n\n\nHaloDotApiService\n\nHaloDotApiService\n\nSharedModule -->\n\nHaloDotApiService->SharedModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\nTwitterService\n\nTwitterService\n\nSharedModule -->\n\nTwitterService->SharedModule\n\n\n\n\n\nUserService\n\nUserService\n\nSharedModule -->\n\nUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HaloDotApiService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            TwitterService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiscordCommandProvider\n                        \n                        \n                            HaloDotApiService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            TwitterService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DiscordCommandProvider, DiscordModule } from '@discord-nestjs/core';\nimport { HttpModule, HttpService } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER } from '@nestjs/core';\nimport { Intents, Message } from 'discord.js';\nimport { AllExceptionsFilter } from 'src/exception-filters/globalExceptions';\nimport { DiscordApiService } from 'src/services/discord-api.service';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\n// import { DiscordConfigService } from 'src/services/discord-config.service';\nimport { PrismaService } from 'src/services/prisma.service';\n// import { PrismaModule } from 'src/services/prisma/prisma.module';\nimport { TwitterService } from 'src/services/twitter.service';\n// import { TwitterModule } from 'src/services/twitter/twitter.module';\nimport { UserService } from 'src/services/user.service';\n\n@Module({\n  imports: [\n    // DiscordModule.forRootAsync({\n    //   imports: [ConfigModule, PrismaModule],\n    //   useClass: DiscordConfigService,\n    // }),\n    HttpModule,\n    DiscordModule.forRootAsync({\n      imports: [ConfigModule, SharedModule],\n      useFactory: (configService: ConfigService) => ({\n        token: configService.get('token'),\n        commands: ['**/**/*.command.js'],\n        autoRegisterGlobalCommands: true,\n        discordClientOptions: {\n          intents: [\n            Intents.FLAGS.GUILDS,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MEMBERS,\n            Intents.FLAGS.GUILD_BANS,\n            Intents.FLAGS.GUILD_EMOJIS_AND_STICKERS,\n            Intents.FLAGS.GUILD_INTEGRATIONS,\n            Intents.FLAGS.GUILD_WEBHOOKS,\n            Intents.FLAGS.GUILD_INVITES,\n            Intents.FLAGS.GUILD_VOICE_STATES,\n            Intents.FLAGS.GUILD_PRESENCES,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MESSAGE_REACTIONS,\n            Intents.FLAGS.GUILD_MESSAGE_TYPING,\n            Intents.FLAGS.DIRECT_MESSAGES,\n            Intents.FLAGS.DIRECT_MESSAGE_REACTIONS,\n            Intents.FLAGS.DIRECT_MESSAGE_TYPING,\n          ],\n        },\n        allowGuilds: JSON.parse(configService.get('allowGuilds')),\n        registerCommandOptions: [\n          {\n            forGuild: configService.get('guildID'),\n            allowFactory: (message: Message) =>\n              !message.author.bot && message.content === '!deploy',\n          },\n        ],\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    TwitterService, PrismaService, UserService, HaloDotApiService, DiscordCommandProvider],\n  exports: [TwitterService, PrismaService, UserService, HaloDotApiService, DiscordCommandProvider]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Shots.html":{"url":"interfaces/Shots.html","title":"interface - Shots","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Shots\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accuracy\n                                        \n                                \n                                \n                                        \n                                            fired\n                                        \n                                \n                                \n                                        \n                                            landed\n                                        \n                                \n                                \n                                        \n                                            missed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accuracy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accuracy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fired\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fired:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        landed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        landed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        missed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsBaseCommand.html":{"url":"classes/StatsBaseCommand.html","title":"class - StatsBaseCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsBaseCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/stats.command.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StatsDto } from './stats.dto';\nimport { Command, UsePipes, Payload, DiscordTransformedCommand, UseGroup, DiscordCommand, UseFilters } from '@discord-nestjs/core';\nimport { TransformPipe, ValidationPipe } from '@discord-nestjs/common';\nimport { CommandInteraction, InteractionReplyOptions, MessageEmbed } from 'discord.js';\nimport { StatsRegSubCommand } from './register/register.command';\nimport { StatsHelpSubCommand } from './help/help.command';\nimport { StatsGetSubCommand } from './get/get.command';\nimport { StatsUpdateSubCommand } from './update/update.command';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\n\n// @UseFilters(CommandValidationFilter)\n// @UsePipes(TransformPipe, ValidationPipe)\n@Command({\n  name: 'stats',\n  description: 'Stats provided by HaloDotAPI',\n  include: [\n    // UseGroup(\n    //   { name: 'reg', description: 'Register Xbox Gamer Tag' },\n    // ),\n    StatsGetSubCommand,\n    StatsUpdateSubCommand,\n    StatsRegSubCommand,\n    StatsHelpSubCommand\n\n  ],\n})\nexport class StatsBaseCommand { }\n\n// implements DiscordCommand {\n//   handler(interaction: CommandInteraction): InteractionReplyOptions {\n//     // console.log(JSON.stringify(interaction));\n//     // console.log(`User was registered with name: ${dto.name}`)\n\n//     // const { user } = interaction;\n\n//     const embed = new MessageEmbed().setTitle('stats')\n\n\n//     return {\n//       embeds: [embed],\n//     };\n//     // return `Stats test command`;\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsDto.html":{"url":"classes/StatsDto.html","title":"class - StatsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/stats.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class StatsDto {\n  // @Param({ description: 'User name', required: true })\n  // name: string;\n\n  // @Param({\n  //   name: 'phone-number',\n  //   description: 'Phone number',\n  //   required: true,\n  // })\n  // phoneNumber: string;\n\n  // @Param({ description: 'User nickname', required: true })\n  // name: string;\n\n  // @Param({ description: 'User age', required: true, type: ParamType.INTEGER })\n  // age: number;\n\n  // @Choice(City)\n  // @Param({ description: 'City of residence', type: ParamType.INTEGER })\n  // city: City;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsGetSubCommand.html":{"url":"classes/StatsGetSubCommand.html","title":"class - StatsGetSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsGetSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/get/get.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_haloDotApi: HaloDotApiService, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/get/get.command.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _haloDotApi\n                                                  \n                                                        \n                                                                        HaloDotApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(StatsGetSubCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/get/get.command.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: GetDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/get/get.command.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                GetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport { DiscordCommand, DiscordTransformedCommand, Payload, SubCommand, UsePipes } from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { UserService } from 'src/services/user.service';\nimport { GetDto } from './get.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'get', description: 'Prints our your stats' })\nexport class StatsGetSubCommand implements DiscordTransformedCommand {\n\n  private _logger: Logger = new Logger(StatsGetSubCommand.name)\n\n  constructor(\n    private _haloDotApi: HaloDotApiService,\n    private _userService: UserService\n  ) { }\n\n  async handler(@Payload() dto: GetDto, interaction: CommandInteraction): Promise {\n    try {\n\n\n      const defer = await interaction.deferReply({ fetchReply: true });\n      // const reply = await interaction.fetchReply()\n      this._logger.verbose(JSON.stringify(defer))\n\n      // https://github.com/discordjs/discord.js/issues/7005\n      const hasParam = !!dto.gamertag\n      const userId = interaction.user.id\n\n      let gamerTag: string;\n      let embedReply: MessageEmbed;\n\n      let replyMessage: InteractionReplyOptions;\n\n      if (hasParam) {\n        gamerTag = dto.gamertag;\n        this._logger.debug(`gamerTag as param: ${gamerTag}`)\n\n\n        const statsCSR = await this._haloDotApi.requestPlayerStatsCSR(gamerTag, 'open').catch((error) => {\n          this._logger.error(error)\n        })\n        const statsRecord = await this._haloDotApi.requestPlayerServiceRecord(gamerTag).catch((error) => {\n          this._logger.error(error)\n        })\n\n        if (statsCSR && statsCSR.data && statsRecord && statsRecord.data && !interaction.replied) {\n\n          embedReply = new MessageEmbed()\n            .setColor('#CCCCFF')\n            .setThumbnail(statsCSR.data[0].response.current.tier_image_url)\n            .setTitle(gamerTag)\n            .setDescription(statsCSR.data[0].response.current.tier)\n            .addFields(\n              { name: `Kills`, value: ` ${statsRecord.data.summary.kills}`, inline: true },\n              { name: `Deaths`, value: ` ${statsRecord.data.summary.deaths}`, inline: true },\n              { name: `Assists`, value: ` ${statsRecord.data.summary.assists}`, inline: true },\n            )\n            .addFields(\n              { name: `KDA`, value: ` ${statsRecord.data.kda.toFixed(1)}`, inline: true },\n              { name: `KDR`, value: ` ${statsRecord.data.kdr.toFixed(1)}`, inline: true },\n              { name: `Matches Played`, value: ` ${statsRecord.data.matches_played}`, inline: true },\n            )\n            .setFooter({\n              text: `Time played: ${statsRecord.data.time_played.human}. Wins: ${statsRecord.data.win_rate.toFixed(1)}%`,\n            })\n          // .setTimestamp()\n          replyMessage = {\n            embeds: [embedReply],\n            fetchReply: true\n          }\n\n          console.log('1')\n\n          if (interaction.deferred && !interaction.replied)\n            await interaction.editReply(replyMessage).then((reply) => { this._logger.verbose(reply) }).catch((error) => {\n              Promise.reject(error)\n            })\n\n\n        } else {\n          let errorEmbed = new MessageEmbed()\n            .setColor('#FF0000')\n            .setTitle('Error')\n            .setDescription(`Stats not found for ${gamerTag}`)\n          replyMessage = {\n            embeds: [errorEmbed],\n            fetchReply: true\n          }\n\n          console.log('2')\n\n          // if (interaction.deferred && !interaction.replied)\n          await interaction.editReply(replyMessage).then((reply) => { this._logger.verbose(reply) }).catch((error) => {\n            Promise.reject(error)\n          })\n\n          // interaction.reply(replyMessage).then((reply) => {\n          //   this._logger.debug(`reply: ${reply}`)\n          // })\n        }\n\n      } else {\n        const botUser = await this._userService.user({\n          discord_user_id: userId,\n        }).catch((error) => {\n          this._logger.error(error)\n        })\n\n        if (botUser) {\n          gamerTag = botUser.gamertag\n          this._logger.debug(`gamerTag from botuser: ${gamerTag}`)\n\n          // TODO write query against HaloDotApi\n          const statsCSR = await this._haloDotApi.requestPlayerStatsCSR(gamerTag, 'open').catch((error) => {\n            this._logger.error(error)\n          })\n\n          const statsRecord = await this._haloDotApi.requestPlayerServiceRecord(gamerTag).catch((error) => {\n            this._logger.error(error)\n          })\n\n          if (statsCSR && statsCSR.data && statsRecord && statsRecord.data && !interaction.replied) {\n\n            embedReply = new MessageEmbed()\n              .setColor('#CCCCFF')\n              .setThumbnail(statsCSR.data[0].response.current.tier_image_url)\n              .setTitle(gamerTag)\n              .setDescription(statsCSR.data[0].response.current.tier)\n              .addFields(\n                { name: `Kills`, value: ` ${statsRecord.data.summary.kills}`, inline: true },\n                { name: `Deaths`, value: ` ${statsRecord.data.summary.deaths}`, inline: true },\n                { name: `Assists`, value: ` ${statsRecord.data.summary.assists}`, inline: true },\n              )\n              .addFields(\n                { name: `KDA`, value: ` ${statsRecord.data.kda.toFixed(1)}`, inline: true },\n                { name: `KDR`, value: ` ${statsRecord.data.kdr.toFixed(1)}`, inline: true },\n                { name: `Matches Played`, value: ` ${statsRecord.data.matches_played}`, inline: true },\n              )\n              .setFooter({\n                text: `Time played: ${statsRecord.data.time_played.human}. Wins: ${statsRecord.data.win_rate.toFixed(1)}%`,\n              })            // .setTimestamp()\n\n            replyMessage = {\n              embeds: [embedReply],\n              fetchReply: true\n            }\n            console.log('3')\n\n\n            // if (interaction.deferred && !interaction.replied)\n            //   return await interaction.editReply(replyMessage).then((reply) => { interaction.deleteReply() }).catch((error) => {\n            //     Promise.reject(error)\n            //   })\n\n\n            if (interaction.deferred && !interaction.replied)\n              await interaction.editReply(replyMessage).then((reply) => { this._logger.verbose(reply) }).catch((error) => {\n                Promise.reject(error)\n              })\n\n\n            // interaction.reply(replyMessage).then((reply) => {\n            //   this._logger.debug(`reply: ${reply}`)\n            // }).finally(() => {\n            //   // interaction.editReply('edit reply')\n            // })\n\n            // return await interaction.followUp(replyMessage)\n\n\n\n\n          } else {\n            let errorEmbed = new MessageEmbed()\n              .setColor('#FF0000')\n              .setTitle('Error')\n              .setDescription(`Stats not found for ${gamerTag}`)\n            replyMessage = {\n              embeds: [errorEmbed],\n              fetchReply: true\n            }\n\n            console.log('4')\n\n            // if (interaction.deferred && !interaction.replied)\n            //   return await interaction.editReply(replyMessage).then((reply) => { interaction.deleteReply() }).catch((error) => {\n            //     Promise.reject(error)\n            //   })\n\n            if (interaction.deferred && !interaction.replied)\n              await interaction.editReply(replyMessage).then((reply) => { this._logger.verbose(reply) }).catch((error) => {\n                Promise.reject(error)\n              })\n\n            // interaction.reply(replyMessage).then((reply) => {\n            //   this._logger.debug(`reply: ${reply}`)\n            // })\n\n          }\n\n        } else {\n          embedReply = new MessageEmbed()\n            .setColor('#FF7F50')\n            // .setDescription('Gamertag Updated')\n            .addFields(\n              { name: `Error`, value: `No Xbox Gametag registered for user` },\n            )\n          // .setTimestamp()\n          replyMessage = {\n            embeds: [embedReply],\n            fetchReply: true\n          }\n\n          console.log('5')\n\n          // if (interaction.deferred && !interaction.replied)\n          //   return await interaction.editReply(replyMessage).then((reply) => { interaction.deleteReply() }).catch((error) => {\n          //     Promise.reject(error)\n          //   })\n          if (interaction.deferred && !interaction.replied)\n            await interaction.editReply(replyMessage).then((reply) => { this._logger.verbose(reply) }).catch((error) => {\n              Promise.reject(error)\n            })\n\n          // interaction.reply(replyMessage).then((reply) => {\n          //   this._logger.debug(`reply: ${reply}`)\n          // })\n        }\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n\n\n// // import { EmailDto } from '../../dto/email.dto';\n// import { TransformPipe } from '@discord-nestjs/common';\n// import {\n//   Payload,\n//   // SubCommand,\n//   DiscordTransformedCommand,\n//   UsePipes,\n// } from '@discord-nestjs/core';\n\n// @UsePipes(TransformPipe)\n// @SubCommand({ name: 'email', description: 'Register by email' })\n// export class EmailSubCommand implements DiscordTransformedCommand {\n//   handler(@Payload() dto: EmailDto): string {\n//     return `Success register user: ${dto.email}, ${dto.name}, ${dto.age}, ${dto.city}`;\n//   }\n// }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsHelpDto.html":{"url":"classes/StatsHelpDto.html","title":"class - StatsHelpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsHelpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/help/help.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lang\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Select language', required: true})@Choice(Language)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/help/help.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nenum Language {\n  FI = 'fi',\n  EN = 'en'\n}\n\nexport class StatsHelpDto {\n  @Param({ description: 'Select language', required: true })\n  @Choice(Language)\n  lang: Language;\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsHelpSubCommand.html":{"url":"classes/StatsHelpSubCommand.html","title":"class - StatsHelpSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsHelpSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/help/help.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/help/help.command.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/help/help.command.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: StatsHelpDto, interaction?: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/help/help.command.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                StatsHelpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport { DiscordCommand, DiscordTransformedCommand, Payload, SubCommand, UsePipes } from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { StatsHelpDto } from './help.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'help', description: 'READ ME' })\nexport class StatsHelpSubCommand implements DiscordTransformedCommand {\n\n  private _logger: Logger = new Logger('StatsRegSubCommand')\n\n  constructor() { }\n\n  async handler(@Payload() dto: StatsHelpDto, interaction?: CommandInteraction) {\n    try {\n      this._logger.verbose('HELP COMMAND', dto.lang)\n\n      // this._logger.verbose(JSON.stringify(dto))\n      this._logger.verbose(interaction)\n\n      if (dto.lang == 'fi') {\n        const embedHelpFi = new MessageEmbed()\n          .setColor('#0099ff')\n          .setTitle('Ohjeet')\n          // .setURL('https://discord.js.org/')\n          // .setAuthor('Some name', 'https://i.imgur.com/AfFp7pu.png', 'https://discord.js.org')\n          .setDescription('Ohjeistus alikomennoille /stats. ?:parametri: tarkoittaa että se on valinnainen.')\n          // .setThumbnail('https://i.imgur.com/AfFp7pu.png')\n          .addFields(\n            { name: 'help :lang:', value: 'Tulostaa tämän viestin' },\n            { name: 'reg :gamertag: :allowlogging:', value: 'Rekisteröi Xbox gamertägisi' },\n            { name: 'update', value: 'Päivitä tilastot' },\n            { name: 'get ?:gamertag:', value: 'Tulostaa käyttäjän Halo Infinite tilastot tai hakee käyttäjän tilastot gamertagille' },\n          )\n          .setFooter({\n            text: 'Bug reports and feature requests 🅴🆇 𝟭 🆃🅸🆄🅼#2753'\n          })\n          // .setImage('https://i.imgur.com/AfFp7pu.png') //TODO Statsi kuva?\n          .setTimestamp()\n\n        return interaction.reply({\n          embeds: [embedHelpFi],\n          ephemeral: true\n        }).catch((error) => {\n          Promise.reject(error)\n        })\n      } else {\n        const embedHelpEn = new MessageEmbed()\n          .setColor('#0099ff')\n          .setTitle('Help')\n          // .setURL('https://discord.js.org/')\n          // .setAuthor('Some name', 'https://i.imgur.com/AfFp7pu.png', 'https://discord.js.org')\n          .setDescription('Help for subcommands of /stats. ?:param: means its optional.')\n          // .setThumbnail('https://i.imgur.com/AfFp7pu.png')\n          .addFields(\n            { name: 'help :lang:', value: 'Prints this message in chosen language' },\n            { name: 'reg :tag: :allowlogging:', value: 'Registers your Xbox gamertag for stats' },\n            { name: 'update', value: 'Updates latest stats from API' },\n            { name: 'get', value: 'Prints your stats or stats for gamertag' },\n          )\n          .setFooter({\n            text: 'Bugi raportit ja kehitysehdotukset 🅴🆇 𝟭 🆃🅸🆄🅼#2753'\n          })\n          // .setImage('https://i.imgur.com/AfFp7pu.png') //TODO Statsi kuva?\n          .setTimestamp()\n\n        return interaction.reply({\n          embeds: [embedHelpEn],\n          ephemeral: true\n        }).catch((error) => {\n          Promise.reject(error)\n        })\n      }\n\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n\n  }\n}\n\n\n\n// // import { EmailDto } from '../../dto/email.dto';\n// import { TransformPipe } from '@discord-nestjs/common';\n// import {\n//   Payload,\n//   // SubCommand,\n//   DiscordTransformedCommand,\n//   UsePipes,\n// } from '@discord-nestjs/core';\n\n// @UsePipes(TransformPipe)\n// @SubCommand({ name: 'email', description: 'Register by email' })\n// export class EmailSubCommand implements DiscordTransformedCommand {\n//   handler(@Payload() dto: EmailDto): string {\n//     return `Success register user: ${dto.email}, ${dto.name}, ${dto.age}, ${dto.city}`;\n//   }\n// }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsRegSubCommand.html":{"url":"classes/StatsRegSubCommand.html","title":"class - StatsRegSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsRegSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/register/register.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/register/register.command.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.command.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: RegisterDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/register/register.command.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport { DiscordCommand, DiscordTransformedCommand, Payload, SubCommand, UsePipes } from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { PrismaService } from 'src/services/prisma.service';\nimport { TwitterService } from 'src/services/twitter.service';\nimport { UserService } from 'src/services/user.service';\nimport { RegisterDto } from './register.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'reg', description: 'Register your Xbox Gamer tag' })\nexport class StatsRegSubCommand implements DiscordTransformedCommand {\n\n  private _logger: Logger = new Logger('StatsRegSubCommand')\n\n  constructor(\n    private _userService: UserService\n  ) { }\n\n  // constructor(private _twitterService: TwitterService) { }\n\n\n  async handler(@Payload() dto: RegisterDto, interaction: CommandInteraction) {\n\n    try {\n\n      const gamerTag = dto.gamertag;\n      const allowLogging = dto.allowlogging;\n      this._logger.warn(`allowLogging: ${allowLogging}`)\n\n      const userId = interaction.user.id\n      const userExists = await this._userService.user({\n        discord_user_id: userId,\n      })\n\n      let wasUpdated = false;\n\n\n      this._logger.warn(`userExists: ${JSON.stringify(userExists)}`)\n\n      if (userExists && userExists.discord_user_id) {\n        this._userService.updateUser({\n          where: {\n            discord_user_id: userId,\n          },\n          data: {\n            gamertag: gamerTag,\n            allow_stats_logging: allowLogging ? 1 : 0\n          }\n        })\n\n        wasUpdated = true\n      } else {\n        this._userService.createUser({\n          discord_user_id: userId,\n          gamertag: gamerTag,\n          allow_stats_logging: allowLogging ? 1 : 0\n        })\n      }\n\n      // this._logger.verbose(dto.gamertag)\n\n      // this._logger.verbose(JSON.stringify(dto))\n      // this._logger.verbose(interaction.user)\n\n      // this._logger.debug(`userId: ${userId}`)\n\n      let embedReply: MessageEmbed;\n      if (wasUpdated) {\n        embedReply = new MessageEmbed()\n          .setColor('#DFFF00')\n          // .setDescription('Gamertag Updated')\n          .addFields(\n            { name: `Old Gamertag`, value: `${userExists.gamertag}` },\n            { name: `New Gamertag`, value: `${gamerTag}` },\n            { name: `Logging`, value: `${allowLogging ? 'enabled' : 'disabled'}` },\n          )\n        // .setTimestamp()\n\n      } else {\n        embedReply = new MessageEmbed()\n          .setColor('#40E0D0')\n          // .setDescription('Gamertag Saved')\n          .addFields(\n            // { name: `Old Gamertag`, value: `${userExists.gamerTag}` },\n            { name: `Registered Xbox Gamertag`, value: `${gamerTag}` },\n            { name: `Logging`, value: `${allowLogging ? 'enabled' : 'disabled'}` },\n\n          )\n        // .setTimestamp()\n      }\n\n      const reply = {\n        embeds: [embedReply]\n      }\n\n      return interaction.reply(reply).catch((error) => {\n        Promise.reject(error)\n      })\n\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsUpdateSubCommand.html":{"url":"classes/StatsUpdateSubCommand.html","title":"class - StatsUpdateSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsUpdateSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/update/update.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/update/update.command.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(StatsUpdateSubCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/update/update.command.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: UpdateDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/update/update.command.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport { DiscordCommand, DiscordTransformedCommand, Payload, SubCommand, UsePipes } from '@discord-nestjs/core';\nimport { Logger } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { UserService } from 'src/services/user.service';\nimport { UpdateDto } from './update.dto';\n\n@UsePipes(TransformPipe)\n@SubCommand({ name: 'update', description: 'Update your registered Xbox Gamer Tag' })\nexport class StatsUpdateSubCommand implements DiscordTransformedCommand {\n\n  private _logger: Logger = new Logger(StatsUpdateSubCommand.name)\n\n  constructor(private _userService: UserService) { }\n\n  async handler(@Payload() dto: UpdateDto, interaction: CommandInteraction) {\n    try {\n\n      const gamerTag = dto.gamertag\n      const userId = interaction.user.id\n      const userExists = await this._userService.user({\n        discord_user_id: userId,\n      })\n      let embedReply: MessageEmbed;\n\n      if (userExists) {\n        this._userService.updateUser({\n          where: {\n            discord_user_id: userId,\n          },\n          data: {\n            gamertag: gamerTag\n          }\n        })\n\n        embedReply = new MessageEmbed()\n          .setColor('#DFFF00')\n          // .setDescription('Gamertag Updated')\n          .addFields(\n            { name: `Old Gamertag`, value: `${userExists.gamertag}` },\n            { name: `New Gamertag`, value: `${gamerTag}` },\n          )\n          .setTimestamp()\n        const reply = {\n          embeds: [embedReply]\n        }\n\n        this._logger.verbose(JSON.stringify(dto))\n        this._logger.verbose(interaction)\n\n        return reply;\n      }\n\n      return 'use /stats reg :gamertag: command to register first'\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Summary.html":{"url":"interfaces/Summary.html","title":"interface - Summary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Summary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assists\n                                        \n                                \n                                \n                                        \n                                            betrayals\n                                        \n                                \n                                \n                                        \n                                            deaths\n                                        \n                                \n                                \n                                        \n                                            kills\n                                        \n                                \n                                \n                                        \n                                            medals\n                                        \n                                \n                                \n                                        \n                                            suicides\n                                        \n                                \n                                \n                                        \n                                            vehicles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assists:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        betrayals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        betrayals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deaths\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deaths:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kills\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kills:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suicides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suicides:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vehicles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vehicles:         Vehicles\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vehicles\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestCommand.html":{"url":"classes/TestCommand.html","title":"class - TestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/test.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordCommand\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/commands/test.command.ts:11\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handler\n                        \n                    \n                \n            \n            \n                \nhandler(interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/test.command.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\nimport { DiscordCommand } from '@discord-nestjs/core';\nimport { CommandInteraction } from 'discord.js';\nimport { ToJsonResponse } from 'src/models/interaction-toJSON.model';\n\n@Command({\n  name: 'test',\n  description: 'test a command',\n})\nexport class TestCommand implements DiscordCommand {\n  constructor(\n    // private readonly _haloDotApi: HalodotapiService\n  ) { }\n\n  handler(interaction: CommandInteraction): string {\n    // const isCommand = interaction.isCommand()\n    // // console.log('isCommand', isCommand)\n\n    // console.log('interaction.options', interaction.options)\n    // // {\n    // //   _group: null,\n    // //   _subcommand: null,\n    // //   _hoistedOptions: [ { name: 'animal', type: 'STRING', value: 'animal_dog' } ]\n    // // }\n\n    // const toJson = interaction.toJSON() as ToJsonResponse;\n    // console.log('interaction.toJSON', toJson)\n    // console.log('interaction.toString', interaction.toString())\n    // console.log('interaction.member', interaction.member)\n    // // console.log('interaction.token', interaction.token)\n    // // console.log('interaction.user', interaction.user)\n    // // console.log('interaction.user', interaction.reply('testing reply'))\n\n    // // {\n    // //   type: 'APPLICATION_COMMAND',\n    // //   id: '912663389724090379',\n    // //   applicationId: '911328079207624746',\n    // //   channelId: '911368720440496208',\n    // //   guildId: '910901692227256330',\n    // //   user: '181093139690422272',\n    // //   member: '181093139690422272',\n    // //   version: 1,\n    // //   memberPermissions: 2199023255551n,\n    // //   commandId: '912494585433952346',\n    // //   commandName: 'test',\n    // //   deferred: false,\n    // //   replied: false,\n    // //   ephemeral: null\n    // // }\n\n    // // console.log('interaction.command', interaction.command) \n\n\n    // // return this._haloDotApi.init();\n    return null;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimePlayed.html":{"url":"interfaces/TimePlayed.html","title":"interface - TimePlayed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimePlayed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            human\n                                        \n                                \n                                \n                                        \n                                            seconds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        human\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        human:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seconds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seconds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToJsonResponse.html":{"url":"interfaces/ToJsonResponse.html","title":"interface - ToJsonResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToJsonResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interaction-toJSON.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            applicationId\n                                        \n                                \n                                \n                                        \n                                            channelId\n                                        \n                                \n                                \n                                        \n                                            commandId\n                                        \n                                \n                                \n                                        \n                                            commandName\n                                        \n                                \n                                \n                                        \n                                            deferred\n                                        \n                                \n                                \n                                        \n                                            ephemeral\n                                        \n                                \n                                \n                                        \n                                            guildId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            member\n                                        \n                                \n                                \n                                        \n                                            memberPermissions\n                                        \n                                \n                                \n                                        \n                                            replied\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        applicationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        applicationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commandId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commandId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commandName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commandName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deferred\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deferred:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ephemeral\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ephemeral:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guildId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guildId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        member\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        member:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        memberPermissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        memberPermissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replied\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replied:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"APPLICATION_COMMAND\" | \"PING\" | \"MESSAGE_COMPONENT\" | \"APPLICATION_COMMAND_AUTOCOMPLETE\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"APPLICATION_COMMAND\" | \"PING\" | \"MESSAGE_COMPONENT\" | \"APPLICATION_COMMAND_AUTOCOMPLETE\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ToJsonResponse {\n  type: 'APPLICATION_COMMAND' | 'PING' | 'MESSAGE_COMPONENT' | 'APPLICATION_COMMAND_AUTOCOMPLETE';\n  id: string;\n  applicationId: string;\n  channelId: string;\n  guildId: string;\n  user: string;\n  member: string;\n  version: 1;\n  memberPermissions: number;\n  commandId: string;\n  commandName: string;\n  deferred: boolean;\n  replied: boolean;\n  ephemeral: null\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwitterService.html":{"url":"injectables/TwitterService.html","title":"injectable - TwitterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TwitterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/twitter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _client\n                            \n                            \n                                    Private\n                                _haloSupportTweets\n                            \n                            \n                                    Private\n                                    Readonly\n                                _logger\n                            \n                            \n                                    Private\n                                _twitterAllowedSearchAuthorIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                constructEmbedTweetMessage\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                next\n                            \n                            \n                                    Async\n                                pollHaloSupportTweets\n                            \n                            \n                                    Async\n                                recordTweet\n                            \n                            \n                                    Async\n                                sendChannel\n                            \n                            \n                                    Async\n                                upsertTweet\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newTweets$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _prismaService: PrismaService, _discordProvider: DiscordClientProvider)\n                    \n                \n                        \n                            \n                                Defined in src/services/twitter.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _discordProvider\n                                                  \n                                                        \n                                                                    DiscordClientProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        constructEmbedTweetMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    constructEmbedTweetMessage(tweet: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tweet\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(tweets: TweetV2[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tweets\n                                    \n                                            TweetV2[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        pollHaloSupportTweets\n                        \n                    \n                \n            \n            \n                \n                    \n                    pollHaloSupportTweets()\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        recordTweet\n                        \n                    \n                \n            \n            \n                \n                    \n                    recordTweet(tweetData: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tweetData\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendChannel\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendChannel(channelId: string, tweet: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tweet\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        upsertTweet\n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertTweet(tweetData: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tweetData\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TwitterApi\n\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _haloSupportTweets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TwitterService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _twitterAllowedSearchAuthorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newTweets$\n                    \n                \n\n                \n                    \n                        getnewTweets$()\n                    \n                \n                            \n                                \n                                    Defined in src/services/twitter.service.ts:52\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ETwitterStreamEvent, TweetStream, TweetV2, TweetV2SingleResult, TwitterApi, TwitterApiv2 } from 'twitter-api-v2';\n\nimport { BehaviorSubject, from, Observable } from 'rxjs';\nimport { PrismaService } from './prisma.service';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { DiscordClientProvider } from '@discord-nestjs/core';\nimport { TextChannel, MessageEmbed } from 'discord.js';\nimport { format } from 'date-fns'\n\n@Injectable()\nexport class TwitterService {\n  private readonly _logger = new Logger(TwitterService.name);\n  private _client: TwitterApi;\n\n  private _haloSupportTweets: BehaviorSubject = new BehaviorSubject(null);\n\n  private _twitterAllowedSearchAuthorIds: string[] = [];\n\n  constructor(\n    private _configService: ConfigService,\n    private _prismaService: PrismaService,\n    private _discordProvider: DiscordClientProvider\n  ) {\n\n    this._twitterAllowedSearchAuthorIds = JSON.parse(this._configService.get('twitterAllowedSearchAuthorIds'))\n    // console.debug('twitterAllowedSearchAuthorIds', this.twitterAllowedSearchAuthorIds)\n\n    this._client = new TwitterApi(this._configService.get('twitterBearerToken'));\n\n    this._logger.debug(`twitter client:  ${JSON.stringify(this._client)}`)\n\n  }\n\n  async init() {\n    try {\n      const user = await this._client.v2.user('1093614084807741440');\n      this._logger.verbose(`twitter client: ${JSON.stringify(user)}`)\n\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n\n  }\n\n\n  get newTweets$() {\n    return this._haloSupportTweets.asObservable();\n  }\n\n  next(tweets: TweetV2[]) {\n    this._haloSupportTweets.next([...tweets]);\n  }\n\n  async sendChannel(channelId: string, tweet: TweetV2) {\n\n    try {\n      const channel = await this._discordProvider.getClient().channels.fetch(channelId) as TextChannel\n      const createMessage = await this.constructEmbedTweetMessage(tweet)\n\n      if (createMessage) {\n        return channel.send({ embeds: [createMessage] })\n      } else {\n        throw new Error(`Problem sending message to channel ${channel.name}.`)\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n\n  }\n\n  async constructEmbedTweetMessage(tweet: TweetV2) {\n    try {\n      const embedTweet = new MessageEmbed()\n        // .setTitle('Tweet')\n        .setURL(`https://twitter.com/i/web/status/${tweet.id}`)\n        .setAuthor({\n          name: 'From @HaloSupport',\n          iconURL: null,\n          url: `https://twitter.com/HaloSupport`\n        })\n        // .setDescription('New Tweet')\n        .addFields(\n          {\n            name: 'Tweet', value: tweet.text\n          },\n          {\n            name: 'Actions', value: `[Open Tweet](https://twitter.com/i/web/status/${tweet.id})`\n          }\n        )\n        .setTimestamp(new Date(tweet.created_at))\n        .setFooter({\n          text: format(new Date(tweet.created_at), 'HH:mm')\n        })\n      // .setURL(`https://twitter.com/i/web/status/${tweet.id}`)\n      return embedTweet;\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  // @Cron(CronExpression.EVERY_5_MINUTES)\n  async pollHaloSupportTweets() {\n    try {\n      const search = await this._client.v2.search('from:HaloSupport (\"patch\" OR \"release\" OR \"update\" OR \"problem\" OR \"issue\")', {\n        \"tweet.fields\": ['created_at', 'id', 'author_id', 'source'],\n      });\n\n      this._logger.debug('searching for new tweets')\n\n      // this._logger.debug('search', JSON.stringify(search))\n      const newTweets: TweetV2[] = [];\n\n      const sortData = search.data.data.sort((a, b) => {\n        return new Date(a.created_at).valueOf() - new Date(b.created_at).valueOf()\n      })\n\n      for (let i = 0; i  id == tweet.author_id)) {\n          const found = await this._prismaService.tweet.findUnique({\n            where: {\n              tweet_id: tweet.id\n            }\n          })\n\n\n          if (!found) {\n            this.recordTweet(tweet);\n            newTweets.push(tweet)\n            this.sendChannel('911189130543788062', tweet)\n            console.log('found new tweet', tweet)\n\n          }\n\n\n        }\n      }\n      this.next(newTweets)\n      return newTweets\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n\n\n  }\n\n  async recordTweet(tweetData: TweetV2) {\n\n    try {\n      const record = await this._prismaService.tweet.create({\n        data: {\n          tweet_id: tweetData.id,\n          text: tweetData.text,\n          author_id: tweetData.author_id,\n          created_at: tweetData.created_at\n        }\n      })\n\n      return record;\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  async upsertTweet(tweetData: TweetV2) {\n    try {\n      const tweet = await this._prismaService.tweet.upsert({\n        where: {\n          tweet_id: tweetData.id\n        },\n        update: {\n\n        },\n        create: {\n          tweet_id: tweetData.id,\n          text: tweetData.text,\n          author_id: tweetData.author_id,\n          created_at: tweetData.created_at\n        }\n      })\n\n      // this._logger.verbose(`tweet: ${JSON.stringify(tweet)}`)\n      return tweet;\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDto.html":{"url":"classes/UpdateDto.html","title":"class - UpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/update/update.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/update/update.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class UpdateDto {\n  @Param({ description: 'Xbox Gamer Tag', required: true })\n  gamertag: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                user\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: Prisma.BotUserCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.BotUserCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(where: Prisma.BotUserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.BotUserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(userWhereUniqueInput: Prisma.BotUserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.BotUserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport {\n  BotUser,\n  Prisma\n} from '@prisma/client';\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) { }\n\n  async user(userWhereUniqueInput: Prisma.BotUserWhereUniqueInput): Promise {\n    return this.prisma.botUser.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.BotUserWhereUniqueInput;\n    where?: Prisma.BotUserWhereInput;\n    orderBy?: Prisma.BotUserOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.botUser.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createUser(data: Prisma.BotUserCreateInput): Promise {\n    return this.prisma.botUser.create({\n      data,\n    });\n  }\n\n  async updateUser(params: {\n    where: Prisma.BotUserWhereUniqueInput;\n    data: Prisma.BotUserUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.botUser.update({\n      data,\n      where,\n    });\n  }\n\n  async deleteUser(where: Prisma.BotUserWhereUniqueInput): Promise {\n    return this.prisma.botUser.delete({\n      where,\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Vehicles.html":{"url":"interfaces/Vehicles.html","title":"interface - Vehicles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Vehicles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroys\n                                        \n                                \n                                \n                                        \n                                            hijacks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroys:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hijacks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hijacks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/stats/get/get.command.ts\n            \n            class\n            StatsGetSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/get/get.dto.ts\n            \n            class\n            GetDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/stats/help/help.command.ts\n            \n            class\n            StatsHelpSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/help/help.dto.ts\n            \n            class\n            StatsHelpDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/stats/register/register.command.ts\n            \n            class\n            StatsRegSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/register/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/commands/stats/stats.command.ts\n            \n            class\n            StatsBaseCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commands/stats/stats.dto.ts\n            \n            class\n            StatsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commands/stats/update/update.command.ts\n            \n            class\n            StatsUpdateSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/update/update.dto.ts\n            \n            class\n            UpdateDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/test.command.ts\n            \n            class\n            TestCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/halo-dot-api/halo-dot-api.controller.ts\n            \n            controller\n            HaloDotApiController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/oauth2-discord/oauth2-discord.controller.ts\n            \n            controller\n            Oauth2DiscordController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exception-filters/discord-command-validation.ts\n            \n            class\n            CommandValidationFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exception-filters/globalExceptions.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/message-fom-user.guard.ts\n            \n            class\n            MessageFromUserGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/halo-dot-api.middleware.ts\n            \n            injectable\n            HaloDotApiMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/interaction-toJSON.model.ts\n            \n            interface\n            ToJsonResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/models/sub-command-options.model.ts\n            \n            interface\n            Choice\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/sub-command-options.model.ts\n            \n            interface\n            DefineDiscordCommand\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/pipes/message-to-upper.pipe.ts\n            \n            class\n            MessageToUpperPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/discord-api.service.ts\n            \n            injectable\n            DiscordApiService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Additional\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            AllTime\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            CsrsRootObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Current\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            QueueGroups\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Season\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/halodotapi.service.ts\n            \n            injectable\n            HaloDotApiService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Additional\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Assists\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Breakdowns\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Damage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Kills\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Matches\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            ServiceRecord\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Shots\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Summary\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            TimePlayed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Vehicles\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/twitter.service.ts\n            \n            injectable\n            TwitterService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @discord-nestjs/common : ^2.0.16\n        \n            @discord-nestjs/core : ^2.1.12\n        \n            @discordjs/rest : ^0.3.0\n        \n            @nestjs/axios : ^0.0.3\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/schedule : ^1.0.2\n        \n            @prisma/client : ^3.8.1\n        \n            date-fns : ^2.26.0\n        \n            discord-api-types : ^0.26.1\n        \n            discord.js : ^13.6.0\n        \n            forever-monitor : ^3.0.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.4.0\n        \n            twitter-api-v2 : ^1.6.5\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Language   (src/.../help.dto.ts)\n                        \n                        \n                            PublicStats   (src/.../get.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commands/stats/help/help.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Language\n                    \n                \n                        \n                            \n                                 FI\n                            \n                        \n                        \n                            \n                                Value : fi\n                            \n                        \n                        \n                            \n                                 EN\n                            \n                        \n                        \n                            \n                                Value : en\n                            \n                        \n            \n        \n\n    src/commands/stats/get/get.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        PublicStats\n                    \n                \n                        \n                            \n                                 true\n                            \n                        \n                        \n                            \n                                 false\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n  \n  \n\n  Discord bot for Halo Finland  community .\n  \n  \n\n  Built with a progressive Node.js framework called  Nest\n    \n\n\n\n\n\n\n\n \n  \n\n  \n\nDescription\nHalo Finland Discord bot. Production ready versions start @ 1.0.0\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nThis project uses Nest framework.\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021-2022 Halo Finland Community\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HaloDotApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Oauth2DiscordModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HaloDotApiModule\n\n\n\ncluster_HaloDotApiModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nHaloDotApiModule\n\nHaloDotApiModule\n\nHaloDotApiModule -->\n\nHaloDotApiModule->HaloDotApiModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHaloDotApiModule->AppModule\n\n\n\n\n\nOauth2DiscordModule\n\nOauth2DiscordModule\n\nAppModule -->\n\nOauth2DiscordModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHaloDotApiModule -->\n\nSharedModule->HaloDotApiModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDiscordCommandProvider \n\nDiscordCommandProvider \n\nDiscordCommandProvider  -->\n\nSharedModule->DiscordCommandProvider \n\n\n\n\n\nHaloDotApiService \n\nHaloDotApiService \n\nHaloDotApiService  -->\n\nSharedModule->HaloDotApiService \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\n\n\nTwitterService \n\nTwitterService \n\nTwitterService  -->\n\nSharedModule->TwitterService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nSharedModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDiscordApiService\n\nDiscordApiService\n\nAppModule -->\n\nDiscordApiService->AppModule\n\n\n\n\n\nHaloDotApiService\n\nHaloDotApiService\n\nHaloDotApiModule -->\n\nHaloDotApiService->HaloDotApiModule\n\n\n\nSharedModule -->\n\nHaloDotApiService->SharedModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\nTwitterService\n\nTwitterService\n\nSharedModule -->\n\nTwitterService->SharedModule\n\n\n\n\n\nUserService\n\nUserService\n\nSharedModule -->\n\nUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    22 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
