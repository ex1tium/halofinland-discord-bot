var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Additional.html",[0,0.26,1,0.956]],["body/interfaces/Additional.html",[0,0.488,1,1.637,2,1.011,3,0.165,4,0.144,5,0.144,6,2.108,7,0.229,8,0.719,9,1.3,10,3.339,11,1.12,12,0.369,13,0.018,14,1.723,15,1.158,16,0.803,17,2.243,18,0.293,19,2.847,20,1.602,21,3.193,22,3.193,23,3.193,24,3.193,25,3.193,26,3.193,27,3.193,28,3.193,29,3.193,30,2.523,31,2.211,32,2.108,33,2.523,34,2.108,35,1.692,36,2.108,37,2.108,38,2.108,39,2.108,40,1.46,41,2.108,42,1.88,43,0.841,44,0.012,45,0.012]],["title/interfaces/Additional-1.html",[0,0.217,1,0.798,46,2.034]],["body/interfaces/Additional-1.html",[0,0.512,1,1.603,2,0.962,3,0.157,4,0.137,5,0.137,7,0.218,8,0.696,9,1.273,11,0.947,12,0.262,13,0.018,14,1.736,15,1.102,16,0.764,18,0.307,43,1.242,44,0.012,45,0.012,47,1.53,48,1.53,49,1.609,50,2.262,51,1.609,52,1.609,53,2.262,54,2.315,55,1.53,56,2.315,57,1.609,58,1.609,59,1.609,60,2.262,61,1.609,62,1.609,63,1.609,64,2.262,65,1.609,66,1.609,67,1.609,68,1.609,69,1.609,70,1.609,71,1.609,72,1.609,73,1.609,74,1.609,75,1.609,76,2.155,77,1.53,78,1.609,79,1.609,80,1.609,81,2.262,82,1.987,83,1.609,84,1.609,85,1.53,86,1.53,87,1.609,88,1.609,89,1.609,90,1.609,91,1.457]],["title/classes/AllExceptionsFilter.html",[92,0.282,93,2.267]],["body/classes/AllExceptionsFilter.html",[3,0.162,4,0.141,5,0.141,7,0.225,8,0.711,12,0.413,13,0.018,18,0.162,20,1.038,31,1.433,44,0.012,45,0.012,92,0.293,93,3.177,94,1.367,95,3.387,96,3.365,97,2.132,98,5.97,99,2.299,100,2.414,101,1.535,102,3.021,103,2.242,104,3.906,105,6.88,106,1.45,107,5.273,108,1.761,109,1.402,110,1.607,111,2.414,112,1.845,113,2.299,114,3.703,115,5.273,116,5.97,117,6.393,118,3.906,119,4.543,120,1.19,121,3.177,122,1.015,123,5.273,124,5.508,125,1.087,126,1.038,127,2.53,128,2.353,129,1.951,130,3.906,131,3.906,132,5.273,133,3.365,134,3.906,135,3.906,136,3.906,137,3.365,138,2.346,139,3.906,140,3.906,141,3.906,142,3.906,143,3.906,144,3.906,145,5.273,146,3.906,147,3.906,148,3.906,149,3.906,150,3.906,151,2.492,152,3.906,153,3.906,154,3.906,155,3.906,156,3.906,157,3.906]],["title/interfaces/AllTime.html",[0,0.26,30,1.778]],["body/interfaces/AllTime.html",[0,0.473,1,1.437,2,0.894,3,0.146,4,0.127,5,0.127,6,1.865,7,0.203,8,0.662,9,0.71,10,2.891,11,1.126,12,0.496,13,0.018,14,1.735,15,1.025,16,0.71,17,1.984,18,0.283,19,2.672,20,1.772,21,3.531,22,3.531,23,3.531,24,3.531,25,3.531,26,3.531,27,3.531,28,3.531,29,3.531,30,2.672,31,2.075,32,1.865,33,2.32,34,1.865,35,1.497,36,1.865,37,1.865,38,1.865,39,1.865,40,1.291,41,1.865,42,1.663,43,0.744,44,0.011,45,0.011]],["title/controllers/AppController.html",[40,1.381,158,2.643]],["body/controllers/AppController.html",[3,0.084,4,0.074,5,0.074,7,0.117,9,1.148,11,0.305,12,0.472,13,0.018,18,0.084,20,1.44,40,1.194,44,0.007,45,0.007,46,4.274,92,0.153,97,0.823,99,2.189,100,0.823,101,0.947,103,0.865,106,0.987,109,1.877,110,0.991,111,0.823,113,1.252,120,1.238,121,2.449,122,1.228,125,0.566,126,0.541,128,1.96,138,1.491,158,2.284,159,1.147,160,1.752,161,5.417,162,4.667,163,4.644,164,2.034,165,2.034,166,1.226,167,3.253,168,2.034,169,1.428,170,2.034,171,1.752,172,1.318,173,1.752,174,2.107,175,0.541,176,2.291,177,0.823,178,1.96,179,1.752,180,1.318,181,2.034,182,1.428,183,1.752,184,1.428,185,2.034,186,2.034,187,1.96,188,2.034,189,1.625,190,2.034,191,2.034,192,1.226,193,1.834,194,1.752,195,1.567,196,1.96,197,2.034,198,1.315,199,1.752,200,2.803,201,3.253,202,2.034,203,2.034,204,2.034,205,2.034,206,1.567,207,2.034,208,2.034,209,1.428,210,2.034,211,2.034,212,2.034,213,2.034,214,2.034,215,2.034,216,1.752,217,2.034,218,2.034,219,2.034,220,2.034,221,0.746,222,2.034,223,1.226,224,2.034,225,2.034,226,1.567,227,2.034,228,1.428,229,2.034,230,1.457,231,2.034,232,2.034,233,2.034,234,2.034,235,1.567,236,2.034,237,2.034,238,3.502,239,2.034,240,2.034,241,2.034,242,3.253,243,2.034,244,4.065,245,2.284,246,2.34,247,1.567,248,2.87,249,2.449,250,2.291,251,3.566,252,4.644,253,4.667,254,3.013,255,2.16,256,1.428,257,1.752,258,3.509,259,2.034,260,1.752,261,2.034,262,2.034,263,3.131,264,2.506,265,2.284,266,2.284,267,1.428,268,2.803,269,1.428,270,2.034,271,2.449,272,3.502,273,2.284,274,1.752,275,2.034,276,2.034,277,1.752,278,1.752,279,1.567,280,1.567,281,1.752,282,1.428,283,2.034,284,1.428,285,2.034,286,1.567,287,4.644,288,4.065,289,4.065,290,2.034,291,3.253,292,2.284,293,2.034,294,2.034,295,2.034,296,2.034,297,1.567,298,2.034,299,2.034,300,2.034,301,1.226,302,2.034,303,2.034,304,2.034,305,2.034,306,2.034,307,2.034]],["title/modules/AppModule.html",[16,0.759,308,2.643]],["body/modules/AppModule.html",[3,0.153,4,0.134,5,0.134,13,0.018,16,1.025,18,0.153,44,0.012,45,0.012,92,0.277,93,3.059,119,3.183,122,1.43,125,1.028,126,0.982,158,4.074,159,2.862,178,4.077,179,3.183,193,3.814,194,3.183,195,2.846,221,1.356,255,1.571,308,5.25,309,2.083,310,3.059,311,3.183,312,3.183,313,3.183,314,4.383,315,4.383,316,4.077,317,3.565,318,2.594,319,2.393,320,3.695,321,3.911,322,4.469,323,2.393,324,2.594,325,3.695,326,3.911,327,2.862,328,1.957,329,5.078,330,3.695,331,3.695,332,2.594,333,2.846,334,2.083,335,3.695,336,3.289,337,2.594,338,3.695,339,3.695,340,2.846,341,3.911,342,3.695,343,2.594,344,3.695,345,3.695,346,3.695,347,3.695,348,3.695,349,3.695,350,3.183,351,2.846,352,3.695,353,3.183,354,3.695,355,3.695,356,2.846,357,3.695,358,2.846,359,2.846]],["title/injectables/AppService.html",[178,2.267,360,1.381]],["body/injectables/AppService.html",[3,0.225,4,0.197,5,0.197,7,0.313,11,0.976,13,0.017,18,0.225,44,0.015,45,0.015,92,0.407,101,1.894,106,1.318,120,1.655,122,1.045,125,1.511,178,3.92,360,2.387,361,2.877,362,4.678,363,7.223,364,5.43,365,2.091,366,5.43,367,5.43]],["title/interfaces/Assists.html",[0,0.26,56,1.381]],["body/interfaces/Assists.html",[0,0.509,1,1.469,2,0.933,3,0.152,4,0.133,5,0.133,7,0.212,8,0.681,9,0.741,11,0.758,12,0.4,13,0.018,14,1.742,15,1.069,16,0.741,18,0.305,43,1.223,44,0.011,45,0.011,47,1.484,48,1.484,49,1.561,50,2.226,51,1.561,52,1.561,53,2.226,54,2.286,55,1.484,56,2.397,57,1.561,58,1.561,59,1.561,60,2.226,61,1.561,62,1.561,63,1.561,64,2.226,65,1.561,66,1.561,67,1.561,68,1.561,69,1.561,70,1.561,71,1.561,72,1.561,73,2.649,74,2.649,75,2.649,76,2.121,77,1.484,78,1.561,79,1.561,80,1.561,81,2.226,82,1.946,83,1.561,84,1.561,85,1.484,86,1.484,87,1.561,88,1.561,89,1.561,90,1.561,91,1.413]],["title/interfaces/Breakdowns.html",[0,0.26,81,1.449]],["body/interfaces/Breakdowns.html",[0,0.509,1,1.469,2,0.933,3,0.152,4,0.133,5,0.133,7,0.212,8,0.681,9,0.741,11,0.758,12,0.4,13,0.018,14,1.732,15,1.069,16,0.741,18,0.305,43,1.223,44,0.011,45,0.011,47,1.484,48,1.484,49,1.561,50,2.226,51,1.561,52,1.561,53,2.226,54,2.625,55,1.484,56,2.625,57,1.561,58,1.561,59,1.561,60,2.226,61,1.561,62,1.561,63,1.561,64,2.226,65,1.561,66,1.561,67,1.561,68,1.561,69,1.561,70,1.561,71,1.561,72,1.561,73,1.561,74,1.561,75,1.561,76,2.586,77,1.484,78,1.561,79,1.561,80,1.561,81,2.398,82,1.946,83,1.561,84,1.561,85,1.484,86,1.484,87,1.561,88,1.561,89,1.561,90,1.561,91,1.413]],["title/interfaces/Choice.html",[0,0.26,368,1.88]],["body/interfaces/Choice.html",[0,0.435,2,1.305,3,0.213,4,0.186,5,0.186,7,0.296,8,0.848,11,1.135,12,0.47,13,0.017,14,1.138,18,0.261,20,1.885,44,0.014,45,0.014,109,1.934,196,3.791,198,2.077,246,1.798,251,3.607,254,2.721,263,3.957,368,3.398,369,3.607,370,3.957,371,4.418,372,4.425]],["title/classes/CommandValidationFilter.html",[92,0.282,373,2.267]],["body/classes/CommandValidationFilter.html",[3,0.168,4,0.147,5,0.147,7,0.234,8,0.728,12,0.374,13,0.018,18,0.168,20,1.438,44,0.012,45,0.012,92,0.405,94,1.419,95,3.223,97,2.186,99,2.342,100,2.46,101,1.574,102,3.066,106,1.313,108,1.354,109,1.438,110,1.235,111,2.46,112,1.915,113,2.342,114,3.796,120,1.235,122,1.249,125,1.128,126,1.078,138,1.984,151,1.915,175,1.078,177,1.639,198,2.46,221,2.232,223,3.257,230,1.815,297,3.123,301,2.442,373,3.257,374,3.941,375,3.492,376,6.084,377,4.054,378,4.054,379,6.49,380,5.241,381,6.49,382,4.054,383,5.407,384,4.054,385,2.442,386,4.054,387,2.442,388,4.054,389,3.257,390,4.054,391,4.054,392,4.054,393,4.054,394,3.492,395,4.054,396,3.123,397,2.701]],["title/interfaces/CsrsRootObject.html",[0,0.26,42,1.778]],["body/interfaces/CsrsRootObject.html",[0,0.488,1,1.825,2,1.011,3,0.165,4,0.144,5,0.144,6,2.108,7,0.229,8,0.719,9,0.803,10,3.043,11,1.103,12,0.369,13,0.018,14,1.717,15,1.158,16,0.803,17,2.243,18,0.293,19,2.847,20,1.602,21,3.193,22,3.193,23,3.193,24,3.193,25,3.193,26,3.193,27,3.193,28,3.193,29,3.193,30,2.523,31,2.211,32,2.108,33,3.043,34,2.108,35,1.692,36,2.108,37,2.108,38,2.108,39,2.108,40,1.46,41,2.108,42,2.523,43,1.362,44,0.012,45,0.012]],["title/interfaces/Current.html",[0,0.26,19,1.778]],["body/interfaces/Current.html",[0,0.473,1,1.437,2,0.894,3,0.146,4,0.127,5,0.127,6,1.865,7,0.203,8,0.662,9,0.71,10,2.891,11,1.126,12,0.496,13,0.018,14,1.735,15,1.025,16,0.71,17,1.984,18,0.283,19,2.891,20,1.772,21,3.531,22,3.531,23,3.531,24,3.531,25,3.531,26,3.531,27,3.531,28,3.531,29,3.531,30,2.32,31,2.075,32,1.865,33,2.32,34,1.865,35,1.497,36,1.865,37,1.865,38,1.865,39,1.865,40,1.291,41,1.865,42,1.663,43,0.744,44,0.011,45,0.011]],["title/interfaces/Damage.html",[0,0.26,60,1.449]],["body/interfaces/Damage.html",[0,0.509,1,1.469,2,0.933,3,0.152,4,0.133,5,0.133,7,0.212,8,0.681,9,0.741,11,0.758,12,0.4,13,0.018,14,1.742,15,1.069,16,0.741,18,0.305,43,1.223,44,0.011,45,0.011,47,1.484,48,1.484,49,1.561,50,2.226,51,1.561,52,1.561,53,2.226,54,2.286,55,1.484,56,2.286,57,1.561,58,1.561,59,1.561,60,2.398,61,2.649,62,2.649,63,2.649,64,2.226,65,1.561,66,1.561,67,1.561,68,1.561,69,1.561,70,1.561,71,1.561,72,1.561,73,1.561,74,1.561,75,1.561,76,2.121,77,1.484,78,1.561,79,1.561,80,1.561,81,2.226,82,1.946,83,1.561,84,1.561,85,1.484,86,1.484,87,1.561,88,1.561,89,1.561,90,1.561,91,1.413]],["title/interfaces/Data.html",[0,0.26,43,0.796]],["body/interfaces/Data.html",[0,0.501,1,1.392,2,0.844,3,0.138,4,0.12,5,0.12,7,0.192,8,0.635,9,0.67,11,0.707,12,0.49,13,0.018,14,1.738,15,0.967,16,0.67,18,0.3,43,1.261,44,0.011,45,0.011,47,1.343,48,1.343,49,1.412,50,2.11,51,1.412,52,1.412,53,2.647,54,2.188,55,1.343,56,2.188,57,1.412,58,1.412,59,1.412,60,2.647,61,1.412,62,1.412,63,1.412,64,2.647,65,1.412,66,1.412,67,1.412,68,1.412,69,1.412,70,1.412,71,1.412,72,1.412,73,1.412,74,1.412,75,1.412,76,2.011,77,1.343,78,1.412,79,1.412,80,1.412,81,2.647,82,2.296,83,1.412,84,1.412,85,2.412,86,2.412,87,2.536,88,2.536,89,2.536,90,2.536,91,1.279]],["title/interfaces/DefineDiscordCommand.html",[0,0.26,196,2.267]],["body/interfaces/DefineDiscordCommand.html",[0,0.402,2,1.15,3,0.187,4,0.164,5,0.164,7,0.261,8,0.783,11,1.108,12,0.523,13,0.017,14,1.422,18,0.241,20,1.203,44,0.013,45,0.013,109,1.862,110,2.291,196,4.22,198,1.83,246,2.37,251,4.755,254,3.588,263,5.217,368,3.384,369,3.178,370,3.486,371,5.033,372,5.835]],["title/injectables/DiscordApiService.html",[193,2.121,360,1.381]],["body/injectables/DiscordApiService.html",[3,0.108,4,0.094,5,0.094,7,0.15,8,0.53,11,1.046,12,0.47,13,0.018,14,1.052,18,0.108,20,0.69,31,0.952,43,1.004,44,0.009,45,0.009,92,0.195,99,2.192,100,1.92,101,1.145,102,2.244,103,1.673,106,1.511,108,1.586,109,1.655,110,1.447,111,1.92,112,1.227,113,1.514,120,1.447,122,1.153,125,0.722,129,1.297,138,1.944,151,2.831,192,1.564,193,2.217,196,3.431,198,1.591,199,2.236,221,2.409,223,3.193,230,1.762,246,1.993,251,3.998,264,3.03,292,2.762,301,1.564,327,2.987,328,1.375,334,1.463,360,1.443,361,1.375,365,2.577,369,1.823,397,2.373,398,4.939,399,2.236,400,4.749,401,4.749,402,5.694,403,5.299,404,4.749,405,2.596,406,3.721,407,3.077,408,3.934,409,3.934,410,2.596,411,2.596,412,3.658,413,2.596,414,2.596,415,2.596,416,3.934,417,2.596,418,2.596,419,3.658,420,2,421,2,422,5.694,423,2.596,424,3.934,425,2.596,426,2,427,2.596,428,3.934,429,2,430,1.823,431,2.516,432,2.596,433,2.596,434,2.596,435,2.596,436,2.596,437,3.658,438,3.658,439,3.658,440,2.596,441,2.596,442,2.516,443,2.516,444,2.596,445,2.596,446,3.389,447,2.596,448,2.596,449,2.596,450,2.596,451,2.236,452,2.596,453,2.596]],["title/classes/GetDto.html",[92,0.282,454,2.643]],["body/classes/GetDto.html",[3,0.207,4,0.181,5,0.181,7,0.289,8,0.834,9,1.356,11,0.928,12,0.346,13,0.018,18,0.207,44,0.014,45,0.014,92,0.375,94,1.75,106,1.214,122,0.963,126,1.33,166,3.013,175,1.33,246,1.75,248,3.279,249,3.729,250,3.489,254,3.279,255,2.127,273,4.719,274,4.309,368,2.499,454,4.346,455,4.309,456,3.512,457,5.002,458,3.489,459,3.512,460,4.309,461,6.189,462,5.002]],["title/controllers/HaloDotApiController.html",[40,1.381,463,2.643]],["body/controllers/HaloDotApiController.html",[3,0.134,4,0.117,5,0.117,7,0.187,11,0.695,13,0.018,18,0.134,31,1.189,35,1.378,40,1.189,44,0.011,45,0.011,92,0.243,99,2.498,100,1.31,101,1.348,102,1.531,103,1.378,106,1.312,111,1.31,113,1.247,120,1.647,121,2.79,122,1.358,125,0.901,126,0.861,128,1.952,129,1.619,138,1.983,151,2.554,159,1.826,171,2.791,174,2.099,175,0.861,176,1.826,177,1.31,180,2.099,182,2.275,183,2.791,192,1.952,198,1.31,206,2.496,221,1.983,230,2.42,271,1.952,327,2.611,328,1.716,332,2.275,334,1.826,336,4.569,337,4.141,365,1.783,397,1.619,406,3.252,407,2.099,419,2.496,420,2.496,421,2.496,431,1.716,442,1.716,443,1.716,463,3.252,464,4.543,465,2.791,466,2.791,467,2.79,468,5.897,469,5.897,470,5.897,471,3.24,472,3.24,473,3.24,474,2.791,475,2.791,476,2.496,477,2.314,478,2.275,479,3.24,480,3.24,481,3.24,482,2.791,483,3.24,484,2.791,485,2.791,486,2.791,487,3.24,488,3.24,489,3.24,490,3.24,491,3.24,492,3.24,493,3.24,494,3.24,495,3.24,496,3.24,497,3.24,498,2.791,499,3.24,500,5.404,501,3.24,502,3.24,503,3.24,504,3.24,505,3.24,506,3.24,507,5.404,508,3.24,509,3.24,510,3.24,511,3.24]],["title/injectables/HaloDotApiMiddleware.html",[360,1.381,512,2.643]],["body/injectables/HaloDotApiMiddleware.html",[3,0.185,4,0.162,5,0.162,7,0.258,8,0.778,12,0.309,13,0.018,18,0.185,20,1.191,31,2.475,44,0.013,45,0.013,92,0.336,97,1.811,99,2.459,100,2.728,101,1.68,106,1.401,108,1.496,109,1.191,110,1.364,111,2.334,112,2.116,113,2.222,120,1.364,121,2.698,122,1.111,125,1.246,127,2.901,138,1.643,169,4.737,269,4.053,336,4.137,360,2.118,361,2.372,512,4.053,513,4.919,514,3.858,515,5.771,516,5.502,517,5.812,518,6.746,519,4.478,520,3.449,521,5.771,522,4.478,523,5.771,524,3.449,525,4.478,526,4.478,527,4.478,528,4.478]],["title/modules/HaloDotApiModule.html",[16,0.759,314,2.438]],["body/modules/HaloDotApiModule.html",[3,0.144,4,0.126,5,0.126,12,0.337,13,0.018,16,0.984,18,0.144,44,0.011,45,0.011,92,0.261,93,2.937,95,1.846,97,1.409,101,1.014,106,0.846,108,1.164,109,0.926,110,1.062,120,1.062,121,2.099,122,1.379,125,0.969,126,1.296,159,2.748,174,2.257,175,0.926,221,1.278,271,2.099,309,1.964,310,2.937,314,4.769,316,4.003,317,3.423,318,2.446,319,2.257,321,3.755,322,4.332,326,3.755,327,3.17,328,1.846,333,2.684,334,1.964,336,4.304,337,3.423,340,2.684,341,3.755,350,3.002,351,2.684,356,2.684,358,2.684,359,2.684,407,2.257,430,3.423,437,3.755,438,3.755,463,3.949,464,3.755,467,3.388,477,3.319,478,2.446,512,2.446,513,2.684,529,3.002,530,3.484,531,3.002,532,3.484,533,3.484,534,4.875,535,6.091,536,3.484,537,3.484,538,4.875,539,3.484,540,3.484,541,3.484,542,3.484,543,5.523,544,3.484,545,3.002,546,3.002,547,3.949,548,4.2,549,4.2,550,3.484,551,3.484,552,3.484]],["title/injectables/HaloDotApiService.html",[360,1.381,477,1.88]],["body/injectables/HaloDotApiService.html",[0,0.383,1,0.992,3,0.079,4,0.069,5,0.069,7,0.111,8,0.418,9,0.788,10,2.12,11,1.013,12,0.34,13,0.018,14,1.567,15,0.558,16,0.387,18,0.239,19,1.845,20,1.193,21,2.068,22,2.068,23,2.068,24,2.068,25,2.068,26,2.068,27,2.068,28,2.068,29,2.068,30,1.465,31,1.432,32,1.015,33,1.465,34,2.377,35,1.908,36,2.377,37,2.377,38,1.015,39,1.015,40,0.703,41,1.015,42,0.905,43,0.405,44,0.007,45,0.007,92,0.144,99,2.414,100,1.579,101,0.902,102,1.845,103,1.318,106,1.403,108,1.304,109,1.038,110,1.189,111,0.775,112,0.905,113,1.503,120,1.367,122,0.948,125,0.533,128,2.352,129,1.549,138,2.301,151,2.491,169,4.057,192,1.154,221,2.25,223,2.352,230,1.748,327,2.529,328,1.015,334,1.08,360,1.137,361,1.015,365,2.414,397,1.951,406,3.15,407,2.529,419,3.007,420,1.476,421,1.476,429,4.451,430,2.177,431,2.068,437,3.456,438,2.388,442,2.068,443,2.068,446,2.67,451,1.65,467,2.352,477,1.549,482,3.363,484,2.67,485,4.542,486,1.65,520,1.476,543,4.244,545,2.67,546,2.67,547,2.741,548,2.67,549,2.67,553,1.65,554,3.904,555,4.486,556,3.865,557,3.1,558,3.1,559,1.916,560,3.1,561,1.916,562,3.363,563,1.916,564,2.67,565,1.916,566,2.67,567,1.916,568,1.916,569,3.1,570,1.916,571,3.904,572,3.1,573,1.916,574,1.916,575,3.1,576,1.916,577,3.1,578,1.916,579,3.904,580,5.272,581,3.1,582,1.916,583,3.1,584,3.1,585,1.65,586,1.916,587,3.1,588,1.65,589,1.916,590,1.916,591,3.1,592,1.916,593,1.916,594,1.916,595,1.916]],["title/interfaces/Kills.html",[0,0.26,54,1.381]],["body/interfaces/Kills.html",[0,0.508,1,1.458,2,0.919,3,0.15,4,0.131,5,0.131,7,0.209,8,0.674,9,0.73,11,0.751,12,0.428,13,0.018,14,1.744,15,1.053,16,0.73,18,0.305,43,1.213,44,0.011,45,0.011,47,1.462,48,1.462,49,1.538,50,2.209,51,1.538,52,1.538,53,2.209,54,2.384,55,1.462,56,2.271,57,1.538,58,1.538,59,1.538,60,2.209,61,1.538,62,1.538,63,1.538,64,2.209,65,1.538,66,1.538,67,1.538,68,1.538,69,2.632,70,2.632,71,2.632,72,2.632,73,1.538,74,1.538,75,1.538,76,2.105,77,1.462,78,1.538,79,1.538,80,1.538,81,2.209,82,1.926,83,1.538,84,1.538,85,1.462,86,1.462,87,1.538,88,1.538,89,1.538,90,1.538,91,1.392]],["title/interfaces/Matches.html",[0,0.26,76,1.381]],["body/interfaces/Matches.html",[0,0.508,1,1.458,2,0.919,3,0.15,4,0.131,5,0.131,7,0.209,8,0.674,9,0.73,11,0.751,12,0.428,13,0.018,14,1.744,15,1.053,16,0.73,18,0.305,43,1.213,44,0.011,45,0.011,47,1.462,48,1.462,49,1.538,50,2.209,51,1.538,52,1.538,53,2.209,54,2.271,55,1.462,56,2.271,57,1.538,58,1.538,59,1.538,60,2.209,61,1.538,62,1.538,63,1.538,64,2.209,65,1.538,66,1.538,67,1.538,68,1.538,69,1.538,70,1.538,71,1.538,72,1.538,73,1.538,74,1.538,75,1.538,76,2.271,77,2.503,78,2.632,79,2.632,80,2.632,81,2.209,82,1.926,83,1.538,84,1.538,85,1.462,86,1.462,87,1.538,88,1.538,89,1.538,90,1.538,91,1.392]],["title/classes/MessageFromUserGuard.html",[92,0.282,180,2.438]],["body/classes/MessageFromUserGuard.html",[3,0.209,4,0.183,5,0.183,7,0.291,12,0.349,13,0.018,18,0.209,44,0.014,45,0.014,92,0.378,94,1.766,97,2.516,101,1.812,106,1.225,108,1.685,109,1.342,110,1.537,120,1.537,122,1.198,126,1.342,175,1.342,176,4.079,177,2.04,180,4.031,182,4.37,365,1.943,371,4.37,476,4.793,588,4.347,596,4.347,597,6.747,598,6.223,599,6.223,600,5.046,601,4.347,602,5.046,603,4.347]],["title/classes/MessageToUpperPipe.html",[92,0.282,184,2.643]],["body/classes/MessageToUpperPipe.html",[3,0.213,4,0.186,5,0.186,7,0.296,12,0.355,13,0.018,18,0.213,44,0.014,45,0.014,92,0.385,94,1.798,97,2.544,101,1.832,106,1.247,108,1.716,109,1.366,110,1.565,122,1.211,126,1.366,175,1.366,176,4.172,177,2.077,184,4.418,226,3.957,365,1.978,604,5.42,605,4.425,606,6.801,607,6.291,608,5.137,609,5.137,610,5.137,611,5.137]],["title/controllers/Oauth2DiscordController.html",[40,1.381,612,2.643]],["body/controllers/Oauth2DiscordController.html",[3,0.175,4,0.153,5,0.153,7,0.244,12,0.293,13,0.018,18,0.175,31,2.672,40,1.554,44,0.013,45,0.013,92,0.318,99,1.63,100,1.712,101,1.62,106,1.028,108,1.414,109,1.126,110,1.29,111,2.25,113,1.63,120,1.29,122,0.815,124,3.648,125,1.178,129,2.116,138,2.281,159,2.387,166,2.551,169,5.039,175,1.48,221,2.281,230,2.784,255,1.8,343,3.908,365,1.63,466,3.648,516,4.794,520,4.287,612,3.908,613,4.287,614,3.648,615,3.648,616,6.216,617,4.234,618,7.365,619,4.234,620,4.234,621,4.234,622,4.234,623,4.234,624,4.234,625,6.216,626,6.216,627,4.234,628,4.234,629,4.234,630,4.234,631,4.234,632,4.234,633,4.234,634,4.234]],["title/modules/Oauth2DiscordModule.html",[16,0.759,315,2.438]],["body/modules/Oauth2DiscordModule.html",[3,0.229,4,0.2,5,0.2,13,0.017,16,1.328,18,0.229,44,0.015,45,0.015,92,0.415,122,1.267,125,1.54,159,3.71,309,3.121,315,4.264,343,3.887,612,4.932,613,4.264,615,4.769,635,5.536,636,5.536]],["title/injectables/PrismaService.html",[360,1.381,637,2.121]],["body/injectables/PrismaService.html",[3,0.198,4,0.173,5,0.173,7,0.276,12,0.33,13,0.018,18,0.198,44,0.014,45,0.014,92,0.358,97,1.932,101,1.751,106,1.46,108,1.596,109,1.27,110,1.456,120,1.833,122,1.158,125,1.329,162,6.263,221,2.708,230,2.694,360,2.207,361,2.531,637,3.391,638,4.116,639,6.015,640,6.583,641,6.015,642,6.015,643,6.909,644,4.778,645,4.116,646,4.778,647,3.681,648,4.778,649,4.778,650,4.778]],["title/interfaces/QueueGroups.html",[0,0.26,33,1.778]],["body/interfaces/QueueGroups.html",[0,0.482,1,1.494,2,0.964,3,0.157,4,0.137,5,0.137,6,2.009,7,0.219,8,0.697,9,0.765,10,2.984,11,1.093,12,0.406,13,0.018,14,1.709,15,1.104,16,0.765,17,2.138,18,0.289,19,2.779,20,1.564,21,3.116,22,3.116,23,3.116,24,3.116,25,3.116,26,3.116,27,3.116,28,3.116,29,3.116,30,2.443,31,2.606,32,2.009,33,2.779,34,3.346,35,2.501,36,3.116,37,3.116,38,3.346,39,3.116,40,2.158,41,3.116,42,1.792,43,0.802,44,0.012,45,0.012]],["title/classes/RegisterDto.html",[92,0.282,651,2.643]],["body/classes/RegisterDto.html",[3,0.201,4,0.176,5,0.176,7,0.28,8,0.819,9,1.339,11,1.043,12,0.42,13,0.017,18,0.201,44,0.014,45,0.014,92,0.364,94,1.701,106,1.476,122,0.935,126,1.292,166,3.663,175,1.292,246,2.127,248,3.221,249,3.663,250,3.427,254,3.683,255,2.956,256,4.658,257,5.237,260,5.237,368,2.428,456,4.269,458,3.74,459,3.412,651,4.269,652,4.187,653,5.237,654,4.86,655,4.86]],["title/interfaces/Response.html",[0,0.26,31,1.381]],["body/interfaces/Response.html",[0,0.486,1,1.519,2,0.995,3,0.162,4,0.142,5,0.142,6,2.074,7,0.226,8,0.712,9,0.79,10,3.426,11,1.099,12,0.413,13,0.018,14,1.714,15,1.14,16,0.79,17,2.207,18,0.291,19,3.381,20,1.589,21,3.167,22,3.167,23,3.167,24,3.167,25,3.167,26,3.167,27,3.167,28,3.167,29,3.167,30,3.023,31,2.348,32,3.39,33,2.495,34,2.074,35,1.665,36,2.074,37,2.074,38,2.074,39,2.074,40,1.436,41,2.074,42,1.85,43,0.828,44,0.012,45,0.012]],["title/interfaces/Season.html",[0,0.26,10,1.778]],["body/interfaces/Season.html",[0,0.473,1,1.437,2,0.894,3,0.146,4,0.127,5,0.127,6,1.865,7,0.203,8,0.662,9,0.71,10,3.041,11,1.126,12,0.496,13,0.018,14,1.735,15,1.025,16,0.71,17,1.984,18,0.283,19,2.672,20,1.772,21,3.531,22,3.531,23,3.531,24,3.531,25,3.531,26,3.531,27,3.531,28,3.531,29,3.531,30,2.32,31,2.075,32,1.865,33,2.32,34,1.865,35,1.497,36,1.865,37,1.865,38,1.865,39,1.865,40,1.291,41,1.865,42,1.663,43,0.744,44,0.011,45,0.011]],["title/interfaces/ServiceRecord.html",[0,0.26,91,1.449]],["body/interfaces/ServiceRecord.html",[0,0.511,1,1.798,2,0.947,3,0.154,4,0.135,5,0.135,7,0.215,8,0.688,9,0.752,11,0.766,12,0.353,13,0.018,14,1.734,15,1.085,16,0.752,18,0.306,43,1.496,44,0.012,45,0.012,47,1.507,48,1.507,49,1.585,50,2.244,51,1.585,52,1.585,53,2.244,54,2.3,55,1.507,56,2.3,57,1.585,58,1.585,59,1.585,60,2.244,61,1.585,62,1.585,63,1.585,64,2.244,65,1.585,66,1.585,67,1.585,68,1.585,69,1.585,70,1.585,71,1.585,72,1.585,73,1.585,74,1.585,75,1.585,76,2.138,77,1.507,78,1.585,79,1.585,80,1.585,81,2.244,82,1.967,83,1.585,84,1.585,85,1.507,86,1.507,87,1.585,88,1.585,89,1.585,90,1.585,91,1.967]],["title/modules/SharedModule.html",[16,0.759,316,2.267]],["body/modules/SharedModule.html",[3,0.129,4,0.113,5,0.113,13,0.018,16,0.908,18,0.129,44,0.01,45,0.01,92,0.233,93,2.709,95,1.648,122,1.411,125,0.865,126,1.196,174,4.377,175,0.827,176,2.978,177,1.258,187,4.311,189,3.575,193,1.753,195,2.396,226,2.396,255,1.323,292,2.184,309,1.753,310,2.709,316,4.488,317,3.158,318,2.184,319,2.015,321,3.464,322,4.069,326,4.069,327,3.262,328,1.648,333,3.464,334,1.753,340,2.396,341,3.464,351,2.396,356,2.396,358,2.396,359,3.464,398,3.464,406,2.184,430,2.184,477,3.575,478,2.184,603,2.68,637,4.034,656,2.68,657,2.68,658,2.68,659,3.11,660,4.497,661,3.11,662,4.497,663,4.497,664,3.11,665,3.11,666,4.497,667,3.11,668,3.11,669,3.11,670,3.11,671,2.184,672,4.497,673,3.11,674,3.11,675,3.11,676,3.11,677,3.11,678,4.497,679,3.11,680,3.11,681,3.11,682,3.11,683,3.11,684,3.11,685,3.11,686,3.11,687,3.11,688,3.11,689,3.11,690,3.11,691,3.11,692,3.11,693,3.11,694,3.11,695,3.11,696,3.11,697,3.11,698,3.11]],["title/interfaces/Shots.html",[0,0.26,64,1.449]],["body/interfaces/Shots.html",[0,0.508,1,1.458,2,0.919,3,0.15,4,0.131,5,0.131,7,0.209,8,0.674,9,0.73,11,0.751,12,0.428,13,0.018,14,1.744,15,1.053,16,0.73,18,0.305,43,1.213,44,0.011,45,0.011,47,1.462,48,1.462,49,1.538,50,2.209,51,1.538,52,1.538,53,2.209,54,2.271,55,1.462,56,2.271,57,1.538,58,1.538,59,1.538,60,2.209,61,1.538,62,1.538,63,1.538,64,2.383,65,2.632,66,2.632,67,2.632,68,2.632,69,1.538,70,1.538,71,1.538,72,1.538,73,1.538,74,1.538,75,1.538,76,2.105,77,1.462,78,1.538,79,1.538,80,1.538,81,2.209,82,1.926,83,1.538,84,1.538,85,1.462,86,1.462,87,1.538,88,1.538,89,1.538,90,1.538,91,1.392]],["title/classes/StatsBaseCommand.html",[92,0.282,699,2.899]],["body/classes/StatsBaseCommand.html",[3,0.195,4,0.17,5,0.17,13,0.018,18,0.246,44,0.014,45,0.014,92,0.446,94,1.645,109,1.25,122,1.364,126,1.25,175,1.25,198,2.777,246,2.083,258,4.449,292,4.822,699,5.032,700,4.049,701,6.867,702,5.952,703,5.952,704,5.952,705,6.533,706,5.952,707,4.179,708,4.699,709,4.179,710,4.699,711,4.179,712,4.699,713,4.179,714,4.699,715,4.049,716,4.049]],["title/classes/StatsDto.html",[92,0.282,717,2.899]],["body/classes/StatsDto.html",[3,0.194,4,0.17,5,0.17,11,0.979,12,0.411,13,0.018,14,1.445,18,0.194,44,0.013,45,0.013,92,0.351,94,1.64,109,1.824,122,0.902,126,1.246,175,1.246,246,2.478,254,3.635,255,2.917,368,2.342,458,4.078,459,3.291,717,4.577,718,4.038,719,3.931,720,5.942,721,4.687,722,4.687,723,5.942,724,5.942,725,4.687,726,6.524,727,4.687]],["title/classes/StatsGetSubCommand.html",[92,0.282,711,2.643]],["body/classes/StatsGetSubCommand.html",[3,0.078,4,0.068,5,0.068,7,0.108,8,0.41,9,1.11,11,0.281,12,0.266,13,0.018,18,0.078,20,1.743,35,1.295,44,0.007,45,0.007,54,1.117,55,1.231,56,1.117,76,1.117,77,1.231,85,1.231,86,1.231,92,0.141,94,0.656,95,0.993,97,1.231,99,1.875,100,1.555,101,0.886,102,0.885,103,1.295,106,0.934,108,1.017,109,1.786,110,0.928,111,1.555,112,0.885,113,2.117,120,0.571,122,1.103,125,0.847,126,0.498,138,2.173,151,1.817,172,1.214,175,0.81,177,0.758,189,2.212,198,0.758,209,2.7,221,1.411,223,1.834,230,2.845,246,0.656,248,0.993,255,2.912,258,1.214,267,1.316,268,1.614,297,3.752,323,1.214,324,2.138,365,1.172,373,1.129,374,1.214,385,3.144,387,3.452,389,2.935,396,4.689,397,0.936,431,0.993,442,0.993,443,0.993,454,3.109,458,1.056,477,2.212,478,1.316,564,2.623,566,2.623,671,1.316,711,2.138,716,1.614,719,1.834,728,1.614,729,2.7,730,2.491,731,1.874,732,3.045,733,2.623,734,3.045,735,1.316,736,2.868,737,1.874,738,2.138,739,1.443,740,2.138,741,2.138,742,1.443,743,2.345,744,1.443,745,1.874,746,1.443,747,1.316,748,1.614,749,1.874,750,1.874,751,5.218,752,1.214,753,1.874,754,1.874,755,1.874,756,3.045,757,2.345,758,2.345,759,1.443,760,4.236,761,5.218,762,3.045,763,4.428,764,4.428,765,4.428,766,3.045,767,3.045,768,5.218,769,3.045,770,3.045,771,3.045,772,3.045,773,3.109,774,3.045,775,6.352,776,3.045,777,3.045,778,3.045,779,3.045,780,4.428,781,3.045,782,2.345,783,2.345,784,3.045,785,3.045,786,3.045,787,2.345,788,4.428,789,4.871,790,4.871,791,4.871,792,3.752,793,4.428,794,3.045,795,3.045,796,3.045,797,2.623,798,3.313,799,1.874,800,1.443,801,1.874,802,1.874,803,1.874,804,1.874,805,1.874,806,1.874,807,1.874]],["title/classes/StatsHelpDto.html",[92,0.282,808,2.643]],["body/classes/StatsHelpDto.html",[3,0.211,4,0.185,5,0.185,7,0.295,8,0.845,12,0.353,13,0.018,18,0.211,44,0.014,45,0.014,92,0.383,94,1.787,106,1.24,122,0.983,126,1.358,166,3.076,175,1.358,246,1.787,254,3.321,255,2.171,280,5.225,281,5.4,282,5.098,284,4.402,286,4.829,368,2.551,456,3.585,458,3.534,460,4.399,808,4.402,809,3.933,810,5.106,811,5.106,812,5.106]],["title/classes/StatsHelpSubCommand.html",[92,0.282,709,2.643]],["body/classes/StatsHelpSubCommand.html",[3,0.12,4,0.105,5,0.105,7,0.168,8,0.576,9,1.131,12,0.296,13,0.018,18,0.12,20,1.799,44,0.01,45,0.01,92,0.218,94,1.016,95,1.539,97,1.73,99,1.955,100,2.053,101,1.245,102,1.372,103,2.159,106,1.233,108,0.97,109,1.83,110,1.303,111,2.053,112,1.372,113,2.157,114,3.004,120,0.885,122,1.202,125,1.19,126,0.772,129,1.451,138,1.57,151,2.021,172,1.881,175,1.49,176,1.637,177,1.174,198,1.174,221,1.863,245,3.004,246,1.016,248,2.266,250,1.637,255,1.819,256,3.004,258,4.047,264,2.237,266,3.004,271,1.75,272,2.502,278,4.827,279,2.237,280,3.295,282,2.039,284,2.039,323,1.881,324,3.004,365,2.157,373,1.75,374,1.881,385,3.06,387,3.598,389,2.577,396,3.295,397,1.451,431,1.539,439,3.295,442,1.539,443,1.539,458,1.637,467,1.75,709,3.004,729,3.566,730,3.29,735,2.039,736,3.629,738,3.004,740,3.004,741,3.004,742,2.237,744,2.237,746,2.237,747,2.039,748,3.685,752,2.771,773,3.004,782,3.295,783,3.295,787,3.295,792,3.295,808,3.934,813,2.502,814,4.278,815,2.904,816,2.904,817,2.904,818,4.278,819,4.278,820,2.904,821,4.278,822,2.904,823,2.904,824,2.904,825,2.904,826,2.904,827,2.904,828,2.904,829,4.278,830,2.904,831,2.904,832,2.904,833,2.904,834,2.904,835,5.078,836,4.278,837,2.904,838,2.904,839,2.904,840,4.278,841,3.004,842,4.278,843,2.904,844,2.904,845,2.904,846,2.904,847,2.904,848,2.904,849,2.904]],["title/classes/StatsRegSubCommand.html",[92,0.282,707,2.643]],["body/classes/StatsRegSubCommand.html",[3,0.121,4,0.106,5,0.106,7,0.169,8,0.579,9,1.391,12,0.352,13,0.018,18,0.121,20,1.665,43,0.618,44,0.01,45,0.01,46,2.785,92,0.219,94,1.023,95,1.549,97,1.738,99,1.963,100,2.062,101,1.252,102,1.382,103,1.243,106,1.238,108,1.436,109,1.766,110,1.31,111,2.062,112,1.382,113,2.306,114,3.019,120,0.891,122,1.246,125,1.196,126,0.778,127,1.894,129,1.461,138,2.197,151,2.031,172,1.894,175,1.143,177,1.182,189,2.808,198,1.182,209,3.019,221,1.871,230,1.31,245,2.053,246,1.023,247,2.253,248,2.278,249,1.762,250,1.648,255,1.828,256,4.397,265,3.019,267,2.053,273,2.053,323,1.894,324,3.019,365,1.963,373,1.762,374,1.894,385,2.59,387,3.072,389,1.762,397,1.461,431,1.549,442,1.549,443,1.549,651,3.947,653,3.704,671,2.053,707,3.019,729,3.58,730,2.785,735,2.053,736,3.641,738,3.019,740,2.053,741,3.019,742,2.253,743,3.312,744,2.253,746,2.253,747,2.053,752,1.894,757,2.253,758,4.33,759,2.253,760,4.33,792,2.253,800,3.927,841,2.053,850,2.519,851,2.519,852,4.299,853,2.924,854,2.924,855,2.519,856,2.924,857,2.924,858,3.704,859,2.519,860,5.098,861,2.924,862,2.924,863,2.924,864,2.519,865,4.299,866,2.924,867,2.924,868,2.519,869,2.519,870,4.299,871,4.299,872,2.924,873,2.924]],["title/classes/StatsUpdateSubCommand.html",[92,0.282,713,2.643]],["body/classes/StatsUpdateSubCommand.html",[3,0.139,4,0.122,5,0.122,7,0.194,8,0.64,9,1.362,12,0.381,13,0.018,18,0.139,20,1.466,43,0.711,44,0.011,45,0.011,92,0.252,94,1.176,97,1.922,99,2.123,100,2.23,101,1.384,102,1.588,103,1.429,106,1.339,108,1.588,109,1.682,110,1.448,111,2.23,112,1.588,113,2.308,120,1.024,122,1.264,125,1.322,126,0.894,127,2.177,129,1.679,138,2.2,151,2.246,172,2.177,175,1.264,177,1.359,189,2.995,198,1.359,209,3.338,221,2.023,230,1.505,245,2.36,246,1.176,247,2.589,248,1.78,249,2.025,250,1.895,258,2.177,266,3.338,267,2.36,269,2.36,323,2.177,365,2.308,385,3.323,387,3.323,389,2.025,397,1.679,431,1.78,442,1.78,443,1.78,671,2.36,713,3.338,729,3.872,730,3.079,735,2.36,736,3.884,738,3.338,739,2.589,740,2.36,741,3.338,743,2.589,747,2.36,752,3.079,757,2.589,758,4.248,759,2.589,760,4.248,773,2.36,787,2.589,800,3.661,851,2.895,855,2.895,858,4.095,859,2.895,864,2.895,868,2.895,869,2.895,874,2.895,875,4.753,876,4.753,877,4.21,878,3.361,879,3.361,880,3.361,881,3.361,882,3.361,883,3.361,884,3.361,885,3.361]],["title/interfaces/Summary.html",[0,0.26,53,1.449]],["body/interfaces/Summary.html",[0,0.504,1,1.424,2,0.88,3,0.143,4,0.125,5,0.125,7,0.2,8,0.654,9,0.699,11,0.728,12,0.47,13,0.018,14,1.745,15,1.008,16,0.699,18,0.302,43,1.185,44,0.011,45,0.011,47,1.4,48,1.4,49,1.473,50,2.675,51,1.473,52,1.473,53,2.339,54,2.498,55,2.457,56,2.498,57,2.583,58,2.583,59,2.583,60,2.158,61,1.473,62,1.473,63,1.473,64,2.158,65,1.473,66,1.473,67,1.473,68,1.473,69,1.473,70,1.473,71,1.473,72,1.473,73,1.473,74,1.473,75,1.473,76,2.057,77,1.4,78,1.473,79,1.473,80,1.473,81,2.158,82,1.869,83,1.473,84,1.473,85,1.4,86,1.4,87,1.473,88,1.473,89,1.473,90,1.473,91,1.333]],["title/classes/TestCommand.html",[92,0.282,886,2.899]],["body/classes/TestCommand.html",[3,0.142,4,0.124,5,0.124,7,0.198,11,0.836,12,0.385,13,0.018,18,0.142,20,0.912,44,0.011,45,0.011,46,2.221,92,0.257,94,1.2,97,1.949,99,1.32,101,1.403,103,2.371,106,1.17,108,1.145,109,1.482,110,1.044,120,1.044,122,1.164,126,1.282,128,2.065,138,1.769,175,1.282,177,1.386,198,2.254,206,2.641,228,2.407,246,1.2,273,3.385,301,3.644,365,1.856,387,2.065,394,2.953,412,2.641,426,2.641,477,1.713,547,2.407,719,2.065,730,3.122,733,2.953,736,3.918,739,4.294,752,2.221,841,2.407,886,3.713,887,2.953,888,3.428,889,4.82,890,3.428,891,3.385,892,2.641,893,3.428,894,4.803,895,4.82,896,3.428,897,3.428,898,3.428,899,3.428,900,3.428,901,3.428,902,3.428,903,3.428,904,4.82,905,3.428,906,3.428,907,3.428,908,3.428,909,3.428,910,3.428,911,3.428,912,3.428,913,4.82,914,3.428,915,3.428,916,2.953,917,3.428,918,3.428,919,2.641,920,2.953,921,3.428,922,4.82,923,2.953,924,2.953,925,3.428,926,3.428,927,2.953,928,2.953,929,2.953,930,3.428,931,3.428,932,3.428]],["title/interfaces/TimePlayed.html",[0,0.26,82,1.449]],["body/interfaces/TimePlayed.html",[0,0.511,1,1.481,2,0.947,3,0.154,4,0.135,5,0.135,7,0.215,8,0.688,9,0.752,11,0.941,12,0.353,13,0.018,14,1.738,15,1.085,16,0.752,18,0.306,43,1.233,44,0.012,45,0.012,47,1.507,48,1.507,49,1.585,50,2.244,51,1.585,52,1.585,53,2.244,54,2.3,55,1.507,56,2.3,57,1.585,58,1.585,59,1.585,60,2.244,61,1.585,62,1.585,63,1.585,64,2.244,65,1.585,66,1.585,67,1.585,68,1.585,69,1.585,70,1.585,71,1.585,72,1.585,73,1.585,74,1.585,75,1.585,76,2.138,77,1.507,78,1.585,79,1.585,80,1.585,81,2.244,82,2.244,83,2.666,84,2.666,85,1.507,86,1.507,87,1.585,88,1.585,89,1.585,90,1.585,91,1.435]],["title/interfaces/ToJsonResponse.html",[0,0.26,891,2.643]],["body/interfaces/ToJsonResponse.html",[0,0.274,2,1.006,3,0.164,4,0.143,5,0.143,7,0.228,8,0.717,11,1.166,12,0.526,13,0.018,14,1.332,18,0.164,44,0.012,45,0.012,46,2.565,228,4.514,301,2.386,371,4.85,412,4.952,426,4.952,547,4.514,719,3.873,841,4.514,891,3.737,892,3.05,916,5.18,919,4.952,920,5.539,923,5.539,924,5.539,927,5.539,928,5.539,929,5.539,933,3.411,934,6.012,935,6.012,936,6.012]],["title/injectables/TwitterService.html",[187,2.267,360,1.381]],["body/injectables/TwitterService.html",[3,0.074,4,0.106,5,0.065,7,0.103,8,0.395,11,0.713,12,0.402,13,0.018,18,0.074,20,1.263,35,0.76,43,0.378,44,0.007,45,0.007,92,0.134,99,2.528,100,1.505,101,0.853,102,2.412,103,1.246,106,1.549,108,1.705,109,1.549,110,1.555,111,0.723,112,1.759,113,2.364,120,1.642,121,1.077,122,1.121,125,0.497,126,0.475,128,2.243,129,2.55,138,2.199,151,2.961,173,3.709,175,0.475,176,1.008,177,0.723,187,1.765,192,1.077,200,2.524,221,2.488,228,2.057,230,2.414,238,4.094,265,1.255,266,2.057,277,2.524,301,2.243,327,2.427,328,0.947,332,1.255,360,1.075,361,0.947,365,2.634,385,1.765,389,1.077,397,2.55,407,1.898,429,1.377,431,2.704,442,2.704,443,2.704,467,1.077,474,1.54,475,1.54,498,1.54,517,2.524,556,3.709,562,1.54,585,1.54,637,2.427,719,1.077,773,1.255,782,1.377,783,2.868,797,2.524,919,1.377,937,1.54,938,3.723,939,3.723,940,3.723,941,2.93,942,4.305,943,2.93,944,2.93,945,2.93,946,2.93,947,1.788,948,3.723,949,3.723,950,2.93,951,2.93,952,6.717,953,1.788,954,6.14,955,1.788,956,2.93,957,1.788,958,2.93,959,1.788,960,2.93,961,1.788,962,2.93,963,2.93,964,1.788,965,2.93,966,1.788,967,4.305,968,1.788,969,4.752,970,1.788,971,2.93,972,1.788,973,1.788,974,1.788,975,1.788,976,1.788,977,1.788,978,1.788,979,1.54,980,1.54,981,1.54,982,2.93,983,1.788,984,1.54,985,1.54,986,1.788,987,1.788,988,1.788,989,1.788,990,1.788,991,1.788,992,1.788,993,1.788,994,1.788,995,1.788,996,1.788,997,1.788,998,1.788,999,1.788,1000,1.788,1001,1.788,1002,1.788,1003,3.723,1004,1.788,1005,1.788,1006,1.788,1007,1.788,1008,1.788,1009,2.93,1010,1.788,1011,2.93,1012,1.788,1013,1.788,1014,1.788,1015,1.788,1016,1.788,1017,1.788,1018,1.788,1019,1.788,1020,1.788,1021,2.93,1022,1.788,1023,1.788,1024,1.788,1025,1.788,1026,1.788,1027,1.788,1028,1.788,1029,1.788,1030,1.788,1031,1.788,1032,3.723,1033,3.723,1034,1.788,1035,1.788,1036,1.788,1037,1.788,1038,1.788,1039,1.788,1040,1.788,1041,1.788,1042,1.788,1043,1.788,1044,4.305,1045,1.788,1046,1.788,1047,1.788,1048,1.788,1049,1.788,1050,1.788,1051,2.93,1052,1.788,1053,3.723,1054,2.93,1055,2.93,1056,2.93,1057,1.788,1058,1.788,1059,1.788,1060,1.788]],["title/classes/UpdateDto.html",[92,0.282,877,2.643]],["body/classes/UpdateDto.html",[3,0.217,4,0.189,5,0.189,7,0.302,8,0.857,9,1.383,11,0.954,12,0.361,13,0.017,18,0.217,44,0.014,45,0.014,92,0.392,94,1.831,106,1.27,122,1.007,126,1.391,166,3.152,175,1.391,246,1.831,248,3.37,249,3.833,250,3.586,254,3.37,255,2.705,368,2.614,456,3.673,458,3.586,459,3.673,877,4.467,1061,4.507,1062,5.231]],["title/injectables/UserService.html",[189,1.88,360,1.381]],["body/injectables/UserService.html",[3,0.141,4,0.123,5,0.123,7,0.196,12,0.492,13,0.018,14,1.062,18,0.141,43,1.344,44,0.011,45,0.011,92,0.255,101,1.395,103,1.446,106,1.601,108,2.202,109,1.753,110,2.009,120,1.936,122,1.068,125,0.946,127,2.203,138,1.759,189,2.395,216,4.129,221,2.726,223,4.294,360,1.759,361,1.802,365,2.446,637,3.397,647,2.62,719,3.344,798,2.93,981,2.93,1063,2.93,1064,4.793,1065,4.793,1066,4.793,1067,3.401,1068,3.401,1069,5.551,1070,4.793,1071,5.551,1072,3.401,1073,4.793,1074,6.917,1075,3.401,1076,4.793,1077,6.027,1078,3.401,1079,6.027,1080,3.401,1081,3.401,1082,5.551,1083,4.793,1084,3.401,1085,3.401,1086,5.551,1087,5.551,1088,5.551,1089,3.401,1090,5.551,1091,3.401,1092,3.401,1093,3.401,1094,3.401,1095,3.401,1096,3.401]],["title/interfaces/Vehicles.html",[0,0.26,50,1.449]],["body/interfaces/Vehicles.html",[0,0.511,1,1.481,2,0.947,3,0.154,4,0.135,5,0.135,7,0.215,8,0.688,9,0.752,11,0.766,12,0.353,13,0.018,14,1.741,15,1.085,16,0.752,18,0.306,43,1.233,44,0.012,45,0.012,47,1.507,48,1.507,49,1.585,50,2.414,51,2.666,52,2.666,53,2.244,54,2.3,55,1.507,56,2.3,57,1.585,58,1.585,59,1.585,60,2.244,61,1.585,62,1.585,63,1.585,64,2.244,65,1.585,66,1.585,67,1.585,68,1.585,69,1.585,70,1.585,71,1.585,72,1.585,73,1.585,74,1.585,75,1.585,76,2.138,77,1.507,78,1.585,79,1.585,80,1.585,81,2.244,82,1.967,83,1.585,84,1.585,85,1.507,86,1.507,87,1.585,88,1.585,89,1.585,90,1.585,91,1.435]],["title/coverage.html",[1097,3.961]],["body/coverage.html",[0,0.516,1,1.059,5,0.102,6,3.384,10,1.325,12,0.194,13,0.018,19,1.325,30,1.325,31,1.029,33,1.325,40,1.825,42,1.325,43,0.593,44,0.009,45,0.009,47,2.834,48,2.834,50,1.08,53,1.08,54,1.029,56,1.029,60,1.08,64,1.08,76,1.029,81,1.08,82,1.08,91,1.08,92,0.54,93,1.69,95,2.208,96,2.416,113,1.08,158,1.969,160,2.416,178,1.69,180,1.817,182,1.969,184,1.969,187,1.69,189,1.401,193,1.581,196,1.69,198,2.012,265,5.478,336,3.223,337,1.969,343,1.969,360,2.344,362,2.416,368,1.401,369,2.927,370,3.211,373,1.69,374,1.817,375,2.416,398,2.16,399,2.416,454,1.969,455,2.416,463,1.969,464,2.16,465,2.416,476,2.16,477,1.401,512,1.969,513,2.16,514,2.416,553,2.416,596,2.416,604,2.416,605,2.416,612,1.969,613,2.16,614,2.416,637,1.581,638,2.416,651,1.969,652,2.416,699,2.16,700,2.416,707,1.969,709,1.969,711,1.969,713,1.969,717,2.16,718,2.416,728,2.416,808,1.969,809,2.16,813,2.416,850,2.416,874,2.416,877,1.969,886,2.16,887,2.416,891,1.969,892,2.16,933,2.416,937,2.416,1061,2.416,1063,2.416,1097,2.16,1098,2.416,1099,2.804,1100,2.804,1101,7.009,1102,6.562,1103,6.924,1104,2.804,1105,2.804,1106,4.168,1107,2.416,1108,2.804,1109,2.416,1110,2.804,1111,4.975,1112,5.508,1113,2.804,1114,4.975,1115,2.804,1116,2.804,1117,2.804,1118,2.804]],["title/dependencies.html",[310,2.728,1119,3.14]],["body/dependencies.html",[13,0.018,44,0.014,45,0.014,125,1.713,126,1.637,175,1.78,177,2.005,192,2.987,310,2.987,328,2.627,332,3.482,334,2.795,380,4.272,467,3.709,524,3.819,647,3.819,979,4.272,980,4.272,984,4.272,985,4.272,1120,4.958,1121,4.958,1122,4.958,1123,4.958,1124,4.958,1125,6.695,1126,4.958,1127,4.958,1128,4.958,1129,4.958,1130,4.958,1131,4.958,1132,4.958,1133,4.958,1134,4.958,1135,4.958,1136,4.958,1137,4.958,1138,4.958,1139,4.958,1140,4.958,1141,4.958,1142,4.958]],["title/miscellaneous/enumerations.html",[1143,2.205,1144,3.901]],["body/miscellaneous/enumerations.html",[7,0.334,13,0.017,20,1.798,44,0.015,45,0.015,282,4.75,284,4.75,286,5.21,809,4.467,1143,4.072,1144,4.995,1145,5.798]],["title/miscellaneous/functions.html",[1143,2.205,1146,3.901]],["body/miscellaneous/functions.html",[7,0.343,13,0.016,44,0.016,45,0.016,1107,5.117,1109,6.231,1143,4.17,1146,5.117,1147,5.939]],["title/index.html",[7,0.181,235,2.419,1148,2.705]],["body/index.html",[4,0.165,13,0.018,35,1.94,44,0.013,45,0.013,137,3.93,175,1.553,246,1.596,271,3.519,279,3.514,439,4.499,645,3.93,894,5.032,1097,3.514,1149,5.032,1150,3.93,1151,4.562,1152,4.562,1153,4.562,1154,5.84,1155,4.562,1156,6.793,1157,5.84,1158,4.562,1159,4.562,1160,5.84,1161,4.562,1162,4.562,1163,7.303,1164,4.562,1165,4.562,1166,7.183,1167,4.562,1168,5.84,1169,4.562,1170,4.562,1171,4.562,1172,5.84,1173,4.562,1174,4.562,1175,4.562,1176,5.84,1177,4.562,1178,5.032,1179,5.84,1180,4.562,1181,4.562,1182,4.562,1183,3.93,1184,4.562,1185,4.562,1186,4.562,1187,4.562,1188,4.562,1189,4.562,1190,3.514]],["title/license.html",[235,2.419,1148,2.705,1190,2.419]],["body/license.html",[13,0.013,44,0.013,45,0.013,269,4.101,271,2.748,319,2.955,524,3.514,601,3.93,715,3.93,1098,3.93,1149,3.93,1150,3.93,1178,3.93,1190,3.514,1191,6.442,1192,4.562,1193,4.562,1194,4.562,1195,5.84,1196,4.562,1197,4.562,1198,4.562,1199,4.562,1200,4.562,1201,4.562,1202,5.84,1203,7.469,1204,4.562,1205,4.562,1206,4.562,1207,6.442,1208,4.562,1209,5.84,1210,4.562,1211,4.562,1212,4.562,1213,4.562,1214,4.562,1215,4.562,1216,4.562,1217,4.562,1218,4.562,1219,5.84,1220,4.562,1221,4.562,1222,4.562,1223,4.562,1224,4.562,1225,4.562,1226,4.562,1227,5.84,1228,5.84,1229,4.562,1230,4.562,1231,4.562,1232,4.562,1233,4.562,1234,4.562,1235,4.562,1236,4.562,1237,4.562,1238,4.562,1239,4.562,1240,4.562,1241,4.562,1242,4.562,1243,4.562,1244,4.562,1245,4.562,1246,4.562,1247,4.562,1248,4.562,1249,4.562,1250,4.562,1251,4.562,1252,4.562,1253,4.562,1254,4.562,1255,4.562]],["title/modules.html",[309,2.899]],["body/modules.html",[13,0.015,44,0.015,45,0.015,133,4.912,308,4.004,309,3.214,314,3.694,315,3.694,316,3.435,1183,6.127,1256,7.112,1257,7.112,1258,7.339,1259,5.702]],["title/overview.html",[1260,4.43]],["body/overview.html",[2,1.079,13,0.018,44,0.013,45,0.013,94,1.485,159,2.393,174,4.281,178,3.75,187,4.326,189,3.587,193,3.508,253,3.657,308,5.296,309,2.393,310,3.358,311,3.657,312,3.657,313,3.657,314,4.818,315,4.032,316,4.641,317,3.914,318,2.981,319,2.75,353,3.657,361,2.249,477,3.64,529,3.657,531,3.657,637,4.047,656,3.657,657,3.657,658,3.657,1260,3.657,1261,4.245,1262,4.245,1263,4.245]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":265,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsRegSubCommand.html":{},"injectables/TwitterService.html":{},"coverage.html":{}}}],["0.0.3",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["0.26.1",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":46,"title":{"interfaces/Additional-1.html":{}},"body":{"controllers/AppController.html":{},"classes/StatsRegSubCommand.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["1.0.0",{"_index":1161,"title":{},"body":{"index.html":{}}}],["1.0.2",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["1.6.5",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["13.6.0",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["181093139690422272",{"_index":922,"title":{},"body":{"classes/TestCommand.html":{}}}],["2",{"_index":242,"title":{},"body":{"controllers/AppController.html":{}}}],["2.0.16",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["2.1.12",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["2.26.0",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["2.3",{"_index":548,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["200",{"_index":446,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["2021",{"_index":1193,"title":{},"body":{"license.html":{}}}],["2022",{"_index":1194,"title":{},"body":{"license.html":{}}}],["2199023255551n",{"_index":925,"title":{},"body":{"classes/TestCommand.html":{}}}],["22",{"_index":1263,"title":{},"body":{"overview.html":{}}}],["24",{"_index":261,"title":{},"body":{"controllers/AppController.html":{}}}],["3",{"_index":253,"title":{},"body":{"controllers/AppController.html":{},"overview.html":{}}}],["3.0.2",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["3.8.1",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1261,"title":{},"body":{"overview.html":{}}}],["5",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["7",{"_index":1262,"title":{},"body":{"overview.html":{}}}],["7.4.0",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["910901692227256330",{"_index":921,"title":{},"body":{"classes/TestCommand.html":{}}}],["911328079207624746",{"_index":918,"title":{},"body":{"classes/TestCommand.html":{}}}],["911368720440496208",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"classes/TestCommand.html":{}}}],["912494585433952346",{"_index":926,"title":{},"body":{"classes/TestCommand.html":{}}}],["912663389724090379",{"_index":917,"title":{},"body":{"classes/TestCommand.html":{}}}],["_allowedchannelids",{"_index":481,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["_appservice",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["_client",{"_index":938,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_configservice",{"_index":407,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["_configservice.get('halodottoken",{"_index":544,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["_discordapiservice",{"_index":211,"title":{},"body":{"controllers/AppController.html":{}}}],["_discordcommandprovider",{"_index":210,"title":{},"body":{"controllers/AppController.html":{}}}],["_discordprovider",{"_index":949,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_group",{"_index":899,"title":{},"body":{"classes/TestCommand.html":{}}}],["_halodotapi",{"_index":733,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/TestCommand.html":{}}}],["_halodotapiinfinitebaseurl",{"_index":482,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["_halodotapiservice",{"_index":483,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["_halosupporttweets",{"_index":939,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_headers",{"_index":554,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["_hoistedoptions",{"_index":901,"title":{},"body":{"classes/TestCommand.html":{}}}],["_http",{"_index":484,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["_httpservice",{"_index":409,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["_logger",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["_prismaservice",{"_index":948,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_subcommand",{"_index":900,"title":{},"body":{"classes/TestCommand.html":{}}}],["_submap",{"_index":203,"title":{},"body":{"controllers/AppController.html":{}}}],["_twitterallowedsearchauthorids",{"_index":940,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_twitterservice",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["_userservice",{"_index":209,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["above",{"_index":1226,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":946,"title":{},"body":{"injectables/TwitterService.html":{}}}],["accuracy",{"_index":68,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["action",{"_index":1249,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1018,"title":{},"body":{"injectables/TwitterService.html":{}}}],["addfields",{"_index":773,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["additional",{"_index":1,"title":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["against",{"_index":804,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["age",{"_index":723,"title":{},"body":{"classes/StatsDto.html":{}}}],["alikomennoille",{"_index":823,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["all_time",{"_index":32,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["allexcepetionsfilter",{"_index":154,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["allexceptionsfilter",{"_index":93,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["allow",{"_index":257,"title":{},"body":{"controllers/AppController.html":{},"classes/RegisterDto.html":{}}}],["allow_stats_logging",{"_index":865,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["allowedchannelids",{"_index":205,"title":{},"body":{"controllers/AppController.html":{}}}],["allowfactory",{"_index":697,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowguilds",{"_index":692,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowlogging",{"_index":256,"title":{},"body":{"controllers/AppController.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["alltime",{"_index":30,"title":{"interfaces/AllTime.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["alpha",{"_index":549,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["amazing",{"_index":1184,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1217,"title":{},"body":{"license.html":{}}}],["animal",{"_index":902,"title":{},"body":{"classes/TestCommand.html":{}}}],["animal_dog",{"_index":903,"title":{},"body":{"classes/TestCommand.html":{}}}],["anything",{"_index":702,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["api",{"_index":467,"title":{},"body":{"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["api.controller",{"_index":542,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["api.controller.ts",{"_index":465,"title":{},"body":{"controllers/HaloDotApiController.html":{},"coverage.html":{}}}],["api.controller.ts:31",{"_index":473,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["api.controller.ts:39",{"_index":471,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["api.controller.ts:43",{"_index":472,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["api.middleware",{"_index":540,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["api.middleware.ts",{"_index":514,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"coverage.html":{}}}],["api.middleware.ts:6",{"_index":522,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["api.middleware.ts:9",{"_index":519,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["api.module",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["api.module.ts",{"_index":532,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["api.module.ts:49",{"_index":536,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["api.service",{"_index":195,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["api.service.ts",{"_index":399,"title":{},"body":{"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["api.service.ts:10",{"_index":417,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:12",{"_index":418,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:13",{"_index":408,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:28",{"_index":415,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:68",{"_index":413,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:91",{"_index":411,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api/halo",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["app",{"_index":645,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":650,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["appcontroller",{"_index":158,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application/json",{"_index":546,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["application_command",{"_index":916,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["application_command_autocomplete",{"_index":936,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["applicationid",{"_index":426,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["appmodule",{"_index":308,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":178,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["arising",{"_index":1253,"title":{},"body":{"license.html":{}}}],["array",{"_index":706,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["assists",{"_index":56,"title":{"interfaces/Assists.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["associated",{"_index":1204,"title":{},"body":{"license.html":{}}}],["async",{"_index":221,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["author_id",{"_index":1033,"title":{},"body":{"injectables/TwitterService.html":{}}}],["authorization",{"_index":438,"title":{},"body":{"injectables/DiscordApiService.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["authors",{"_index":1242,"title":{},"body":{"license.html":{}}}],["autoregisterglobalcommands",{"_index":675,"title":{},"body":{"modules/SharedModule.html":{}}}],["available",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules.html":{}}}],["average",{"_index":63,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["await",{"_index":230,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["axios",{"_index":421,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["axiosresponse",{"_index":420,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["b",{"_index":1039,"title":{},"body":{"injectables/TwitterService.html":{}}}],["backers",{"_index":1185,"title":{},"body":{"index.html":{}}}],["base",{"_index":701,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["behaviorsubject",{"_index":969,"title":{},"body":{"injectables/TwitterService.html":{}}}],["betrayals",{"_index":57,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["body",{"_index":618,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["body.json",{"_index":632,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["bodyjson",{"_index":631,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["boolean",{"_index":371,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"classes/MessageFromUserGuard.html":{},"interfaces/ToJsonResponse.html":{}}}],["bootstrap",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bot",{"_index":439,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{},"index.html":{}}}],["bottoken",{"_index":400,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["botuser",{"_index":798,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"injectables/UserService.html":{}}}],["botuser.gamertag",{"_index":801,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["breakdowns",{"_index":81,"title":{"interfaces/Breakdowns.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["browse",{"_index":1258,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1256,"title":{},"body":{"modules.html":{}}}],["built",{"_index":1151,"title":{},"body":{"index.html":{}}}],["c",{"_index":1192,"title":{},"body":{"license.html":{}}}],["callbackfordiscordoauth2",{"_index":616,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["callbackfordiscordoauth2(request",{"_index":617,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["called",{"_index":1155,"title":{},"body":{"index.html":{}}}],["callouts",{"_index":75,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["canactive",{"_index":598,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["canactive(event",{"_index":599,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["catch",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["catch((error",{"_index":396,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["catch(exception",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exceptionlist",{"_index":378,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["catch(validationerror",{"_index":386,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["certain",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["channel",{"_index":277,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["channel.name",{"_index":1008,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channel.send",{"_index":1005,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channelid",{"_index":919,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["channels.fetch(channelid",{"_index":1002,"title":{},"body":{"injectables/TwitterService.html":{}}}],["charge",{"_index":1199,"title":{},"body":{"license.html":{}}}],["choice",{"_index":368,"title":{"interfaces/Choice.html":{}},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["choice(city",{"_index":725,"title":{},"body":{"classes/StatsDto.html":{}}}],["choice(language",{"_index":812,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["choice(publicstats",{"_index":462,"title":{},"body":{"classes/GetDto.html":{}}}],["choices",{"_index":263,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{}}}],["chosen",{"_index":846,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["city",{"_index":726,"title":{},"body":{"classes/StatsDto.html":{}}}],["claim",{"_index":1245,"title":{},"body":{"license.html":{}}}],["class",{"_index":92,"title":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"classes/UpdateDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":94,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"classes/UpdateDto.html":{},"overview.html":{}}}],["client",{"_index":200,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["clientprovider",{"_index":201,"title":{},"body":{"controllers/AppController.html":{}}}],["cluster_appmodule",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_halodotapimodule",{"_index":529,"title":{},"body":{"modules/HaloDotApiModule.html":{},"overview.html":{}}}],["cluster_halodotapimodule_imports",{"_index":530,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["cluster_halodotapimodule_providers",{"_index":531,"title":{},"body":{"modules/HaloDotApiModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":656,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":658,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":657,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["command",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"coverage.html":{}}}],["command.js",{"_index":674,"title":{},"body":{"modules/SharedModule.html":{}}}],["commandid",{"_index":412,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["commandinteraction",{"_index":736,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["commandname",{"_index":927,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["commands",{"_index":292,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{}}}],["commandvalidationfilter",{"_index":373,"title":{"classes/CommandValidationFilter.html":{}},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["community",{"_index":1150,"title":{},"body":{"index.html":{},"license.html":{}}}],["conditions",{"_index":1225,"title":{},"body":{"license.html":{}}}],["config",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["config.service",{"_index":664,"title":{},"body":{"modules/SharedModule.html":{}}}],["configmodule",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["configmodule.forroot",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{}}}],["configservice.get('guildid",{"_index":696,"title":{},"body":{"modules/SharedModule.html":{}}}],["configservice.get('token",{"_index":673,"title":{},"body":{"modules/SharedModule.html":{}}}],["configure",{"_index":533,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["configure(consumer",{"_index":534,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["connection",{"_index":1254,"title":{},"body":{"license.html":{}}}],["console.debug('twitterallowedsearchauthorids",{"_index":989,"title":{},"body":{"injectables/TwitterService.html":{}}}],["console.log",{"_index":528,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["console.log('5",{"_index":807,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["console.log('discordapi",{"_index":428,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["console.log('found",{"_index":1049,"title":{},"body":{"injectables/TwitterService.html":{}}}],["console.log('interaction.command",{"_index":930,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.member",{"_index":909,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.options",{"_index":897,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.tojson",{"_index":906,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.token",{"_index":911,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.tostring",{"_index":907,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('interaction.user",{"_index":913,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('iscommand",{"_index":896,"title":{},"body":{"classes/TestCommand.html":{}}}],["console.log('registercommand",{"_index":441,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["console.log('users",{"_index":215,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(invite",{"_index":305,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(message",{"_index":224,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(this.discordprovider.getclient",{"_index":213,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(this.discordprovider.getclient().channels",{"_index":212,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":138,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["constructembedtweetmessage",{"_index":941,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructembedtweetmessage(tweet",{"_index":951,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["constructor(_configservice",{"_index":947,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructor(_halodotapi",{"_index":731,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["constructor(_http",{"_index":559,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["constructor(_httpservice",{"_index":405,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["constructor(_userservice",{"_index":851,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["constructor(httpadapterhost",{"_index":104,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(prisma",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/HaloDotApiMiddleware.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/UserService.html":{}}}],["consumer",{"_index":537,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["consumer.apply(halodotapimiddleware).forroutes(halodotapicontroller",{"_index":552,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["content",{"_index":545,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["contract",{"_index":1250,"title":{},"body":{"license.html":{}}}],["controller",{"_index":40,"title":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"controllers/Oauth2DiscordController.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["controller('halo",{"_index":479,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["controller('oauth2",{"_index":620,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["controllers",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"overview.html":{}}}],["controllers/halo",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/oauth2",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["copies",{"_index":1219,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1202,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1191,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1097,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":1058,"title":{},"body":{"injectables/TwitterService.html":{}}}],["created_at",{"_index":1032,"title":{},"body":{"injectables/TwitterService.html":{}}}],["createmessage",{"_index":1003,"title":{},"body":{"injectables/TwitterService.html":{}}}],["createuser",{"_index":1064,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(data",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["cron",{"_index":474,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/TwitterService.html":{}}}],["cron(cronexpression.every_30_seconds",{"_index":489,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["cron(cronexpression.every_5_minutes",{"_index":498,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/TwitterService.html":{}}}],["cron(cronexpression.every_5_seconds",{"_index":497,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["cronexpression",{"_index":475,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/TwitterService.html":{}}}],["crossplay",{"_index":39,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["cryptum",{"_index":543,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["csrsmodels",{"_index":17,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["csrsmodels.csrsrootobject",{"_index":581,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["csrsrootobject",{"_index":42,"title":{"interfaces/CsrsRootObject.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["ctx",{"_index":140,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":156,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["current",{"_index":19,"title":{"interfaces/Current.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["cursor",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{}}}],["damage",{"_index":60,"title":{"interfaces/Damage.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["damages",{"_index":1246,"title":{},"body":{"license.html":{}}}],["data",{"_index":43,"title":{"interfaces/Data.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["data.options",{"_index":433,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["data.type",{"_index":432,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["database",{"_index":260,"title":{},"body":{"controllers/AppController.html":{},"classes/RegisterDto.html":{}}}],["date",{"_index":984,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["date().toisostring",{"_index":148,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["date(a.created_at).valueof",{"_index":1040,"title":{},"body":{"injectables/TwitterService.html":{}}}],["date(b.created_at).valueof",{"_index":1041,"title":{},"body":{"injectables/TwitterService.html":{}}}],["date(tweet.created_at",{"_index":1021,"title":{},"body":{"injectables/TwitterService.html":{}}}],["deal",{"_index":1206,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1255,"title":{},"body":{"license.html":{}}}],["dealt",{"_index":62,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["deaths",{"_index":55,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["declare",{"_index":15,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["decorators",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["default",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["default_permission",{"_index":372,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{}}}],["defer",{"_index":749,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["deferred",{"_index":928,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["defined",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{}}}],["definediscordcommand",{"_index":196,"title":{"interfaces/DefineDiscordCommand.html":{}},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["delete",{"_index":452,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand",{"_index":402,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand(commandid",{"_index":410,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand.status",{"_index":450,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deleteuser",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(where",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":310,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":698,"title":{},"body":{"modules/SharedModule.html":{}}}],["description",{"_index":246,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"classes/UpdateDto.html":{},"index.html":{}}}],["destroys",{"_index":51,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["development",{"_index":1165,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":871,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["discord",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"dependencies.html":{},"index.html":{}}}],["discord.controller",{"_index":636,"title":{},"body":{"modules/Oauth2DiscordModule.html":{}}}],["discord.controller.ts",{"_index":614,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"coverage.html":{}}}],["discord.controller.ts:18",{"_index":619,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["discord.js",{"_index":177,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"controllers/HaloDotApiController.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["discord.module",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["discord.module.ts",{"_index":635,"title":{},"body":{"modules/Oauth2DiscordModule.html":{}}}],["discord/oauth2",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["discord_user_id",{"_index":800,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["discordapiservice",{"_index":193,"title":{"injectables/DiscordApiService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["discordargumentmetadata",{"_index":381,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["discordclientoptions",{"_index":676,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordclientprovider",{"_index":173,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["discordcommand",{"_index":739,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["discordcommandprovider",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["discordconfigservice",{"_index":663,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordexceptionfilter",{"_index":376,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["discordguard",{"_index":597,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["discordjs/rest",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["discordmodule",{"_index":661,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordmodule.forrootasync",{"_index":672,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordpipetransform",{"_index":606,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["discordprovider",{"_index":217,"title":{},"body":{"controllers/AppController.html":{}}}],["discordtransformedcommand",{"_index":729,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["discordurl",{"_index":401,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["distribute",{"_index":1215,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1098,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dot",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["draws",{"_index":80,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["driver",{"_index":74,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["dto",{"_index":738,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["dto.allowlogging",{"_index":856,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["dto.gamertag",{"_index":757,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["dto.lang",{"_index":817,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["duo",{"_index":37,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["e2e",{"_index":1173,"title":{},"body":{"index.html":{}}}],["edit",{"_index":288,"title":{},"body":{"controllers/AppController.html":{}}}],["editreply(replymessage",{"_index":789,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["embedhelpen",{"_index":842,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["embedhelpfi",{"_index":818,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["embedreply",{"_index":760,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["embeds",{"_index":389,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["embedtweet",{"_index":1009,"title":{},"body":{"injectables/TwitterService.html":{}}}],["emp",{"_index":73,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["en",{"_index":286,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpDto.html":{},"miscellaneous/enumerations.html":{}}}],["enabled",{"_index":870,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["enableshutdownhooks",{"_index":641,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":642,"title":{},"body":{"injectables/PrismaService.html":{}}}],["english",{"_index":285,"title":{},"body":{"controllers/AppController.html":{}}}],["enter",{"_index":252,"title":{},"body":{"controllers/AppController.html":{}}}],["enum",{"_index":460,"title":{},"body":{"classes/GetDto.html":{},"classes/StatsHelpDto.html":{}}}],["enumerations",{"_index":1144,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envfilepath",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["environment/.env",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["environment/config",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["ephemeral",{"_index":841,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["error",{"_index":151,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["error(`problem",{"_index":1006,"title":{},"body":{"injectables/TwitterService.html":{}}}],["error(error",{"_index":586,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["error.response",{"_index":510,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["error.stack",{"_index":397,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["errorembed",{"_index":793,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["ett",{"_index":826,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["etwitterstreamevent",{"_index":975,"title":{},"body":{"injectables/TwitterService.html":{}}}],["event",{"_index":601,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"license.html":{}}}],["ex1tium1306",{"_index":502,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["exception",{"_index":119,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["exception.getstatus",{"_index":143,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.property",{"_index":393,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["exceptionfilter",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionlist",{"_index":383,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["exceptionlist.map((exception",{"_index":390,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["export",{"_index":18,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["exports",{"_index":660,"title":{},"body":{"modules/SharedModule.html":{}}}],["express",{"_index":524,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":639,"title":{},"body":{"injectables/PrismaService.html":{}}}],["false",{"_index":273,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"classes/StatsRegSubCommand.html":{},"classes/TestCommand.html":{}}}],["fetchreply",{"_index":751,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["fi",{"_index":284,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["files",{"_index":1205,"title":{},"body":{"license.html":{}}}],["filters/discord",{"_index":374,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["filters/globalexceptions",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["filters/globalexceptions.ts",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["filters/globalexceptions.ts:40",{"_index":107,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["filters/globalexceptions.ts:44",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["finland",{"_index":1149,"title":{},"body":{"index.html":{},"license.html":{}}}],["fired",{"_index":65,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["first",{"_index":885,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["fitness",{"_index":1238,"title":{},"body":{"license.html":{}}}],["fns",{"_index":985,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["following",{"_index":1224,"title":{},"body":{"license.html":{}}}],["fom",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["forever",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["forguild",{"_index":695,"title":{},"body":{"modules/SharedModule.html":{}}}],["format",{"_index":983,"title":{},"body":{"injectables/TwitterService.html":{}}}],["format(new",{"_index":1022,"title":{},"body":{"injectables/TwitterService.html":{}}}],["found",{"_index":797,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{}}}],["framework",{"_index":1154,"title":{},"body":{"index.html":{}}}],["free",{"_index":1198,"title":{},"body":{"license.html":{}}}],["from:halosupport",{"_index":1026,"title":{},"body":{"injectables/TwitterService.html":{}}}],["function",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1146,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1222,"title":{},"body":{"license.html":{}}}],["gamer",{"_index":249,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["gamertag",{"_index":9,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["gamertagille",{"_index":839,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["gamertägisi",{"_index":833,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["gametag",{"_index":806,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["get.dto",{"_index":745,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["get.status",{"_index":445,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["get/get.command",{"_index":712,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["getclient",{"_index":1001,"title":{},"body":{"injectables/TwitterService.html":{}}}],["getcommands",{"_index":403,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["getdto",{"_index":454,"title":{"classes/GetDto.html":{}},"body":{"classes/GetDto.html":{},"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["gethello",{"_index":363,"title":{},"body":{"injectables/AppService.html":{}}}],["getmotd",{"_index":555,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["getmotdasync",{"_index":592,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["getnewtweets",{"_index":973,"title":{},"body":{"injectables/TwitterService.html":{}}}],["getting",{"_index":1148,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":1197,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1259,"title":{},"body":{"modules.html":{}}}],["grenades",{"_index":70,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["grow",{"_index":1180,"title":{},"body":{"index.html":{}}}],["guards/message",{"_index":181,"title":{},"body":{"controllers/AppController.html":{}}}],["guildid",{"_index":920,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["guilds/${this._configservice.get('guildid')}/commands",{"_index":427,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["hakee",{"_index":838,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["halo",{"_index":271,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"classes/StatsHelpSubCommand.html":{},"index.html":{},"license.html":{}}}],["halodotapi",{"_index":716,"title":{},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{}}}],["halodotapibaseurl",{"_index":573,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["halodotapicontroller",{"_index":463,"title":{"controllers/HaloDotApiController.html":{}},"body":{"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["halodotapimiddleware",{"_index":512,"title":{"injectables/HaloDotApiMiddleware.html":{}},"body":{"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["halodotapimodule",{"_index":314,"title":{"modules/HaloDotApiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules.html":{},"overview.html":{}}}],["halodotapiservice",{"_index":477,"title":{"injectables/HaloDotApiService.html":{}},"body":{"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/TestCommand.html":{},"coverage.html":{},"overview.html":{}}}],["halosupport",{"_index":1013,"title":{},"body":{"injectables/TwitterService.html":{}}}],["handler",{"_index":730,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["handler(@payload",{"_index":855,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["handler(dto",{"_index":735,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["handler(interaction",{"_index":889,"title":{},"body":{"classes/TestCommand.html":{}}}],["hasparam",{"_index":756,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["header",{"_index":526,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["headers",{"_index":437,"title":{},"body":{"injectables/DiscordApiService.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{}}}],["headshots",{"_index":71,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["hello",{"_index":366,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":278,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpSubCommand.html":{}}}],["help.dto",{"_index":816,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["help/help.command",{"_index":710,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["here",{"_index":137,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"index.html":{}}}],["hereby",{"_index":1196,"title":{},"body":{"license.html":{}}}],["hh:mm",{"_index":1023,"title":{},"body":{"injectables/TwitterService.html":{}}}],["hidm6wwaszuc15ahw8japc3kjoaloizh63kn3xgqn4gmhegbxo3dfej1oqbme2oq",{"_index":551,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["hijacks",{"_index":52,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["holders",{"_index":1243,"title":{},"body":{"license.html":{}}}],["host",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":141,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hours",{"_index":262,"title":{},"body":{"controllers/AppController.html":{}}}],["httpadapter",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":150,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":157,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":105,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["httpmodule.register",{"_index":550,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["httpmodule.registerasync",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{}}}],["https://cryptum.halodotapi.com",{"_index":574,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["https://cryptum.halodotapi.com/games/hi",{"_index":486,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["https://discord.com/api/v8/applications/${this._configservice.get",{"_index":425,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["https://github.com/discordjs/discord.js/issues/7005",{"_index":755,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["https://github.com/ex1tium/halofinland",{"_index":840,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["https://twitter.com/halosupport",{"_index":1015,"title":{},"body":{"injectables/TwitterService.html":{}}}],["httpservice",{"_index":406,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{}}}],["httpstatus",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/Oauth2DiscordController.html":{}}}],["httpstatus.internal_server_error",{"_index":144,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.ok",{"_index":634,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["human",{"_index":84,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["iconurl",{"_index":1014,"title":{},"body":{"injectables/TwitterService.html":{}}}],["id",{"_index":228,"title":{},"body":{"controllers/AppController.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["identifier",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["implied",{"_index":1234,"title":{},"body":{"license.html":{}}}],["import",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["include",{"_index":705,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["included",{"_index":1229,"title":{},"body":{"license.html":{}}}],["including",{"_index":1209,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":643,"title":{},"body":{"injectables/PrismaService.html":{}}}],["infinite",{"_index":272,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpSubCommand.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["init",{"_index":556,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["initial_measurement_matches",{"_index":28,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["inject",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["injectable",{"_index":360,"title":{"injectables/AppService.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":361,"title":{},"body":{"injectables/AppService.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":775,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["input",{"_index":38,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["installation",{"_index":1162,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1164,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":142,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["intents",{"_index":662,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_message_reactions",{"_index":690,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_message_typing",{"_index":691,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_messages",{"_index":689,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_bans",{"_index":680,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_emojis_and_stickers",{"_index":681,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_integrations",{"_index":682,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_invites",{"_index":684,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_members",{"_index":679,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_message_reactions",{"_index":687,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_message_typing",{"_index":688,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_messages",{"_index":678,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_presences",{"_index":686,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_voice_states",{"_index":685,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_webhooks",{"_index":683,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guilds",{"_index":677,"title":{},"body":{"modules/SharedModule.html":{}}}],["interaction",{"_index":387,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["interaction.command",{"_index":931,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.deferred",{"_index":788,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.deferreply",{"_index":750,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.fetchreply",{"_index":753,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.iscommand",{"_index":394,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/TestCommand.html":{}}}],["interaction.member",{"_index":910,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.options",{"_index":898,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.replied",{"_index":768,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.reply",{"_index":395,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["interaction.reply('testing",{"_index":915,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.reply(reply).catch((error",{"_index":873,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["interaction.tojson",{"_index":905,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.token",{"_index":912,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.tostring",{"_index":908,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.user",{"_index":914,"title":{},"body":{"classes/TestCommand.html":{}}}],["interaction.user.id",{"_index":759,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["interactionreplyoptions",{"_index":743,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{},"overview.html":{}}}],["invite",{"_index":302,"title":{},"body":{"controllers/AppController.html":{}}}],["iscommand",{"_index":895,"title":{},"body":{"classes/TestCommand.html":{}}}],["isglobal",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["ispublic",{"_index":274,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{}}}],["issue",{"_index":1030,"title":{},"body":{"injectables/TwitterService.html":{}}}],["join",{"_index":1187,"title":{},"body":{"index.html":{}}}],["json",{"_index":626,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.parse",{"_index":987,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.parse(configservice.get('allowguilds",{"_index":693,"title":{},"body":{"modules/SharedModule.html":{}}}],["json.s",{"_index":504,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["json.stringify",{"_index":155,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["json.stringify(body.body",{"_index":633,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(deletecommand.data",{"_index":453,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["json.stringify(exception",{"_index":152,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["json.stringify(get.data",{"_index":448,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["json.stringify(headers",{"_index":594,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["json.stringify(request.body",{"_index":627,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(response.body",{"_index":630,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(search",{"_index":1036,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(this._client",{"_index":994,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(tweet",{"_index":1060,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(user",{"_index":997,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(userexists",{"_index":862,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["kda",{"_index":85,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["kdr",{"_index":86,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["kills",{"_index":54,"title":{"interfaces/Kills.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["kind",{"_index":1233,"title":{},"body":{"license.html":{}}}],["käyttäjän",{"_index":836,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["landed",{"_index":66,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["lang",{"_index":280,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{}}}],["language",{"_index":282,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"miscellaneous/enumerations.html":{}}}],["lastvaluefrom",{"_index":419,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["lastvaluefrom(this._http.get(url",{"_index":575,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["latest",{"_index":849,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["left",{"_index":79,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["liability",{"_index":1247,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1244,"title":{},"body":{"license.html":{}}}],["license",{"_index":1190,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":1179,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1210,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1235,"title":{},"body":{"license.html":{}}}],["literal",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{}}}],["load",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["logged",{"_index":259,"title":{},"body":{"controllers/AppController.html":{}}}],["logger",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["logger('statsregsubcommand",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["logger(appcontroller.name",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["logger(discordapiservice.name",{"_index":416,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["logger(halodotapicontroller.name",{"_index":480,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["logger(halodotapimiddleware.name",{"_index":521,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["logger(halodotapiservice.name",{"_index":569,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["logger(oauth2discordcontroller.name",{"_index":621,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["logger(statsgetsubcommand.name",{"_index":734,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["logger(statsupdatesubcommand.name",{"_index":876,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["logger(twitterservice.name",{"_index":971,"title":{},"body":{"injectables/TwitterService.html":{}}}],["logging",{"_index":653,"title":{},"body":{"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{}}}],["losses",{"_index":78,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["map",{"_index":204,"title":{},"body":{"controllers/AppController.html":{}}}],["matches",{"_index":76,"title":{"interfaces/Matches.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["matches_played",{"_index":88,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["matching",{"_index":45,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["maxredirects",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["means",{"_index":845,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["measurement_matches_remaining",{"_index":21,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["medals",{"_index":59,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["melee",{"_index":69,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["member",{"_index":923,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["memberpermissions",{"_index":924,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["merchantability",{"_index":1237,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1213,"title":{},"body":{"license.html":{}}}],["message",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["message.author.bot",{"_index":603,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"modules/SharedModule.html":{}}}],["message.channelid",{"_index":229,"title":{},"body":{"controllers/AppController.html":{}}}],["message.content",{"_index":226,"title":{},"body":{"controllers/AppController.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{}}}],["message.content.touppercase",{"_index":611,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["message.reply('message",{"_index":231,"title":{},"body":{"controllers/AppController.html":{}}}],["message_component",{"_index":935,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["messagecreate",{"_index":602,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["messageembed",{"_index":385,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["messageembed().addfields",{"_index":391,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["messageembed().setcolor('#40e0d0').addfields",{"_index":872,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["messageembed().setcolor('#dfff00').addfields",{"_index":867,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["messageembed().setcolor('#ff7f50').addfields",{"_index":805,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["messagefromuserguard",{"_index":180,"title":{"classes/MessageFromUserGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["messagetoupperpipe",{"_index":184,"title":{"classes/MessageToUpperPipe.html":{}},"body":{"controllers/AppController.html":{},"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["metadata",{"_index":380,"title":{},"body":{"classes/CommandValidationFilter.html":{},"dependencies.html":{}}}],["metadata.context",{"_index":388,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["method",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["methods",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["middlewareconsumer",{"_index":535,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["miscellaneous",{"_index":1143,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missed",{"_index":67,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["mit",{"_index":1178,"title":{},"body":{"index.html":{},"license.html":{}}}],["mnk",{"_index":41,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["mode",{"_index":1168,"title":{},"body":{"index.html":{}}}],["models/sub",{"_index":197,"title":{},"body":{"controllers/AppController.html":{}}}],["modify",{"_index":1212,"title":{},"body":{"license.html":{}}}],["module",{"_index":16,"title":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules/SharedModule.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"modules/Oauth2DiscordModule.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["modules",{"_index":309,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1189,"title":{},"body":{"index.html":{}}}],["motd",{"_index":577,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["motd.unsubscribe",{"_index":488,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["name",{"_index":109,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["namespace",{"_index":595,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["nest",{"_index":1156,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"controllers/HaloDotApiController.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":523,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["nestmodule",{"_index":538,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["new",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"coverage.html":{}}}],["newtweets",{"_index":238,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["newtweets.push(tweet",{"_index":1047,"title":{},"body":{"injectables/TwitterService.html":{}}}],["next",{"_index":517,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"injectables/TwitterService.html":{}}}],["next(tweets",{"_index":956,"title":{},"body":{"injectables/TwitterService.html":{}}}],["next_sub_tier",{"_index":27,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["next_tier",{"_index":25,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["next_tier_start",{"_index":26,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["nextfunction",{"_index":518,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["nickname",{"_index":722,"title":{},"body":{"classes/StatsDto.html":{}}}],["node.js",{"_index":1153,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1241,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1227,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1163,"title":{},"body":{"index.html":{}}}],["null",{"_index":301,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["number",{"_index":14,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["oauth2",{"_index":615,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{}}}],["oauth2discordcontroller",{"_index":612,"title":{"controllers/Oauth2DiscordController.html":{}},"body":{"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["oauth2discordmodule",{"_index":315,"title":{"modules/Oauth2DiscordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules.html":{},"overview.html":{}}}],["object.values(exception.constraints).map((value",{"_index":392,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["observable",{"_index":562,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["obtaining",{"_index":1201,"title":{},"body":{"license.html":{}}}],["ohjeistus",{"_index":822,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["old",{"_index":868,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["on('messagecreate",{"_index":218,"title":{},"body":{"controllers/AppController.html":{}}}],["once",{"_index":170,"title":{},"body":{"controllers/AppController.html":{}}}],["once('ready",{"_index":167,"title":{},"body":{"controllers/AppController.html":{}}}],["onmessage(message",{"_index":222,"title":{},"body":{"controllers/AppController.html":{}}}],["onmoduledestroy",{"_index":161,"title":{},"body":{"controllers/AppController.html":{}}}],["onmoduleinit",{"_index":162,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{}}}],["onready",{"_index":163,"title":{},"body":{"controllers/AppController.html":{}}}],["open",{"_index":35,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{},"index.html":{}}}],["optional",{"_index":110,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["options",{"_index":251,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{}}}],["options.model",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{}}}],["options.model.ts",{"_index":370,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"coverage.html":{}}}],["orderby",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["otherwise",{"_index":1252,"title":{},"body":{"license.html":{}}}],["out",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1260,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1119,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":458,"title":{},"body":{"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/UpdateDto.html":{}}}],["param({description",{"_index":456,"title":{},"body":{"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["parametri",{"_index":824,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["params",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["paramtype",{"_index":459,"title":{},"body":{"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/UpdateDto.html":{}}}],["paramtype.integer",{"_index":724,"title":{},"body":{"classes/StatsDto.html":{}}}],["particular",{"_index":1239,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":622,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["patch",{"_index":1027,"title":{},"body":{"injectables/TwitterService.html":{}}}],["path",{"_index":149,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["payload",{"_index":740,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["permission",{"_index":1195,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":289,"title":{},"body":{"controllers/AppController.html":{}}}],["permit",{"_index":1220,"title":{},"body":{"license.html":{}}}],["person",{"_index":1200,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1221,"title":{},"body":{"license.html":{}}}],["phone",{"_index":720,"title":{},"body":{"classes/StatsDto.html":{}}}],["phonenumber",{"_index":721,"title":{},"body":{"classes/StatsDto.html":{}}}],["ping",{"_index":934,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["pipes/message",{"_index":185,"title":{},"body":{"controllers/AppController.html":{}}}],["played",{"_index":780,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["please",{"_index":1188,"title":{},"body":{"index.html":{}}}],["pollhalosupporttweets",{"_index":942,"title":{},"body":{"injectables/TwitterService.html":{}}}],["portions",{"_index":1231,"title":{},"body":{"license.html":{}}}],["post",{"_index":435,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["post.pipe().subscribe((data",{"_index":440,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["power_weapons",{"_index":72,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["prefix",{"_index":466,"title":{},"body":{"controllers/HaloDotApiController.html":{},"controllers/Oauth2DiscordController.html":{}}}],["prints",{"_index":748,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["prisma",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botusercreateinput",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserorderbywithrelationinput",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserupdateinput",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserwhereinput",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserwhereuniqueinput",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.service",{"_index":981,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["prisma/client",{"_index":647,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":640,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":666,"title":{},"body":{"modules/SharedModule.html":{}}}],["prismaservice",{"_index":637,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/PrismaService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":99,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{}}}],["problem",{"_index":1029,"title":{},"body":{"injectables/TwitterService.html":{}}}],["processed",{"_index":232,"title":{},"body":{"controllers/AppController.html":{}}}],["production",{"_index":1157,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1152,"title":{},"body":{"index.html":{}}}],["project",{"_index":1176,"title":{},"body":{"index.html":{}}}],["promise",{"_index":223,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"injectables/UserService.html":{}}}],["promise.reject(error",{"_index":792,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["promise.reject(this._logger.error(error",{"_index":443,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["promise.reject(this._logger.error(error.stack",{"_index":442,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["provide",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["provided",{"_index":715,"title":{},"body":{"classes/StatsBaseCommand.html":{},"license.html":{}}}],["providers",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["publicly",{"_index":276,"title":{},"body":{"controllers/AppController.html":{}}}],["publicstats",{"_index":461,"title":{},"body":{"classes/GetDto.html":{}}}],["publish",{"_index":1214,"title":{},"body":{"license.html":{}}}],["pull",{"_index":270,"title":{},"body":{"controllers/AppController.html":{}}}],["purpose",{"_index":1240,"title":{},"body":{"license.html":{}}}],["päivit",{"_index":834,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["query",{"_index":268,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{}}}],["queue",{"_index":34,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["queuegroups",{"_index":33,"title":{"interfaces/QueueGroups.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["read",{"_index":279,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpSubCommand.html":{},"index.html":{}}}],["readonly",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{}}}],["ready",{"_index":1158,"title":{},"body":{"index.html":{}}}],["record",{"_index":1051,"title":{},"body":{"injectables/TwitterService.html":{}}}],["record.models.ts",{"_index":48,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["record/global",{"_index":590,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["recordtweet",{"_index":943,"title":{},"body":{"injectables/TwitterService.html":{}}}],["recordtweet(tweetdata",{"_index":960,"title":{},"body":{"injectables/TwitterService.html":{}}}],["reflect",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["reg",{"_index":245,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["register",{"_index":247,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["register.dto",{"_index":854,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["register/register.command",{"_index":708,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["registercommandoptions",{"_index":694,"title":{},"body":{"modules/SharedModule.html":{}}}],["registerdto",{"_index":651,"title":{"classes/RegisterDto.html":{}},"body":{"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["registered",{"_index":267,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["registernewcommand",{"_index":404,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["registernewcommand(name",{"_index":414,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["registers",{"_index":847,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["rekisteröi",{"_index":832,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["release",{"_index":1028,"title":{},"body":{"injectables/TwitterService.html":{}}}],["replied",{"_index":929,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["reply",{"_index":752,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{}}}],["replymessage",{"_index":761,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["req",{"_index":520,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{}}}],["req.headers",{"_index":527,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["request",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{}}}],["request.data",{"_index":584,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["request.json",{"_index":624,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["request.status",{"_index":583,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestjson",{"_index":623,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["requestmethod",{"_index":539,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["requestplayerservicerecord",{"_index":557,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestplayerservicerecord(gamertag",{"_index":564,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{}}}],["requestplayerstatscsr",{"_index":558,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestplayerstatscsr(gamertag",{"_index":566,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{}}}],["required",{"_index":254,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["res",{"_index":516,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"controllers/Oauth2DiscordController.html":{}}}],["res.data",{"_index":494,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["res.headers",{"_index":496,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["res.status",{"_index":492,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["reset",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["residence",{"_index":727,"title":{},"body":{"classes/StatsDto.html":{}}}],["resolve",{"_index":136,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["response",{"_index":31,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Additional.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["response.json",{"_index":629,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["responsebody",{"_index":145,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responsecsr",{"_index":500,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["responsecsr.data",{"_index":505,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["responsejson",{"_index":628,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["responseservicerecord",{"_index":507,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["restriction",{"_index":1208,"title":{},"body":{"license.html":{}}}],["result",{"_index":293,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":44,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":365,"title":{},"body":{"injectables/AppService.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":120,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["returnvalue",{"_index":580,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["rights",{"_index":1211,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":287,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":1166,"title":{},"body":{"index.html":{}}}],["runcommand",{"_index":468,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["rxjs",{"_index":192,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["schedulemodule",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["scopes",{"_index":304,"title":{},"body":{"controllers/AppController.html":{}}}],["se",{"_index":827,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["search",{"_index":1024,"title":{},"body":{"injectables/TwitterService.html":{}}}],["search.data.data.sort((a",{"_index":1038,"title":{},"body":{"injectables/TwitterService.html":{}}}],["season",{"_index":10,"title":{"interfaces/Season.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["seconds",{"_index":83,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["select",{"_index":281,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpDto.html":{}}}],["sell",{"_index":1218,"title":{},"body":{"license.html":{}}}],["sendchannel",{"_index":944,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sendchannel(channelid",{"_index":963,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sending",{"_index":1007,"title":{},"body":{"injectables/TwitterService.html":{}}}],["servicerecord",{"_index":91,"title":{"interfaces/ServiceRecord.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["servicerecordsmodels",{"_index":49,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["servicerecordsmodels.servicerecord",{"_index":587,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["services/discord",{"_index":194,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["services/twitter.service",{"_index":188,"title":{},"body":{"controllers/AppController.html":{}}}],["services/user.service",{"_index":190,"title":{},"body":{"controllers/AppController.html":{}}}],["setauthor",{"_index":1012,"title":{},"body":{"injectables/TwitterService.html":{}}}],["setcolor('#0099ff",{"_index":819,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setcolor('#ccccff",{"_index":769,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setcolor('#dfff00",{"_index":880,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["setcolor('#ff0000",{"_index":794,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setdescription",{"_index":821,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setdescription('gamertag",{"_index":881,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["setdescription('new",{"_index":1016,"title":{},"body":{"injectables/TwitterService.html":{}}}],["setdescription(`stats",{"_index":796,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setdescription(statscsr.data[0].response.current.tier",{"_index":772,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setfooter",{"_index":782,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["setthumbnail(statscsr.data[0].response.current.tier_image_url",{"_index":770,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["settimestamp",{"_index":787,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["settimestamp(new",{"_index":1020,"title":{},"body":{"injectables/TwitterService.html":{}}}],["settitle('error",{"_index":795,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["settitle('help",{"_index":843,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["settitle('ohjeet",{"_index":820,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["settitle('tweet",{"_index":1010,"title":{},"body":{"injectables/TwitterService.html":{}}}],["settitle(gamertag",{"_index":771,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["seturl(`https://twitter.com/i/web/status/${tweet.id",{"_index":1011,"title":{},"body":{"injectables/TwitterService.html":{}}}],["shall",{"_index":1228,"title":{},"body":{"license.html":{}}}],["shared/shared.module",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":316,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shots",{"_index":64,"title":{"interfaces/Shots.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["show",{"_index":275,"title":{},"body":{"controllers/AppController.html":{}}}],["situations",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["skip",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["software",{"_index":1203,"title":{},"body":{"license.html":{}}}],["solo",{"_index":36,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["sortdata",{"_index":1037,"title":{},"body":{"injectables/TwitterService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"index.html":{}}}],["sponsors",{"_index":1182,"title":{},"body":{"index.html":{}}}],["src/.../help.dto.ts",{"_index":1145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":160,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:222",{"_index":164,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:44",{"_index":165,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:66",{"_index":168,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":362,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":364,"title":{},"body":{"injectables/AppService.html":{}}}],["src/commands/stats/get/get.command.ts",{"_index":728,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/get/get.command.ts:24",{"_index":732,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["src/commands/stats/get/get.command.ts:31",{"_index":737,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["src/commands/stats/get/get.dto.ts",{"_index":455,"title":{},"body":{"classes/GetDto.html":{},"coverage.html":{}}}],["src/commands/stats/get/get.dto.ts:10",{"_index":457,"title":{},"body":{"classes/GetDto.html":{}}}],["src/commands/stats/help/help.command.ts",{"_index":813,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/help/help.command.ts:19",{"_index":814,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["src/commands/stats/help/help.command.ts:23",{"_index":815,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["src/commands/stats/help/help.dto.ts",{"_index":809,"title":{},"body":{"classes/StatsHelpDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/commands/stats/help/help.dto.ts:11",{"_index":811,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["src/commands/stats/register/register.command.ts",{"_index":850,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/register/register.command.ts:24",{"_index":852,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["src/commands/stats/register/register.command.ts:28",{"_index":853,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["src/commands/stats/register/register.dto.ts",{"_index":652,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/commands/stats/register/register.dto.ts:5",{"_index":655,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/commands/stats/register/register.dto.ts:7",{"_index":654,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/commands/stats/stats.command.ts",{"_index":700,"title":{},"body":{"classes/StatsBaseCommand.html":{},"coverage.html":{}}}],["src/commands/stats/stats.dto.ts",{"_index":718,"title":{},"body":{"classes/StatsDto.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.command.ts",{"_index":874,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.command.ts:26",{"_index":875,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["src/commands/stats/update/update.command.ts:30",{"_index":878,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["src/commands/stats/update/update.dto.ts",{"_index":1061,"title":{},"body":{"classes/UpdateDto.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.dto.ts:5",{"_index":1062,"title":{},"body":{"classes/UpdateDto.html":{}}}],["src/commands/test.command.ts",{"_index":887,"title":{},"body":{"classes/TestCommand.html":{},"coverage.html":{}}}],["src/commands/test.command.ts:11",{"_index":888,"title":{},"body":{"classes/TestCommand.html":{}}}],["src/commands/test.command.ts:14",{"_index":890,"title":{},"body":{"classes/TestCommand.html":{}}}],["src/controllers/halo",{"_index":464,"title":{},"body":{"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["src/controllers/oauth2",{"_index":613,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["src/exception",{"_index":95,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["src/guards/message",{"_index":476,"title":{},"body":{"controllers/HaloDotApiController.html":{},"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/halo",{"_index":513,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"coverage.html":{}}}],["src/models/interaction",{"_index":892,"title":{},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["src/models/sub",{"_index":369,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["src/pipes/message",{"_index":604,"title":{},"body":{"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["src/services/discord",{"_index":398,"title":{},"body":{"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["src/services/halodotapi/csrs.models.ts",{"_index":6,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["src/services/halodotapi/halodotapi.service",{"_index":478,"title":{},"body":{"controllers/HaloDotApiController.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{}}}],["src/services/halodotapi/halodotapi.service.ts",{"_index":553,"title":{},"body":{"injectables/HaloDotApiService.html":{},"coverage.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:10",{"_index":568,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:11",{"_index":560,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:25",{"_index":563,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:43",{"_index":561,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:50",{"_index":567,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:75",{"_index":565,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:8",{"_index":570,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/service",{"_index":47,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["src/services/prisma.service",{"_index":665,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/services/prisma.service.ts",{"_index":638,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/services/prisma.service.ts:10",{"_index":644,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/prisma.service.ts:6",{"_index":646,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/prisma/prisma.module",{"_index":667,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/services/twitter.service",{"_index":668,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/services/twitter.service.ts",{"_index":937,"title":{},"body":{"injectables/TwitterService.html":{},"coverage.html":{}}}],["src/services/twitter.service.ts:126",{"_index":959,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:179",{"_index":961,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:200",{"_index":966,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:21",{"_index":972,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:22",{"_index":968,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:24",{"_index":970,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:28",{"_index":950,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:47",{"_index":955,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:60",{"_index":974,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:64",{"_index":957,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:68",{"_index":964,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:89",{"_index":953,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter/twitter.module",{"_index":670,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/services/user.service",{"_index":671,"title":{},"body":{"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["src/services/user.service.ts",{"_index":1063,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:17",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:34",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:40",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:51",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:6",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:9",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["src/shared/shared.module",{"_index":541,"title":{},"body":{"modules/HaloDotApiModule.html":{}}}],["src/shared/shared.module.ts",{"_index":659,"title":{},"body":{"modules/SharedModule.html":{}}}],["start",{"_index":1160,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1169,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1170,"title":{},"body":{"index.html":{}}}],["started",{"_index":235,"title":{"index.html":{},"license.html":{}},"body":{"controllers/AppController.html":{}}}],["statements",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":258,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["stats/players/${gamertag}/csrs",{"_index":582,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["stats/players/${gamertag}/service",{"_index":589,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["statsbasecommand",{"_index":699,"title":{"classes/StatsBaseCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"coverage.html":{}}}],["statscsr",{"_index":763,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statscsr.data",{"_index":766,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsdto",{"_index":717,"title":{"classes/StatsDto.html":{}},"body":{"classes/StatsDto.html":{},"coverage.html":{}}}],["statsgetsubcommand",{"_index":711,"title":{"classes/StatsGetSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["statshelpdto",{"_index":808,"title":{"classes/StatsHelpDto.html":{}},"body":{"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["statshelpsubcommand",{"_index":709,"title":{"classes/StatsHelpSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["statsrecord",{"_index":765,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data",{"_index":767,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.kda.tofixed(1",{"_index":778,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.kdr.tofixed(1",{"_index":779,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.matches_played",{"_index":781,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.assists",{"_index":777,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.deaths",{"_index":776,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.kills",{"_index":774,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.time_played.human",{"_index":785,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.win_rate.tofixed(1",{"_index":786,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsregsubcommand",{"_index":707,"title":{"classes/StatsRegSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["statssubcommands",{"_index":244,"title":{},"body":{"controllers/AppController.html":{}}}],["statsupdatesubcommand",{"_index":713,"title":{"classes/StatsUpdateSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"coverage.html":{}}}],["statuscode",{"_index":146,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["string",{"_index":11,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["sub",{"_index":704,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["sub.unsubscribe",{"_index":307,"title":{},"body":{"controllers/AppController.html":{}}}],["sub_command",{"_index":241,"title":{},"body":{"controllers/AppController.html":{}}}],["sub_command_group",{"_index":243,"title":{},"body":{"controllers/AppController.html":{}}}],["sub_tier",{"_index":24,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["subcommand",{"_index":741,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["subcommands",{"_index":844,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["subject",{"_index":1223,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1216,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":191,"title":{},"body":{"controllers/AppController.html":{}}}],["substantial",{"_index":1230,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":233,"title":{},"body":{"controllers/AppController.html":{}}}],["suicides",{"_index":58,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["summary",{"_index":53,"title":{"interfaces/Summary.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["suomeksi",{"_index":283,"title":{},"body":{"controllers/AppController.html":{}}}],["support",{"_index":1183,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1257,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":250,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["tai",{"_index":837,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["take",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{}}}],["taken",{"_index":61,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["tarkoittaa",{"_index":825,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["test",{"_index":894,"title":{},"body":{"classes/TestCommand.html":{},"index.html":{}}}],["test:covsupport",{"_index":1175,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1174,"title":{},"body":{"index.html":{}}}],["testcommand",{"_index":886,"title":{"classes/TestCommand.html":{}},"body":{"classes/TestCommand.html":{},"coverage.html":{}}}],["testing",{"_index":300,"title":{},"body":{"controllers/AppController.html":{}}}],["testquery",{"_index":469,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["tests",{"_index":1172,"title":{},"body":{"index.html":{}}}],["testservice",{"_index":470,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["text",{"_index":783,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["textchannel",{"_index":982,"title":{},"body":{"injectables/TwitterService.html":{}}}],["thanks",{"_index":1181,"title":{},"body":{"index.html":{}}}],["themselves",{"_index":703,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["then((reply",{"_index":790,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this.$connect",{"_index":648,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":649,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._client",{"_index":991,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._client.v2.search",{"_index":1025,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._client.v2.user('1093614084807741440",{"_index":995,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._configservice.get('halodottoken",{"_index":572,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._configservice.get('token",{"_index":423,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._configservice.get('twitterallowedsearchauthorids",{"_index":988,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._configservice.get('twitterbearertoken",{"_index":992,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._discordapiservice.deletecommand('912494585433952346",{"_index":295,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.getcommands",{"_index":294,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.getcommands().catch((error",{"_index":296,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.registernewcommand('stats",{"_index":291,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.registernewcommand('test",{"_index":299,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordprovider",{"_index":1000,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._halodotapi",{"_index":764,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._halodotapi.init",{"_index":932,"title":{},"body":{"classes/TestCommand.html":{}}}],["this._halodotapiinfinitebaseurl",{"_index":485,"title":{},"body":{"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{}}}],["this._halodotapiservice.getmotd().then((motd",{"_index":487,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._halodotapiservice.init().then((res",{"_index":490,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._halodotapiservice.requestplayerservicerecord('ex1tium1306",{"_index":508,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._halodotapiservice.requestplayerstatscsr",{"_index":501,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._halosupporttweets.asobservable",{"_index":998,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._halosupporttweets.next([...tweets",{"_index":999,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._headers",{"_index":571,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._http.get",{"_index":576,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._http.get(url",{"_index":579,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._httpservice.delete(this.discordurl",{"_index":449,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._httpservice.get(this.discordurl",{"_index":444,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._httpservice.post(this.discordurl",{"_index":436,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._logger.debug",{"_index":451,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["this._logger.debug('search",{"_index":1035,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug('searching",{"_index":1034,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug(`gamertag",{"_index":762,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.debug(`headers",{"_index":593,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.debug(`registered",{"_index":447,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._logger.debug(`twitter",{"_index":993,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug(`url",{"_index":578,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.error",{"_index":153,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this._logger.error(error",{"_index":297,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{}}}],["this._logger.error(error?.response?.data",{"_index":511,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.log('bot",{"_index":234,"title":{},"body":{"controllers/AppController.html":{}}}],["this._logger.log('responsecsr.data",{"_index":503,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.log(`newtweets",{"_index":240,"title":{},"body":{"controllers/AppController.html":{}}}],["this._logger.log(`res.data",{"_index":493,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.log(`res.headers",{"_index":495,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.log(`res.status",{"_index":491,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.verbose(`request",{"_index":625,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["this._logger.verbose(`tweet",{"_index":1059,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.verbose(`twitter",{"_index":996,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.verbose(interaction",{"_index":884,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["this._logger.verbose(json.stringify(defer",{"_index":754,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.verbose(json.stringify(dto",{"_index":883,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["this._logger.verbose(reply",{"_index":791,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.warn('halodotapimiddleware",{"_index":525,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["this._logger.warn('responsecsr",{"_index":506,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.warn('responseservicerecord",{"_index":509,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this._logger.warn(`allowlogging",{"_index":857,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.warn(`url",{"_index":591,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.warn(`userexists",{"_index":861,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.warn(data",{"_index":434,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._prismaservice.tweet.create",{"_index":1052,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._prismaservice.tweet.findunique",{"_index":1043,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._prismaservice.tweet.upsert",{"_index":1057,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._submap.foreach((sub",{"_index":306,"title":{},"body":{"controllers/AppController.html":{}}}],["this._submap.set",{"_index":237,"title":{},"body":{"controllers/AppController.html":{}}}],["this._submap.set('stats_command",{"_index":290,"title":{},"body":{"controllers/AppController.html":{}}}],["this._submap.set('test_command",{"_index":298,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterallowedsearchauthorids",{"_index":986,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._twitterservice.init",{"_index":236,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterservice.newtweets$.subscribe((newtweets",{"_index":239,"title":{},"body":{"controllers/AppController.html":{}}}],["this._userservice",{"_index":799,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._userservice.createuser",{"_index":866,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._userservice.updateuser",{"_index":864,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["this._userservice.user",{"_index":859,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["this._userservice.users({}).then((users",{"_index":214,"title":{},"body":{"controllers/AppController.html":{}}}],["this.allowedchannelids.some(id",{"_index":227,"title":{},"body":{"controllers/AppController.html":{}}}],["this.bottoken",{"_index":422,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this.constructembedtweetmessage(tweet",{"_index":1004,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.discordprovider.getclient().generateinvite",{"_index":303,"title":{},"body":{"controllers/AppController.html":{}}}],["this.discordurl",{"_index":424,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this.getmotdasync",{"_index":499,"title":{},"body":{"controllers/HaloDotApiController.html":{}}}],["this.httpadapterhost",{"_index":139,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.log(`incoming",{"_index":225,"title":{},"body":{"controllers/AppController.html":{}}}],["this.next(newtweets",{"_index":1050,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.prisma.botuser.create",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.delete",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.findmany",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.findunique",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.update",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["this.recordtweet(tweet",{"_index":1046,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.sendchannel('911189130543788062",{"_index":1048,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.twitterallowedsearchauthorids",{"_index":990,"title":{},"body":{"injectables/TwitterService.html":{}}}],["throw",{"_index":585,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["thus",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["tier",{"_index":22,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tier_image_url",{"_index":29,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tier_start",{"_index":23,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tilastot",{"_index":835,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["time",{"_index":784,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["time_played",{"_index":89,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["timeout",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["timeplayed",{"_index":82,"title":{"interfaces/TimePlayed.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["timestamp",{"_index":147,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["todo",{"_index":802,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["tojson",{"_index":904,"title":{},"body":{"classes/TestCommand.html":{}}}],["tojson.model",{"_index":893,"title":{},"body":{"classes/TestCommand.html":{}}}],["tojson.model.ts",{"_index":933,"title":{},"body":{"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["tojsonresponse",{"_index":891,"title":{"interfaces/ToJsonResponse.html":{}},"body":{"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["token",{"_index":430,"title":{},"body":{"injectables/DiscordApiService.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{}}}],["tort",{"_index":1251,"title":{},"body":{"license.html":{}}}],["total_score",{"_index":87,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["transform",{"_index":607,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transform([message",{"_index":610,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transform(undefined",{"_index":608,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transformpipe",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["true",{"_index":255,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/GetDto.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/UpdateDto.html":{}}}],["true})@choice(language",{"_index":810,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["try",{"_index":431,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["tulostaa",{"_index":829,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["tweet",{"_index":954,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.author_id",{"_index":1042,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.fields",{"_index":1031,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.id",{"_index":1045,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.text",{"_index":1017,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet](https://twitter.com/i/web/status/${tweet.id",{"_index":1019,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet_id",{"_index":1044,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata",{"_index":962,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata.author_id",{"_index":1055,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata.created_at",{"_index":1056,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata.id",{"_index":1053,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata.text",{"_index":1054,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweets",{"_index":958,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetstream",{"_index":976,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetv2",{"_index":952,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetv2singleresult",{"_index":977,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitter",{"_index":979,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["twitterapi",{"_index":967,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitterapiv2",{"_index":978,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twittermodule",{"_index":669,"title":{},"body":{"modules/SharedModule.html":{}}}],["twitterservice",{"_index":187,"title":{"injectables/TwitterService.html":{}},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"coverage.html":{},"overview.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"classes/TestCommand.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["types",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["tämän",{"_index":830,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["undefined",{"_index":588,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{}}}],["unit",{"_index":1171,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["update",{"_index":266,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["update.dto",{"_index":879,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["update/update.command",{"_index":714,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["updated",{"_index":882,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["updatedto",{"_index":877,"title":{"classes/UpdateDto.html":{}},"body":{"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["updates",{"_index":848,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["updateuser",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(params",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["upper.pipe",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["upper.pipe.ts",{"_index":605,"title":{},"body":{"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["upper.pipe.ts:5",{"_index":609,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["upserttweet",{"_index":945,"title":{},"body":{"injectables/TwitterService.html":{}}}],["upserttweet(tweetdata",{"_index":965,"title":{},"body":{"injectables/TwitterService.html":{}}}],["url",{"_index":429,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["use",{"_index":269,"title":{},"body":{"controllers/AppController.html":{},"injectables/HaloDotApiMiddleware.html":{},"classes/StatsUpdateSubCommand.html":{},"license.html":{}}}],["use(req",{"_index":515,"title":{},"body":{"injectables/HaloDotApiMiddleware.html":{}}}],["useclass",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["usefactory",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{}}}],["usefilters",{"_index":742,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["usefilters(commandvalidationfilter",{"_index":746,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["useguards",{"_index":171,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{}}}],["useguards(messagefromuserguard",{"_index":219,"title":{},"body":{"controllers/AppController.html":{}}}],["usepipes",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["usepipes(messagetoupperpipe",{"_index":220,"title":{},"body":{"controllers/AppController.html":{}}}],["usepipes(transformpipe",{"_index":747,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["user",{"_index":719,"title":{},"body":{"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["user(userwhereuniqueinput",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["user.guard",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{}}}],["user.guard.ts",{"_index":596,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["user.guard.ts:5",{"_index":600,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["userexists",{"_index":858,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["userexists.discord_user_id",{"_index":863,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["userexists.gamertag",{"_index":869,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["userid",{"_index":758,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["users",{"_index":216,"title":{},"body":{"controllers/AppController.html":{},"injectables/UserService.html":{}}}],["users(params",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":189,"title":{"injectables/UserService.html":{}},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userwhereuniqueinput",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1177,"title":{},"body":{"index.html":{}}}],["v2",{"_index":980,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["validation",{"_index":744,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["validation.ts",{"_index":375,"title":{},"body":{"classes/CommandValidationFilter.html":{},"coverage.html":{}}}],["validation.ts:12",{"_index":377,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validation.ts:14",{"_index":382,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validationerror",{"_index":379,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validationpipe",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["validator",{"_index":384,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["valinnainen",{"_index":828,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["value",{"_index":20,"title":{},"body":{"interfaces/Additional.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiMiddleware.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/TestCommand.html":{},"injectables/TwitterService.html":{},"miscellaneous/enumerations.html":{}}}],["vehicles",{"_index":50,"title":{"interfaces/Vehicles.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["version",{"_index":547,"title":{},"body":{"modules/HaloDotApiModule.html":{},"injectables/HaloDotApiService.html":{},"classes/TestCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["versions",{"_index":1159,"title":{},"body":{"index.html":{}}}],["viestin",{"_index":831,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["void",{"_index":121,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/HaloDotApiController.html":{},"injectables/HaloDotApiMiddleware.html":{},"modules/HaloDotApiModule.html":{},"injectables/TwitterService.html":{}}}],["warranties",{"_index":1236,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1232,"title":{},"body":{"license.html":{}}}],["wasupdated",{"_index":860,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["watch",{"_index":1167,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1248,"title":{},"body":{"license.html":{}}}],["win_rate",{"_index":90,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["wins",{"_index":77,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["without",{"_index":1207,"title":{},"body":{"license.html":{}}}],["world",{"_index":367,"title":{},"body":{"injectables/AppService.html":{}}}],["write",{"_index":803,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["xbox",{"_index":248,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["yes",{"_index":264,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{}}}],["you'd",{"_index":1186,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/HaloDotApiModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Additional.html":{"url":"interfaces/Additional.html","title":"interface - Additional","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Additional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gamertag\n                                        \n                                \n                                \n                                        \n                                            season\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gamertag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gamertag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        season:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Additional-1.html":{"url":"interfaces/Additional-1.html","title":"interface - Additional-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Additional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gamertag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gamertag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gamertag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exception-filters/globalExceptions.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/exception-filters/globalExceptions.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/exception-filters/globalExceptions.ts:40\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exception-filters/globalExceptions.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  catch(exception: unknown, host: ArgumentsHost): void {\n    // In certain situations `httpAdapter` might not be available in the\n    // constructor method, thus we should resolve it here.\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const ctx = host.switchToHttp();\n\n    const httpStatus =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const responseBody = {\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n      error: JSON.stringify(exception),\n    };\n\n    this._logger.error(\n      `AllExcepetionsFilter error response: ${JSON.stringify(\n        ctx.getResponse(),\n      )}`,\n    );\n\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AllTime.html":{"url":"interfaces/AllTime.html","title":"interface - AllTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AllTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onModuleDestroy\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                onReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \nonModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReady\n                        \n                    \n                \n            \n            \n                \nonReady()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Once('ready')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Logger,\n  OnModuleDestroy,\n  OnModuleInit,\n  Request,\n} from '@nestjs/common';\nimport {\n  On,\n  Once,\n  UseGuards,\n  UsePipes,\n  DiscordClientProvider,\n  DiscordCommandProvider,\n} from '@discord-nestjs/core';\nimport { Message } from 'discord.js';\nimport { AppService } from './app.service';\nimport { MessageFromUserGuard } from './guards/message-fom-user.guard';\nimport { MessageToUpperPipe } from './pipes/message-to-upper.pipe';\nimport { TwitterService } from './services/twitter.service';\nimport { UserService } from './services/user.service';\nimport { Subscription } from 'rxjs';\nimport { DiscordApiService } from './services/discord-api.service';\nimport { DefineDiscordCommand } from './models/sub-command-options.model';\n// Client, ClientProvider,\n@Controller()\nexport class AppController implements OnModuleInit, OnModuleDestroy {\n  private readonly _logger = new Logger(AppController.name);\n  private _subMap = new Map();\n\n  allowedChannelIds: string[] = ['911368720440496208'];\n\n  constructor(\n    private readonly _appService: AppService,\n    private _twitterService: TwitterService,\n    private _userService: UserService,\n    private _discordCommandProvider: DiscordCommandProvider,\n    private _discordApiService: DiscordApiService,\n  ) {\n    // console.log(this.discordProvider.getClient().channels)\n  }\n\n  onModuleInit() {\n    // console.log(this.discordProvider.getClient())\n    // this._userService.users({}).then((users) => {\n    //   console.log('users', users)\n    // })\n  }\n\n  // @Client()\n  // discordProvider: ClientProvider;\n\n  // @On('messageCreate')\n  // @UseGuards(MessageFromUserGuard)\n  // // @UsePipes(MessageToUpperPipe)\n  // async onMessage(message: Message): Promise {\n  //   console.log(message);\n  //   this.logger.log(`Incoming message: ${message.content}`);\n  //   if (this.allowedChannelIds.some(id => id == message.channelId)) {\n  //     await message.reply('Message processed successfully');\n  //   }\n  // }\n\n  @Once('ready')\n  onReady() {\n    this._logger.log('Bot was started!');\n\n    this._twitterService.init();\n\n    this._subMap.set(\n      'newTweets',\n      this._twitterService.newTweets$.subscribe((newTweets) => {\n        if (newTweets) {\n          this._logger.log(`newTweets ${newTweets}`);\n        }\n      }),\n    );\n\n    // 1 is type SUB_COMMAND'\n    // 2 is type SUB_COMMAND_GROUP\n    const statsSubCommands: DefineDiscordCommand[] = [\n      {\n        name: 'reg',\n        description: 'Register your Xbox Gamer tag',\n        type: 1,\n        options: [\n          {\n            name: 'gamertag',\n            description: 'Enter Xbox Gamertag',\n            type: 3,\n            required: true,\n          },\n          {\n            name: 'allowlogging',\n            description:\n              'Allow your stats to be logged in a database every 24 hours.',\n            type: 3,\n            required: true,\n            choices: [\n              {\n                name: 'Yes',\n                value: '1',\n              },\n              {\n                name: 'No',\n                value: '0',\n              },\n            ],\n          },\n        ],\n      },\n      {\n        name: 'update',\n        description: 'Update your registered Xbox Gamer Tag',\n        type: 1,\n        options: [\n          {\n            name: 'gamertag',\n            description: 'Enter Xbox Gamertag',\n            type: 3,\n            required: true,\n          },\n        ],\n      },\n      {\n        name: 'get',\n        description: 'Query your stats or use :gamertag: to query',\n        type: 1,\n        options: [\n          {\n            name: 'gamertag',\n            description:\n              '(Optional) Enter Xbox Gamertag to pull stats for Halo Infinite',\n            type: 3,\n            required: false,\n          },\n          // {\n          //   \"name\": \"isPublic\",\n          //   \"description\": \"(Optional) Show stats publicly on channel\",\n          //   \"type\": 3,\n          //   \"required\": false,\n          //   \"choices\": [\n          //     {\n          //       \"name\": \"Yes\",\n          //       \"value\": \"1\"\n          //     },\n          //     {\n          //       \"name\": \"No\",\n          //       \"value\": \"0\"\n          //     },\n          //   ]\n          // },\n        ],\n      },\n      {\n        name: 'help',\n        description: 'READ ME',\n        type: 1,\n        options: [\n          {\n            name: 'lang',\n            description: 'Select language',\n            type: 3,\n            required: true,\n            choices: [\n              {\n                name: 'Suomeksi',\n                value: 'fi',\n              },\n              {\n                name: 'In English',\n                value: 'en',\n              },\n            ],\n          },\n        ],\n      },\n      // {\n      //   \"name\": \"role\",\n      //   \"description\": \"Get or edit permissions for a role\",\n      //   \"type\": 2,\n      //   \"options\": [\n      //     {\n      //       \"name\": \"get\",\n      //       \"description\": \"Get permissions for a role\",\n      //       \"type\": 1\n      //     },\n      //     {\n      //       \"name\": \"edit\",\n      //       \"description\": \"Edit permissions for a role\",\n      //       \"type\": 1\n      //     }\n      //   ]\n      // }\n\n      // {\n      //   name: 'reg',\n      //   description: 'Enter your Xbox Gamer Tag',\n      //   type: 1,\n      //   required: true\n      // }\n    ];\n    // this._subMap.set('stats_command', this._discordApiService.registerNewCommand('stats', 'Halo Infinite stats commands', 1, statsSubCommands))\n    // const result = await this._discordApiService.getCommands();\n    // this._discordApiService.deleteCommand('912494585433952346');\n\n    // this._discordApiService.getCommands().catch((error) => {\n    //   this._logger.error(error);\n    // })\n\n    // this._subMap.set('test_command', this._discordApiService.registerNewCommand('test', 'testing command', 1, null))\n\n    // this._discordApiService.registerNewCommand('stats', 'Halo Infinite stats commands', 1, statsSubCommands)\n\n    // const invite = this.discordProvider.getClient().generateInvite({\n    //   // scopes:\n    // });\n    // console.log(invite)\n  }\n\n  onModuleDestroy() {\n    this._subMap.forEach((sub) => sub.unsubscribe());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nHaloDotApiModule\n\nHaloDotApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHaloDotApiModule->AppModule\n\n\n\n\n\nOauth2DiscordModule\n\nOauth2DiscordModule\n\nAppModule -->\n\nOauth2DiscordModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDiscordApiService\n\nDiscordApiService\n\nAppModule -->\n\nDiscordApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            DiscordApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HaloDotApiModule\n                        \n                        \n                            Oauth2DiscordModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n// TransformPipe, ValidationPipe\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport config from '../environment/config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { HttpModule } from '@nestjs/axios';\nimport { HaloDotApiModule } from './controllers/halo-dot-api/halo-dot-api.module';\nimport { SharedModule } from './shared/shared.module';\nimport { DiscordApiService } from './services/discord-api.service';\nimport { AllExceptionsFilter } from './exception-filters/globalExceptions';\nimport { APP_FILTER } from '@nestjs/core';\nimport { Oauth2DiscordModule } from './controllers/oauth2-discord/oauth2-discord.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: ['./environment/.env'],\n      isGlobal: true,\n      load: [config],\n    }),\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async () => ({\n        // timeout: 15,\n        // maxRedirects: 5,\n      }),\n      inject: [ConfigService],\n    }),\n    ScheduleModule.forRoot(),\n    HaloDotApiModule,\n    Oauth2DiscordModule,\n    SharedModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    AppService,\n    DiscordApiService,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Assists.html":{"url":"interfaces/Assists.html","title":"interface - Assists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Assists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callouts\n                                        \n                                \n                                \n                                        \n                                            driver\n                                        \n                                \n                                \n                                        \n                                            emp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callouts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callouts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        driver\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        driver:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Breakdowns.html":{"url":"interfaces/Breakdowns.html","title":"interface - Breakdowns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Breakdowns\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assists\n                                        \n                                \n                                \n                                        \n                                            kills\n                                        \n                                \n                                \n                                        \n                                            matches\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assists:         Assists\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Assists\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kills\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kills:         Kills\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Kills\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matches:         Matches\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Matches\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Choice.html":{"url":"interfaces/Choice.html","title":"interface - Choice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Choice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sub-command-options.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefineDiscordCommand {\n  name: string;\n  description: string;\n  type?: number;\n  options?: DefineDiscordCommand[];\n  required?: boolean;\n  default_permission?: boolean;\n  choices?: Choice[];\n}\n\nexport interface Choice {\n  name: string;\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommandValidationFilter.html":{"url":"classes/CommandValidationFilter.html","title":"class - CommandValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommandValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exception-filters/discord-command-validation.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/exception-filters/discord-command-validation.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exceptionList: ValidationError[], metadata: DiscordArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/exception-filters/discord-command-validation.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exceptionList\n                                    \n                                            ValidationError[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            DiscordArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  DiscordArgumentMetadata,\n  DiscordExceptionFilter,\n  Catch,\n} from '@discord-nestjs/core';\nimport { Logger } from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { MessageEmbed } from 'discord.js';\n\n@Catch(ValidationError)\nexport class CommandValidationFilter implements DiscordExceptionFilter {\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  async catch(\n    exceptionList: ValidationError[],\n    metadata: DiscordArgumentMetadata,\n  ): Promise {\n    const [interaction] = metadata.context;\n\n    const embeds = exceptionList.map((exception) =>\n      new MessageEmbed().addFields(\n        Object.values(exception.constraints).map((value) => ({\n          name: exception.property,\n          value,\n        })),\n      ),\n    );\n\n    if (interaction.isCommand())\n      await interaction.reply({ embeds }).catch((error) => {\n        this._logger.error(error, error && error.stack ? error.stack : null);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CsrsRootObject.html":{"url":"interfaces/CsrsRootObject.html","title":"interface - CsrsRootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CsrsRootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            additional\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additional:         Additional\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Additional\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         QueueGroups[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QueueGroups[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Current.html":{"url":"interfaces/Current.html","title":"interface - Current","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Current\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Damage.html":{"url":"interfaces/Damage.html","title":"interface - Damage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Damage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            average\n                                        \n                                \n                                \n                                        \n                                            dealt\n                                        \n                                \n                                \n                                        \n                                            taken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        average\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        average:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dealt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dealt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taken:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            breakdowns\n                                        \n                                \n                                \n                                        \n                                            damage\n                                        \n                                \n                                \n                                        \n                                            kda\n                                        \n                                \n                                \n                                        \n                                            kdr\n                                        \n                                \n                                \n                                        \n                                            matches_played\n                                        \n                                \n                                \n                                        \n                                            shots\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            time_played\n                                        \n                                \n                                \n                                        \n                                            total_score\n                                        \n                                \n                                \n                                        \n                                            win_rate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        breakdowns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        breakdowns:         Breakdowns\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Breakdowns\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        damage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        damage:         Damage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Damage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kda\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kda:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kdr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kdr:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matches_played\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matches_played:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shots\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shots:         Shots\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Shots\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         Summary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Summary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time_played\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time_played:         TimePlayed\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimePlayed\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        win_rate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        win_rate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefineDiscordCommand.html":{"url":"interfaces/DefineDiscordCommand.html","title":"interface - DefineDiscordCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefineDiscordCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sub-command-options.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            choices\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default_permission\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        choices:         Choice[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Choice[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default_permission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default_permission:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         DefineDiscordCommand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefineDiscordCommand[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefineDiscordCommand {\n  name: string;\n  description: string;\n  type?: number;\n  options?: DefineDiscordCommand[];\n  required?: boolean;\n  default_permission?: boolean;\n  choices?: Choice[];\n}\n\nexport interface Choice {\n  name: string;\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscordApiService.html":{"url":"injectables/DiscordApiService.html","title":"injectable - DiscordApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscordApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/discord-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                            \n                                botToken\n                            \n                            \n                                discordUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteCommand\n                            \n                            \n                                    Async\n                                getCommands\n                            \n                            \n                                    Async\n                                registerNewCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_httpService: HttpService, _configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/services/discord-api.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCommand(commandId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commandId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCommands\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommands()\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerNewCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNewCommand(name: string, description: string, type?: number, options?: DefineDiscordCommand[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                DefineDiscordCommand[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(DiscordApiService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        botToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discordUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { lastValueFrom } from 'rxjs';\nimport { DefineDiscordCommand } from 'src/models/sub-command-options.model';\nimport { AxiosResponse } from 'axios';\n\n@Injectable()\nexport class DiscordApiService {\n  private _logger: Logger = new Logger(DiscordApiService.name);\n\n  discordUrl: string;\n  botToken: string;\n\n  constructor(\n    private _httpService: HttpService,\n    private _configService: ConfigService,\n  ) {\n    this.botToken = this._configService.get('token');\n    this.discordUrl = `https://discord.com/api/v8/applications/${this._configService.get(\n      'applicationId',\n    )}/guilds/${this._configService.get('guildID')}/commands`;\n\n    console.log('discordAPI url for commands:', this.discordUrl);\n    console.log('discordAPI token:', this.botToken);\n  }\n\n  async registerNewCommand(\n    name: string,\n    description: string,\n    type?: number,\n    options?: DefineDiscordCommand[],\n  ) {\n    try {\n      const data: DefineDiscordCommand = {\n        name: name,\n        description: description,\n      };\n\n      if (type) {\n        data.type = type;\n      }\n\n      if (options) {\n        data.options = options;\n      }\n\n      this._logger.warn(data);\n\n      const post = this._httpService.post(this.discordUrl, data, {\n        headers: {\n          Authorization: `Bot ${this.botToken}`,\n        },\n      });\n\n      return post.pipe().subscribe((data) => {\n        console.log('registerCommand response', data);\n      });\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  async getCommands(): Promise> {\n    try {\n      const get = await lastValueFrom(\n        this._httpService.get(this.discordUrl, {\n          headers: {\n            Authorization: `Bot ${this.botToken}`,\n          },\n        }),\n      );\n\n      if (get.status == 200) {\n        this._logger.debug(`REGISTERED COMMANDS: `, JSON.stringify(get.data));\n        return get;\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  async deleteCommand(\n    commandId: string,\n  ): Promise> {\n    try {\n      const deleteCommand = await lastValueFrom(\n        this._httpService.delete(this.discordUrl + `/${commandId}`, {\n          headers: {\n            Authorization: `Bot ${this.botToken}`,\n          },\n        }),\n      );\n\n      if (deleteCommand.status == 200) {\n        this._logger.debug(\n          `DELETE COMMAND: `,\n          JSON.stringify(deleteCommand.data),\n        );\n\n        return deleteCommand;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetDto.html":{"url":"classes/GetDto.html","title":"class - GetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/get/get.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/get/get.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\n// enum PublicStats {\n//   true,\n//   false,\n// }\n\nexport class GetDto {\n  @Param({ description: 'Xbox Gamer Tag', required: false })\n  gamertag: string;\n  // @Choice(PublicStats)\n  // isPublic: PublicStats;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HaloDotApiController.html":{"url":"controllers/HaloDotApiController.html","title":"controller - HaloDotApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HaloDotApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/halo-dot-api/halo-dot-api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                halo-dot-api\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runCommand\n                            \n                            \n                                    Async\n                                testQuery\n                            \n                            \n                                testService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        runCommand\n                        \n                    \n                \n            \n            \n                \nrunCommand()\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/halo-dot-api/halo-dot-api.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        testQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    testQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/halo-dot-api/halo-dot-api.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testService\n                        \n                    \n                \n            \n            \n                \ntestService()\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/halo-dot-api/halo-dot-api.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { On, Command, DiscordCommandProvider } from '@discord-nestjs/core';\nimport { HttpService } from '@nestjs/axios';\nimport { Controller, Logger, UseGuards } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { Message } from 'discord.js';\nimport { lastValueFrom } from 'rxjs';\nimport { MessageFromUserGuard } from 'src/guards/message-fom-user.guard';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { AxiosResponse } from 'axios';\n\n@Controller('halo-dot-api')\nexport class HaloDotApiController {\n  private readonly _logger = new Logger(HaloDotApiController.name);\n  private _allowedChannelIds: string[] = ['911368720440496208'];\n  private _haloDotApiInfiniteBaseUrl: string;\n\n  constructor(\n    private _haloDotApiService: HaloDotApiService,\n    private _http: HttpService,\n    private _configService: ConfigService,\n  ) {\n    this._haloDotApiInfiniteBaseUrl = `https://cryptum.halodotapi.com/games/hi/`;\n\n    // this._haloDotApiService.getMotd().then((motd) => {\n    //   motd.unsubscribe();\n    // })\n  }\n\n  // @Cron(CronExpression.EVERY_30_SECONDS)\n  testService() {\n    // this._haloDotApiService.init().then((res) => {\n    //   this._logger.log(`res.status: ${res.status}`)\n    //   this._logger.log(`res.data:`, res.data)\n    //   this._logger.log(`res.headers:`, res.headers)\n    // })\n  }\n\n  runCommand() {}\n\n  // @Cron(CronExpression.EVERY_5_SECONDS)\n  // @Cron(CronExpression.EVERY_5_MINUTES)\n  async testQuery() {\n    try {\n      // const response = await this.getMotdAsync()\n      const responseCsr = await this._haloDotApiService.requestPlayerStatsCSR(\n        'ex1tium1306',\n        'open',\n      );\n      if (responseCsr) {\n        // this._logger.log('responseCsr.data: ',JSON.s responseCsr.data);\n        this._logger.warn('responseCsr', responseCsr);\n      }\n\n      const responseServiceRecord =\n        await this._haloDotApiService.requestPlayerServiceRecord('ex1tium1306');\n      if (responseServiceRecord) {\n        this._logger.warn('responseServiceRecord', responseServiceRecord);\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n\n      // if (error && error.response) {\n      //   this._logger.error(error?.response?.data);\n      // }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HaloDotApiMiddleware.html":{"url":"injectables/HaloDotApiMiddleware.html","title":"injectable - HaloDotApiMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HaloDotApiMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/halo-dot-api.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/halo-dot-api.middleware.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HaloDotApiMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/middleware/halo-dot-api.middleware.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class HaloDotApiMiddleware implements NestMiddleware {\n  private _logger = new Logger(HaloDotApiMiddleware.name);\n  // constructor(private _logger: Logger) { }\n\n  use(req: Request, res: Response, next: NextFunction) {\n    // const\n\n    this._logger.warn('HaloDotApiMiddleWare HEADER: ', req.headers);\n    // console.log()\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HaloDotApiModule.html":{"url":"modules/HaloDotApiModule.html","title":"module - HaloDotApiModule","body":"\n                   \n\n\n\n\n    Modules\n    HaloDotApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HaloDotApiModule\n\n\n\ncluster_HaloDotApiModule_imports\n\n\n\ncluster_HaloDotApiModule_providers\n\n\n\n\nHaloDotApiModule\n\nHaloDotApiModule\n\nHaloDotApiModule -->\n\nHaloDotApiModule->HaloDotApiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHaloDotApiModule -->\n\nSharedModule->HaloDotApiModule\n\n\n\n\n\nHaloDotApiService\n\nHaloDotApiService\n\nHaloDotApiModule -->\n\nHaloDotApiService->HaloDotApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/controllers/halo-dot-api/halo-dot-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HaloDotApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HaloDotApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HaloDotApiModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/halo-dot-api/halo-dot-api.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DiscordCommandProvider } from '@discord-nestjs/core';\nimport { HttpModule } from '@nestjs/axios';\nimport {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER } from '@nestjs/core';\nimport { AllExceptionsFilter } from 'src/exception-filters/globalExceptions';\nimport { HaloDotApiMiddleware } from 'src/middleware/halo-dot-api.middleware';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { SharedModule } from 'src/shared/shared.module';\nimport { HaloDotApiController } from './halo-dot-api.controller';\n\n@Module({\n  imports: [\n    SharedModule,\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (_configService: ConfigService) => ({\n        // headers: {\n        //   'Authorization': `Cryptum-Token ${_configService.get('haloDotToken')}`,\n        //   'Content-Type': 'application/json',\n        //   'Cryptum-API-Version': '2.3-alpha'\n        // }\n      }),\n      inject: [ConfigService],\n    }),\n    HaloDotApiModule,\n    // HttpModule.register({\n    //   headers: {\n    //     'Authorization': 'Cryptum-Token HIDM6WWaSZUc15AhW8jAPc3kJoAlOizH63Kn3XGqn4gmHEgBxO3dfEj1oqbMe2Oq',\n    //     'Cryptum-API-Version': 'Cryptum-API-Version: 2.3-alpha'\n    //   }\n    // })\n  ],\n  controllers: [HaloDotApiController],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    HaloDotApiService,\n  ],\n})\nexport class HaloDotApiModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(HaloDotApiMiddleware).forRoutes(HaloDotApiController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HaloDotApiService.html":{"url":"injectables/HaloDotApiService.html","title":"injectable - HaloDotApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HaloDotApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/halodotapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _haloDotApiInfiniteBaseUrl\n                            \n                            \n                                    Private\n                                _headers\n                            \n                            \n                                    Private\n                                    Readonly\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMotd\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                requestPlayerServiceRecord\n                            \n                            \n                                    Async\n                                requestPlayerStatsCSR\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpService, _configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMotd\n                        \n                    \n                \n            \n            \n                \ngetMotd()\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestPlayerServiceRecord\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestPlayerServiceRecord(gamertag: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gamertag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestPlayerStatsCSR\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestPlayerStatsCSR(gamertag: string, queue: \"open\" | \"solo-duo\")\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gamertag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queue\n                                    \n                                            \"open\" | \"solo-duo\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _haloDotApiInfiniteBaseUrl\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _headers\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HaloDotApiService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosResponse } from 'axios';\nimport { lastValueFrom, Observable } from 'rxjs';\n@Injectable()\nexport class HaloDotApiService {\n  private readonly _logger = new Logger(HaloDotApiService.name);\n\n  private _haloDotApiInfiniteBaseUrl;\n  private _headers;\n\n  constructor(\n    private _http: HttpService,\n    private _configService: ConfigService,\n  ) {\n    this._haloDotApiInfiniteBaseUrl = `https://cryptum.halodotapi.com/games/hi/`;\n    this._headers = {\n      Authorization: `Cryptum-Token ${this._configService.get('haloDotToken')}`,\n      'Content-Type': 'application/json',\n      'Cryptum-API-Version': '2.3-alpha',\n    };\n  }\n\n  async init(): Promise> {\n    try {\n      this._logger.debug(\n        `haloDotApiBaseUrl: ${this._haloDotApiInfiniteBaseUrl}`,\n      );\n      const url = 'https://cryptum.halodotapi.com/';\n      // const req =\n      return await lastValueFrom(this._http.get(url));\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n    // this._http.get()\n  }\n\n  getMotd(): Observable> {\n    const url = this._haloDotApiInfiniteBaseUrl + 'motd';\n    this._logger.debug(`url: ${url}`);\n    const request = this._http.get(url, {});\n    return request;\n  }\n\n  async requestPlayerStatsCSR(gamertag: string, queue: 'open' | 'solo-duo') {\n    try {\n      let returnValue: CsrsModels.CsrsRootObject;\n\n      const url =\n        this._haloDotApiInfiniteBaseUrl + `stats/players/${gamertag}/csrs`;\n      const request = await lastValueFrom(\n        this._http.get(url, {\n          headers: this._headers,\n        }),\n      );\n      if (request && request.status === 200) {\n        returnValue = request.data as CsrsModels.CsrsRootObject;\n      }\n      return returnValue;\n    } catch (error) {\n      // throw new Error(error);\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  async requestPlayerServiceRecord(gamertag: string) {\n    try {\n      let returnValue: ServiceRecordsModels.ServiceRecord | undefined;\n\n      const url =\n        this._haloDotApiInfiniteBaseUrl +\n        `stats/players/${gamertag}/service-record/global`;\n      // this._logger.warn(`url: ${url}`)\n      const request = await lastValueFrom(\n        this._http.get(url, {\n          headers: this._headers,\n        }),\n      );\n      if (request && request.status == 200) {\n        returnValue = request.data as ServiceRecordsModels.ServiceRecord;\n      }\n      return returnValue;\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  // async getMotdAsync(): Promise> {\n  //   const url = this._haloDotApiInfiniteBaseUrl + 'motd';\n  //   this._logger.warn(`url: ${url}`)\n\n  //   const headers = {\n  //     'Authorization': `Cryptum-Token ${this._configService.get('haloDotToken')}`,\n  //     'Content-Type': 'application/json',\n  //     'Cryptum-API-Version': 'Cryptum-API-Version: 2.3-alpha'\n  //   }\n  //   this._logger.debug(`headers: ${JSON.stringify(headers)}`)\n  //   const request = lastValueFrom(this._http.get(url, {\n  //     headers\n  //   }))\n  //   return request;\n  // }\n}\n\n// declare module namespace {\n\n// export interface Current {\n//   value: number;\n//   measurement_matches_remaining: number;\n//   tier: string;\n//   tier_start: number;\n//   sub_tier: number;\n//   next_tier: string;\n//   next_tier_start: number;\n//   next_sub_tier: number;\n//   initial_measurement_matches: number;\n//   tier_image_url: string;\n// }\n\n// export interface Season {\n//   value: number;\n//   measurement_matches_remaining: number;\n//   tier: string;\n//   tier_start: number;\n//   sub_tier: number;\n//   next_tier: string;\n//   next_tier_start: number;\n//   next_sub_tier: number;\n//   initial_measurement_matches: number;\n//   tier_image_url: string;\n// }\n\n// export interface AllTime {\n//   value: number;\n//   measurement_matches_remaining: number;\n//   tier: string;\n//   tier_start: number;\n//   sub_tier: number;\n//   next_tier: string;\n//   next_tier_start: number;\n//   next_sub_tier: number;\n//   initial_measurement_matches: number;\n//   tier_image_url: string;\n// }\n\n// export interface Response {\n//   current: Current;\n//   season: Season;\n//   all_time: AllTime;\n// }\n\n// export interface QueueGroups {\n//   queue: 'open' | 'solo-duo';\n//   input: 'crossplay' | 'controller' | 'mnk';\n//   response: Response;\n// }\n\n// export interface Additional {\n//   gamertag: string;\n//   season: number;\n// }\n\n// export interface CsrsRootObject {\n//   data: QueueGroups[];\n//   additional: Additional;\n// }\n\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Kills.html":{"url":"interfaces/Kills.html","title":"interface - Kills","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Kills\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            grenades\n                                        \n                                \n                                \n                                        \n                                            headshots\n                                        \n                                \n                                \n                                        \n                                            melee\n                                        \n                                \n                                \n                                        \n                                            power_weapons\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        grenades\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grenades:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headshots\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headshots:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        melee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        melee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        power_weapons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        power_weapons:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Matches.html":{"url":"interfaces/Matches.html","title":"interface - Matches","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Matches\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            draws\n                                        \n                                \n                                \n                                        \n                                            left\n                                        \n                                \n                                \n                                        \n                                            losses\n                                        \n                                \n                                \n                                        \n                                            wins\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        draws\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draws:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        losses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        losses:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wins:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageFromUserGuard.html":{"url":"classes/MessageFromUserGuard.html","title":"class - MessageFromUserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageFromUserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/message-fom-user.guard.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActive\n                        \n                    \n                \n            \n            \n                \ncanActive(event, undefined: [Message])\n                \n            \n\n\n            \n                \n                    Defined in src/guards/message-fom-user.guard.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            [Message]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DiscordGuard } from '@discord-nestjs/core';\nimport { Message } from 'discord.js';\n\nexport class MessageFromUserGuard implements DiscordGuard {\n  canActive(event: 'messageCreate', [message]: [Message]): boolean {\n    return !message.author.bot;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageToUpperPipe.html":{"url":"classes/MessageToUpperPipe.html","title":"class - MessageToUpperPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageToUpperPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/message-to-upper.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordPipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(undefined: [Message])\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/message-to-upper.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            [Message]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DiscordPipeTransform } from '@discord-nestjs/core';\nimport { Message } from 'discord.js';\n\nexport class MessageToUpperPipe implements DiscordPipeTransform {\n  transform([message]: [Message]): [Message] {\n    message.content = message.content.toUpperCase();\n\n    return [message];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/Oauth2DiscordController.html":{"url":"controllers/Oauth2DiscordController.html","title":"controller - Oauth2DiscordController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  Oauth2DiscordController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/oauth2-discord/oauth2-discord.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                oauth2-discord\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                callbackForDiscordOauth2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        callbackForDiscordOauth2\n                        \n                    \n                \n            \n            \n                \n                    \n                    callbackForDiscordOauth2(request: Request, response: Response, body: Body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/controllers/oauth2-discord/oauth2-discord.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                            Body\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Request,\n  Req,\n  Logger,\n  Body,\n  Res,\n  Response,\n  HttpStatus,\n} from '@nestjs/common';\n\n@Controller('oauth2-discord')\nexport class Oauth2DiscordController {\n  private _logger: Logger = new Logger(Oauth2DiscordController.name);\n\n  @Get()\n  async callbackForDiscordOauth2(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n    @Body() body: Body,\n  ) {\n    if (request) {\n      // const requestJson = await request.json();\n      this._logger.verbose(`request json: ${JSON.stringify(request.body)}`);\n    }\n\n    if (response) {\n      // const responseJson = await response.json();\n      this._logger.verbose(`request json: ${JSON.stringify(response.body)}`);\n    }\n\n    if (body) {\n      // const bodyJson = await body.json();\n      this._logger.verbose(`request json: ${JSON.stringify(body.body)}`);\n    }\n\n    return HttpStatus.OK;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Oauth2DiscordModule.html":{"url":"modules/Oauth2DiscordModule.html","title":"module - Oauth2DiscordModule","body":"\n                   \n\n\n\n\n    Modules\n    Oauth2DiscordModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/controllers/oauth2-discord/oauth2-discord.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            Oauth2DiscordController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Oauth2DiscordController } from './oauth2-discord.controller';\n\n@Module({\n  controllers: [Oauth2DiscordController],\n})\nexport class Oauth2DiscordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueueGroups.html":{"url":"interfaces/QueueGroups.html","title":"interface - QueueGroups","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueueGroups\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            input\n                                        \n                                \n                                \n                                        \n                                            queue\n                                        \n                                \n                                \n                                        \n                                            response\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input:     \"crossplay\" | \"controller\" | \"mnk\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"crossplay\" | \"controller\" | \"mnk\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue:     \"open\" | \"solo-duo\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"open\" | \"solo-duo\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response:         Response\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Response\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/register/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowlogging\n                            \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allowlogging\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Allow logging to a database', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class RegisterDto {\n  @Param({ description: 'Xbox Gamer Tag', required: true })\n  gamertag: string;\n  @Param({ description: 'Allow logging to a database', required: true })\n  allowlogging: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            all_time\n                                        \n                                \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            season\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        all_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        all_time:         AllTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AllTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         Current\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Current\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        season:         Season\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Season\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Season.html":{"url":"interfaces/Season.html","title":"interface - Season","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Season\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceRecord.html":{"url":"interfaces/ServiceRecord.html","title":"interface - ServiceRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            additional\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additional:         Additional\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Additional\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nDiscordCommandProvider \n\nDiscordCommandProvider \n\n\n\nHaloDotApiService \n\nHaloDotApiService \n\n\n\nPrismaService \n\nPrismaService \n\n\n\nTwitterService \n\nTwitterService \n\n\n\nUserService \n\nUserService \n\n\n\nSharedModule\n\nSharedModule\n\nDiscordCommandProvider  -->\n\nSharedModule->DiscordCommandProvider \n\n\n\nHaloDotApiService  -->\n\nSharedModule->HaloDotApiService \n\n\n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\nTwitterService  -->\n\nSharedModule->TwitterService \n\n\n\nUserService  -->\n\nSharedModule->UserService \n\n\n\n\n\nHaloDotApiService\n\nHaloDotApiService\n\nSharedModule -->\n\nHaloDotApiService->SharedModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\nTwitterService\n\nTwitterService\n\nSharedModule -->\n\nTwitterService->SharedModule\n\n\n\n\n\nUserService\n\nUserService\n\nSharedModule -->\n\nUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HaloDotApiService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            TwitterService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiscordCommandProvider\n                        \n                        \n                            HaloDotApiService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            TwitterService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DiscordCommandProvider, DiscordModule } from '@discord-nestjs/core';\nimport { HttpModule, HttpService } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER } from '@nestjs/core';\nimport { Intents, Message } from 'discord.js';\nimport { AllExceptionsFilter } from 'src/exception-filters/globalExceptions';\nimport { DiscordApiService } from 'src/services/discord-api.service';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\n// import { DiscordConfigService } from 'src/services/discord-config.service';\nimport { PrismaService } from 'src/services/prisma.service';\n// import { PrismaModule } from 'src/services/prisma/prisma.module';\nimport { TwitterService } from 'src/services/twitter.service';\n// import { TwitterModule } from 'src/services/twitter/twitter.module';\nimport { UserService } from 'src/services/user.service';\n\n@Module({\n  imports: [\n    // DiscordModule.forRootAsync({\n    //   imports: [ConfigModule, PrismaModule],\n    //   useClass: DiscordConfigService,\n    // }),\n    HttpModule,\n    DiscordModule.forRootAsync({\n      imports: [ConfigModule, SharedModule],\n      useFactory: (configService: ConfigService) => ({\n        token: configService.get('token'),\n        commands: ['**/**/*.command.js'],\n        autoRegisterGlobalCommands: true,\n        discordClientOptions: {\n          intents: [\n            Intents.FLAGS.GUILDS,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MEMBERS,\n            Intents.FLAGS.GUILD_BANS,\n            Intents.FLAGS.GUILD_EMOJIS_AND_STICKERS,\n            Intents.FLAGS.GUILD_INTEGRATIONS,\n            Intents.FLAGS.GUILD_WEBHOOKS,\n            Intents.FLAGS.GUILD_INVITES,\n            Intents.FLAGS.GUILD_VOICE_STATES,\n            Intents.FLAGS.GUILD_PRESENCES,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MESSAGE_REACTIONS,\n            Intents.FLAGS.GUILD_MESSAGE_TYPING,\n            Intents.FLAGS.DIRECT_MESSAGES,\n            Intents.FLAGS.DIRECT_MESSAGE_REACTIONS,\n            Intents.FLAGS.DIRECT_MESSAGE_TYPING,\n          ],\n        },\n        allowGuilds: JSON.parse(configService.get('allowGuilds')),\n        registerCommandOptions: [\n          {\n            forGuild: configService.get('guildID'),\n            allowFactory: (message: Message) =>\n              !message.author.bot && message.content === '!deploy',\n          },\n        ],\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    TwitterService,\n    PrismaService,\n    UserService,\n    HaloDotApiService,\n    DiscordCommandProvider,\n  ],\n  exports: [\n    TwitterService,\n    PrismaService,\n    UserService,\n    HaloDotApiService,\n    DiscordCommandProvider,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Shots.html":{"url":"interfaces/Shots.html","title":"interface - Shots","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Shots\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accuracy\n                                        \n                                \n                                \n                                        \n                                            fired\n                                        \n                                \n                                \n                                        \n                                            landed\n                                        \n                                \n                                \n                                        \n                                            missed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accuracy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accuracy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fired\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fired:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        landed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        landed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        missed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsBaseCommand.html":{"url":"classes/StatsBaseCommand.html","title":"class - StatsBaseCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsBaseCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/stats.command.ts\n        \n\n\n            \n                Description\n            \n            \n                 Base /stats command. Base commands cannot do anything by themselves if they have sub commands in  include array.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\n\nimport { StatsRegSubCommand } from './register/register.command';\nimport { StatsHelpSubCommand } from './help/help.command';\nimport { StatsGetSubCommand } from './get/get.command';\nimport { StatsUpdateSubCommand } from './update/update.command';\n/**\n *  Base /stats command. Base commands cannot do anything by themselves if they have sub commands in  include array.\n *\n * @export\n * @class StatsBaseCommand\n */\n@Command({\n  name: 'stats',\n  description: 'Stats provided by HaloDotAPI',\n  include: [\n    StatsGetSubCommand,\n    StatsUpdateSubCommand,\n    StatsRegSubCommand,\n    StatsHelpSubCommand,\n  ],\n})\nexport class StatsBaseCommand { }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsDto.html":{"url":"classes/StatsDto.html","title":"class - StatsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/stats.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class StatsDto {\n  // @Param({ description: 'User name', required: true })\n  // name: string;\n  // @Param({\n  //   name: 'phone-number',\n  //   description: 'Phone number',\n  //   required: true,\n  // })\n  // phoneNumber: string;\n  // @Param({ description: 'User nickname', required: true })\n  // name: string;\n  // @Param({ description: 'User age', required: true, type: ParamType.INTEGER })\n  // age: number;\n  // @Choice(City)\n  // @Param({ description: 'City of residence', type: ParamType.INTEGER })\n  // city: City;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsGetSubCommand.html":{"url":"classes/StatsGetSubCommand.html","title":"class - StatsGetSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsGetSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/get/get.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_haloDotApi: HaloDotApiService, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/get/get.command.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _haloDotApi\n                                                  \n                                                        \n                                                                        HaloDotApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(StatsGetSubCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/get/get.command.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: GetDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/get/get.command.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                GetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordCommand,\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { UserService } from 'src/services/user.service';\nimport { GetDto } from './get.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'get', description: 'Prints our your stats' })\nexport class StatsGetSubCommand implements DiscordTransformedCommand {\n  private _logger: Logger = new Logger(StatsGetSubCommand.name);\n\n  constructor(\n    private _haloDotApi: HaloDotApiService,\n    private _userService: UserService,\n  ) {}\n\n  async handler(\n    @Payload() dto: GetDto,\n    interaction: CommandInteraction,\n  ): Promise {\n    try {\n      const defer = await interaction.deferReply({ fetchReply: true });\n      // const reply = await interaction.fetchReply()\n      this._logger.verbose(JSON.stringify(defer));\n\n      // https://github.com/discordjs/discord.js/issues/7005\n      const hasParam = !!dto.gamertag;\n      const userId = interaction.user.id;\n\n      let gamerTag: string;\n      let embedReply: MessageEmbed;\n\n      let replyMessage: InteractionReplyOptions;\n\n      if (hasParam) {\n        gamerTag = dto.gamertag;\n        this._logger.debug(`gamerTag as param: ${gamerTag}`);\n\n        const statsCSR = await this._haloDotApi\n          .requestPlayerStatsCSR(gamerTag, 'open')\n          .catch((error) => {\n            this._logger.error(error);\n          });\n        const statsRecord = await this._haloDotApi\n          .requestPlayerServiceRecord(gamerTag)\n          .catch((error) => {\n            this._logger.error(error);\n          });\n\n        if (\n          statsCSR &&\n          statsCSR.data &&\n          statsRecord &&\n          statsRecord.data &&\n          !interaction.replied\n        ) {\n          embedReply = new MessageEmbed()\n            .setColor('#CCCCFF')\n            .setThumbnail(statsCSR.data[0].response.current.tier_image_url)\n            .setTitle(gamerTag)\n            .setDescription(statsCSR.data[0].response.current.tier)\n            .addFields(\n              {\n                name: `Kills`,\n                value: ` ${statsRecord.data.summary.kills}`,\n                inline: true,\n              },\n              {\n                name: `Deaths`,\n                value: ` ${statsRecord.data.summary.deaths}`,\n                inline: true,\n              },\n              {\n                name: `Assists`,\n                value: ` ${statsRecord.data.summary.assists}`,\n                inline: true,\n              },\n            )\n            .addFields(\n              {\n                name: `KDA`,\n                value: ` ${statsRecord.data.kda.toFixed(1)}`,\n                inline: true,\n              },\n              {\n                name: `KDR`,\n                value: ` ${statsRecord.data.kdr.toFixed(1)}`,\n                inline: true,\n              },\n              {\n                name: `Matches Played`,\n                value: ` ${statsRecord.data.matches_played}`,\n                inline: true,\n              },\n            )\n            .setFooter({\n              text: `Time played: ${\n                statsRecord.data.time_played.human\n              }. Wins: ${statsRecord.data.win_rate.toFixed(1)}%`,\n            });\n          // .setTimestamp()\n          replyMessage = {\n            embeds: [embedReply],\n            fetchReply: true,\n          };\n\n          if (interaction.deferred && !interaction.replied)\n            await interaction\n              .editReply(replyMessage)\n              .then((reply) => {\n                this._logger.verbose(reply);\n              })\n              .catch((error) => {\n                Promise.reject(error);\n              });\n        } else {\n          let errorEmbed = new MessageEmbed()\n            .setColor('#FF0000')\n            .setTitle('Error')\n            .setDescription(`Stats not found for ${gamerTag}`);\n          replyMessage = {\n            embeds: [errorEmbed],\n            fetchReply: true,\n          };\n\n          await interaction\n            .editReply(replyMessage)\n            .then((reply) => {\n              this._logger.verbose(reply);\n            })\n            .catch((error) => {\n              Promise.reject(error);\n            });\n        }\n      } else {\n        const botUser = await this._userService\n          .user({\n            discord_user_id: userId,\n          })\n          .catch((error) => {\n            this._logger.error(error);\n          });\n\n        if (botUser) {\n          gamerTag = botUser.gamertag;\n          this._logger.debug(`gamerTag from botuser: ${gamerTag}`);\n\n          // TODO write query against HaloDotApi\n          const statsCSR = await this._haloDotApi\n            .requestPlayerStatsCSR(gamerTag, 'open')\n            .catch((error) => {\n              this._logger.error(error);\n            });\n\n          const statsRecord = await this._haloDotApi\n            .requestPlayerServiceRecord(gamerTag)\n            .catch((error) => {\n              this._logger.error(error);\n            });\n\n          if (\n            statsCSR &&\n            statsCSR.data &&\n            statsRecord &&\n            statsRecord.data &&\n            !interaction.replied\n          ) {\n            embedReply = new MessageEmbed()\n              .setColor('#CCCCFF')\n              .setThumbnail(statsCSR.data[0].response.current.tier_image_url)\n              .setTitle(gamerTag)\n              .setDescription(statsCSR.data[0].response.current.tier)\n              .addFields(\n                {\n                  name: `Kills`,\n                  value: ` ${statsRecord.data.summary.kills}`,\n                  inline: true,\n                },\n                {\n                  name: `Deaths`,\n                  value: ` ${statsRecord.data.summary.deaths}`,\n                  inline: true,\n                },\n                {\n                  name: `Assists`,\n                  value: ` ${statsRecord.data.summary.assists}`,\n                  inline: true,\n                },\n              )\n              .addFields(\n                {\n                  name: `KDA`,\n                  value: ` ${statsRecord.data.kda.toFixed(1)}`,\n                  inline: true,\n                },\n                {\n                  name: `KDR`,\n                  value: ` ${statsRecord.data.kdr.toFixed(1)}`,\n                  inline: true,\n                },\n                {\n                  name: `Matches Played`,\n                  value: ` ${statsRecord.data.matches_played}`,\n                  inline: true,\n                },\n              )\n              .setFooter({\n                text: `Time played: ${\n                  statsRecord.data.time_played.human\n                }. Wins: ${statsRecord.data.win_rate.toFixed(1)}%`,\n              }); // .setTimestamp()\n\n            replyMessage = {\n              embeds: [embedReply],\n              fetchReply: true,\n            };\n\n            if (interaction.deferred && !interaction.replied)\n              await interaction\n                .editReply(replyMessage)\n                .then((reply) => {\n                  this._logger.verbose(reply);\n                })\n                .catch((error) => {\n                  Promise.reject(error);\n                });\n          } else {\n            let errorEmbed = new MessageEmbed()\n              .setColor('#FF0000')\n              .setTitle('Error')\n              .setDescription(`Stats not found for ${gamerTag}`);\n            replyMessage = {\n              embeds: [errorEmbed],\n              fetchReply: true,\n            };\n\n            if (interaction.deferred && !interaction.replied)\n              await interaction\n                .editReply(replyMessage)\n                .then((reply) => {\n                  this._logger.verbose(reply);\n                })\n                .catch((error) => {\n                  Promise.reject(error);\n                });\n          }\n        } else {\n          embedReply = new MessageEmbed().setColor('#FF7F50').addFields({\n            name: `Error`,\n            value: `No Xbox Gametag registered for user`,\n          });\n\n          replyMessage = {\n            embeds: [embedReply],\n            fetchReply: true,\n          };\n\n          console.log('5');\n\n          if (interaction.deferred && !interaction.replied)\n            await interaction\n              .editReply(replyMessage)\n              .then((reply) => {\n                this._logger.verbose(reply);\n              })\n              .catch((error) => {\n                Promise.reject(error);\n              });\n        }\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsHelpDto.html":{"url":"classes/StatsHelpDto.html","title":"class - StatsHelpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsHelpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/help/help.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lang\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Select language', required: true})@Choice(Language)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/help/help.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice } from '@discord-nestjs/core';\n\nenum Language {\n  FI = 'fi',\n  EN = 'en',\n}\n\nexport class StatsHelpDto {\n  @Param({ description: 'Select language', required: true })\n  @Choice(Language)\n  lang: Language;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsHelpSubCommand.html":{"url":"classes/StatsHelpSubCommand.html","title":"class - StatsHelpSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsHelpSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/help/help.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/help/help.command.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/help/help.command.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: StatsHelpDto, interaction?: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/help/help.command.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                StatsHelpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport { CommandInteraction, MessageEmbed } from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { StatsHelpDto } from './help.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'help', description: 'READ ME' })\nexport class StatsHelpSubCommand\n  implements DiscordTransformedCommand\n{\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  constructor() {}\n\n  async handler(\n    @Payload() dto: StatsHelpDto,\n    interaction?: CommandInteraction,\n  ) {\n    try {\n      if (dto.lang == 'fi') {\n        const embedHelpFi = new MessageEmbed()\n          .setColor('#0099ff')\n          .setTitle('Ohjeet')\n          .setDescription(\n            'Ohjeistus alikomennoille /stats. ?:parametri: tarkoittaa että se on valinnainen.',\n          )\n          .addFields(\n            { name: 'help :lang:', value: 'Tulostaa tämän viestin' },\n            {\n              name: 'reg :gamertag: :allowlogging:',\n              value: 'Rekisteröi Xbox gamertägisi',\n            },\n            { name: 'update', value: 'Päivitä tilastot' },\n            {\n              name: 'get ?:gamertag:',\n              value:\n                'Tulostaa käyttäjän Halo Infinite tilastot tai hakee käyttäjän tilastot gamertagille',\n            },\n          )\n          .setFooter({\n            text: 'https://github.com/ex1tium/halofinland-discord-bot',\n          })\n          .setTimestamp();\n\n        return interaction\n          .reply({\n            embeds: [embedHelpFi],\n            ephemeral: true,\n          })\n          .catch((error) => {\n            Promise.reject(error);\n          });\n      } else {\n        const embedHelpEn = new MessageEmbed()\n          .setColor('#0099ff')\n          .setTitle('Help')\n          .setDescription(\n            'Help for subcommands of /stats. ?:param: means its optional.',\n          )\n          .addFields(\n            {\n              name: 'help :lang:',\n              value: 'Prints this message in chosen language',\n            },\n            {\n              name: 'reg :tag: :allowlogging:',\n              value: 'Registers your Xbox gamertag for stats',\n            },\n            { name: 'update', value: 'Updates latest stats from API' },\n            { name: 'get', value: 'Prints your stats or stats for gamertag' },\n          )\n          .setFooter({\n            text: 'https://github.com/ex1tium/halofinland-discord-bot',\n          })\n          .setTimestamp();\n\n        return interaction\n          .reply({\n            embeds: [embedHelpEn],\n            ephemeral: true,\n          })\n          .catch((error) => {\n            Promise.reject(error);\n          });\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsRegSubCommand.html":{"url":"classes/StatsRegSubCommand.html","title":"class - StatsRegSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsRegSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/register/register.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/register/register.command.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.command.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: RegisterDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/register/register.command.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { UserService } from 'src/services/user.service';\nimport { RegisterDto } from './register.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'reg', description: 'Register your Xbox Gamer tag' })\nexport class StatsRegSubCommand\n  implements DiscordTransformedCommand\n{\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  constructor(private _userService: UserService) {}\n\n  async handler(@Payload() dto: RegisterDto, interaction: CommandInteraction) {\n    try {\n      const gamerTag = dto.gamertag;\n      const allowLogging = dto.allowlogging;\n      this._logger.warn(`allowLogging: ${allowLogging}`);\n\n      const userId = interaction.user.id;\n      const userExists = await this._userService.user({\n        discord_user_id: userId,\n      });\n\n      let wasUpdated = false;\n\n      // this._logger.warn(`userExists: ${JSON.stringify(userExists)}`);\n\n      if (userExists && userExists.discord_user_id) {\n        this._userService.updateUser({\n          where: {\n            discord_user_id: userId,\n          },\n          data: {\n            gamertag: gamerTag,\n            allow_stats_logging: allowLogging ? 1 : 0,\n          },\n        });\n\n        wasUpdated = true;\n      } else {\n        this._userService.createUser({\n          discord_user_id: userId,\n          gamertag: gamerTag,\n          allow_stats_logging: allowLogging ? 1 : 0,\n        });\n      }\n\n      let embedReply: MessageEmbed;\n\n      if (wasUpdated) {\n        embedReply = new MessageEmbed().setColor('#DFFF00').addFields(\n          { name: `Old Gamertag`, value: `${userExists.gamertag}` },\n          { name: `New Gamertag`, value: `${gamerTag}` },\n          {\n            name: `Logging`,\n            value: `${allowLogging ? 'enabled' : 'disabled'}`,\n          },\n        );\n      } else {\n        embedReply = new MessageEmbed().setColor('#40E0D0').addFields(\n          { name: `Registered Xbox Gamertag`, value: `${gamerTag}` },\n          {\n            name: `Logging`,\n            value: `${allowLogging ? 'enabled' : 'disabled'}`,\n          },\n        );\n      }\n\n      const reply: InteractionReplyOptions = {\n        embeds: [embedReply],\n        ephemeral: true,\n      };\n\n      return interaction.reply(reply).catch((error) => {\n        Promise.reject(error);\n      });\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsUpdateSubCommand.html":{"url":"classes/StatsUpdateSubCommand.html","title":"class - StatsUpdateSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsUpdateSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/update/update.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/update/update.command.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(StatsUpdateSubCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/update/update.command.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: UpdateDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/update/update.command.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordCommand,\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { UserService } from 'src/services/user.service';\nimport { UpdateDto } from './update.dto';\n\n@UsePipes(TransformPipe)\n@SubCommand({\n  name: 'update',\n  description: 'Update your registered Xbox Gamer Tag',\n})\nexport class StatsUpdateSubCommand\n  implements DiscordTransformedCommand\n{\n  private _logger: Logger = new Logger(StatsUpdateSubCommand.name);\n\n  constructor(private _userService: UserService) {}\n\n  async handler(@Payload() dto: UpdateDto, interaction: CommandInteraction) {\n    try {\n      const gamerTag = dto.gamertag;\n      const userId = interaction.user.id;\n      const userExists = await this._userService.user({\n        discord_user_id: userId,\n      });\n      let embedReply: MessageEmbed;\n\n      if (userExists) {\n        this._userService.updateUser({\n          where: {\n            discord_user_id: userId,\n          },\n          data: {\n            gamertag: gamerTag,\n          },\n        });\n\n        embedReply = new MessageEmbed()\n          .setColor('#DFFF00')\n          // .setDescription('Gamertag Updated')\n          .addFields(\n            { name: `Old Gamertag`, value: `${userExists.gamertag}` },\n            { name: `New Gamertag`, value: `${gamerTag}` },\n          )\n          .setTimestamp();\n        const reply = {\n          embeds: [embedReply],\n        };\n\n        this._logger.verbose(JSON.stringify(dto));\n        this._logger.verbose(interaction);\n\n        return reply;\n      }\n\n      return 'use /stats reg :gamertag: command to register first';\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Summary.html":{"url":"interfaces/Summary.html","title":"interface - Summary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Summary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assists\n                                        \n                                \n                                \n                                        \n                                            betrayals\n                                        \n                                \n                                \n                                        \n                                            deaths\n                                        \n                                \n                                \n                                        \n                                            kills\n                                        \n                                \n                                \n                                        \n                                            medals\n                                        \n                                \n                                \n                                        \n                                            suicides\n                                        \n                                \n                                \n                                        \n                                            vehicles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assists:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        betrayals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        betrayals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deaths\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deaths:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kills\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kills:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suicides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suicides:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vehicles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vehicles:         Vehicles\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vehicles\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestCommand.html":{"url":"classes/TestCommand.html","title":"class - TestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/test.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordCommand\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/commands/test.command.ts:11\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handler\n                        \n                    \n                \n            \n            \n                \nhandler(interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/test.command.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\nimport { DiscordCommand } from '@discord-nestjs/core';\nimport { CommandInteraction } from 'discord.js';\nimport { ToJsonResponse } from 'src/models/interaction-toJSON.model';\n\n@Command({\n  name: 'test',\n  description: 'test a command',\n})\nexport class TestCommand implements DiscordCommand {\n  constructor() {} // private readonly _haloDotApi: HalodotapiService\n\n  handler(interaction: CommandInteraction): string {\n    // const isCommand = interaction.isCommand()\n    // // console.log('isCommand', isCommand)\n\n    // console.log('interaction.options', interaction.options)\n    // // {\n    // //   _group: null,\n    // //   _subcommand: null,\n    // //   _hoistedOptions: [ { name: 'animal', type: 'STRING', value: 'animal_dog' } ]\n    // // }\n\n    // const toJson = interaction.toJSON() as ToJsonResponse;\n    // console.log('interaction.toJSON', toJson)\n    // console.log('interaction.toString', interaction.toString())\n    // console.log('interaction.member', interaction.member)\n    // // console.log('interaction.token', interaction.token)\n    // // console.log('interaction.user', interaction.user)\n    // // console.log('interaction.user', interaction.reply('testing reply'))\n\n    // // {\n    // //   type: 'APPLICATION_COMMAND',\n    // //   id: '912663389724090379',\n    // //   applicationId: '911328079207624746',\n    // //   channelId: '911368720440496208',\n    // //   guildId: '910901692227256330',\n    // //   user: '181093139690422272',\n    // //   member: '181093139690422272',\n    // //   version: 1,\n    // //   memberPermissions: 2199023255551n,\n    // //   commandId: '912494585433952346',\n    // //   commandName: 'test',\n    // //   deferred: false,\n    // //   replied: false,\n    // //   ephemeral: null\n    // // }\n\n    // // console.log('interaction.command', interaction.command)\n\n    // // return this._haloDotApi.init();\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimePlayed.html":{"url":"interfaces/TimePlayed.html","title":"interface - TimePlayed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimePlayed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            human\n                                        \n                                \n                                \n                                        \n                                            seconds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        human\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        human:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seconds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seconds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToJsonResponse.html":{"url":"interfaces/ToJsonResponse.html","title":"interface - ToJsonResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToJsonResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interaction-toJSON.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            applicationId\n                                        \n                                \n                                \n                                        \n                                            channelId\n                                        \n                                \n                                \n                                        \n                                            commandId\n                                        \n                                \n                                \n                                        \n                                            commandName\n                                        \n                                \n                                \n                                        \n                                            deferred\n                                        \n                                \n                                \n                                        \n                                            ephemeral\n                                        \n                                \n                                \n                                        \n                                            guildId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            member\n                                        \n                                \n                                \n                                        \n                                            memberPermissions\n                                        \n                                \n                                \n                                        \n                                            replied\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        applicationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        applicationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commandId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commandId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commandName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commandName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deferred\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deferred:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ephemeral\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ephemeral:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guildId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guildId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        member\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        member:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        memberPermissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        memberPermissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replied\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replied:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"APPLICATION_COMMAND\" | \"PING\" | \"MESSAGE_COMPONENT\" | \"APPLICATION_COMMAND_AUTOCOMPLETE\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"APPLICATION_COMMAND\" | \"PING\" | \"MESSAGE_COMPONENT\" | \"APPLICATION_COMMAND_AUTOCOMPLETE\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ToJsonResponse {\n  type:\n    | 'APPLICATION_COMMAND'\n    | 'PING'\n    | 'MESSAGE_COMPONENT'\n    | 'APPLICATION_COMMAND_AUTOCOMPLETE';\n  id: string;\n  applicationId: string;\n  channelId: string;\n  guildId: string;\n  user: string;\n  member: string;\n  version: 1;\n  memberPermissions: number;\n  commandId: string;\n  commandName: string;\n  deferred: boolean;\n  replied: boolean;\n  ephemeral: null;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwitterService.html":{"url":"injectables/TwitterService.html","title":"injectable - TwitterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TwitterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/twitter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _client\n                            \n                            \n                                    Private\n                                _haloSupportTweets\n                            \n                            \n                                    Private\n                                    Readonly\n                                _logger\n                            \n                            \n                                    Private\n                                _twitterAllowedSearchAuthorIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                constructEmbedTweetMessage\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                next\n                            \n                            \n                                    Async\n                                pollHaloSupportTweets\n                            \n                            \n                                    Async\n                                recordTweet\n                            \n                            \n                                    Async\n                                sendChannel\n                            \n                            \n                                    Async\n                                upsertTweet\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newTweets$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _prismaService: PrismaService, _discordProvider: DiscordClientProvider)\n                    \n                \n                        \n                            \n                                Defined in src/services/twitter.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _discordProvider\n                                                  \n                                                        \n                                                                    DiscordClientProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        constructEmbedTweetMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    constructEmbedTweetMessage(tweet: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tweet\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(tweets: TweetV2[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tweets\n                                    \n                                            TweetV2[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        pollHaloSupportTweets\n                        \n                    \n                \n            \n            \n                \n                    \n                    pollHaloSupportTweets()\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        recordTweet\n                        \n                    \n                \n            \n            \n                \n                    \n                    recordTweet(tweetData: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tweetData\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendChannel\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendChannel(channelId: string, tweet: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tweet\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        upsertTweet\n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertTweet(tweetData: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tweetData\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TwitterApi\n\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _haloSupportTweets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    null,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TwitterService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _twitterAllowedSearchAuthorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newTweets$\n                    \n                \n\n                \n                    \n                        getnewTweets$()\n                    \n                \n                            \n                                \n                                    Defined in src/services/twitter.service.ts:60\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  ETwitterStreamEvent,\n  TweetStream,\n  TweetV2,\n  TweetV2SingleResult,\n  TwitterApi,\n  TwitterApiv2,\n} from 'twitter-api-v2';\n\nimport { BehaviorSubject, from, Observable } from 'rxjs';\nimport { PrismaService } from './prisma.service';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { DiscordClientProvider } from '@discord-nestjs/core';\nimport { TextChannel, MessageEmbed } from 'discord.js';\nimport { format } from 'date-fns';\n\n@Injectable()\nexport class TwitterService {\n  private readonly _logger = new Logger(TwitterService.name);\n  private _client: TwitterApi;\n\n  private _haloSupportTweets: BehaviorSubject = new BehaviorSubject(\n    null,\n  );\n\n  private _twitterAllowedSearchAuthorIds: string[] = [];\n\n  constructor(\n    private _configService: ConfigService,\n    private _prismaService: PrismaService,\n    private _discordProvider: DiscordClientProvider,\n  ) {\n    this._twitterAllowedSearchAuthorIds = JSON.parse(\n      this._configService.get('twitterAllowedSearchAuthorIds'),\n    );\n    // console.debug('twitterAllowedSearchAuthorIds', this.twitterAllowedSearchAuthorIds)\n\n    this._client = new TwitterApi(\n      this._configService.get('twitterBearerToken'),\n    );\n\n    this._logger.debug(`twitter client:  ${JSON.stringify(this._client)}`);\n  }\n\n  async init() {\n    try {\n      const user = await this._client.v2.user('1093614084807741440');\n      this._logger.verbose(`twitter client: ${JSON.stringify(user)}`);\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  get newTweets$() {\n    return this._haloSupportTweets.asObservable();\n  }\n\n  next(tweets: TweetV2[]) {\n    this._haloSupportTweets.next([...tweets]);\n  }\n\n  async sendChannel(channelId: string, tweet: TweetV2) {\n    try {\n      const channel = (await this._discordProvider\n        .getClient()\n        .channels.fetch(channelId)) as TextChannel;\n      const createMessage = await this.constructEmbedTweetMessage(tweet);\n\n      if (createMessage) {\n        return channel.send({ embeds: [createMessage] });\n      } else {\n        throw new Error(`Problem sending message to channel ${channel.name}.`);\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  async constructEmbedTweetMessage(tweet: TweetV2) {\n    try {\n      const embedTweet = new MessageEmbed()\n        // .setTitle('Tweet')\n        .setURL(`https://twitter.com/i/web/status/${tweet.id}`)\n        .setAuthor({\n          name: 'From @HaloSupport',\n          iconURL: null,\n          url: `https://twitter.com/HaloSupport`,\n        })\n        // .setDescription('New Tweet')\n        .addFields(\n          {\n            name: 'Tweet',\n            value: tweet.text,\n          },\n          {\n            name: 'Actions',\n            value: `[Open Tweet](https://twitter.com/i/web/status/${tweet.id})`,\n          },\n        )\n        .setTimestamp(new Date(tweet.created_at))\n        .setFooter({\n          text: format(new Date(tweet.created_at), 'HH:mm'),\n        });\n      // .setURL(`https://twitter.com/i/web/status/${tweet.id}`)\n      return embedTweet;\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  // @Cron(CronExpression.EVERY_5_MINUTES)\n  async pollHaloSupportTweets() {\n    try {\n      const search = await this._client.v2.search(\n        'from:HaloSupport (\"patch\" OR \"release\" OR \"update\" OR \"problem\" OR \"issue\")',\n        {\n          'tweet.fields': ['created_at', 'id', 'author_id', 'source'],\n        },\n      );\n\n      this._logger.debug('searching for new tweets');\n\n      // this._logger.debug('search', JSON.stringify(search))\n      const newTweets: TweetV2[] = [];\n\n      const sortData = search.data.data.sort((a, b) => {\n        return (\n          new Date(a.created_at).valueOf() - new Date(b.created_at).valueOf()\n        );\n      });\n\n      for (let i = 0; i  id == tweet.author_id,\n          )\n        ) {\n          const found = await this._prismaService.tweet.findUnique({\n            where: {\n              tweet_id: tweet.id,\n            },\n          });\n\n          if (!found) {\n            this.recordTweet(tweet);\n            newTweets.push(tweet);\n            this.sendChannel('911189130543788062', tweet);\n            console.log('found new tweet', tweet);\n          }\n        }\n      }\n      this.next(newTweets);\n      return newTweets;\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  async recordTweet(tweetData: TweetV2) {\n    try {\n      const record = await this._prismaService.tweet.create({\n        data: {\n          tweet_id: tweetData.id,\n          text: tweetData.text,\n          author_id: tweetData.author_id,\n          created_at: tweetData.created_at,\n        },\n      });\n\n      return record;\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  async upsertTweet(tweetData: TweetV2) {\n    try {\n      const tweet = await this._prismaService.tweet.upsert({\n        where: {\n          tweet_id: tweetData.id,\n        },\n        update: {},\n        create: {\n          tweet_id: tweetData.id,\n          text: tweetData.text,\n          author_id: tweetData.author_id,\n          created_at: tweetData.created_at,\n        },\n      });\n\n      // this._logger.verbose(`tweet: ${JSON.stringify(tweet)}`)\n      return tweet;\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDto.html":{"url":"classes/UpdateDto.html","title":"class - UpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/update/update.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/update/update.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class UpdateDto {\n  @Param({ description: 'Xbox Gamer Tag', required: true })\n  gamertag: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                user\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: Prisma.BotUserCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.BotUserCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(where: Prisma.BotUserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.BotUserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(userWhereUniqueInput: Prisma.BotUserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.BotUserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { BotUser, Prisma } from '@prisma/client';\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async user(\n    userWhereUniqueInput: Prisma.BotUserWhereUniqueInput,\n  ): Promise {\n    return this.prisma.botUser.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.BotUserWhereUniqueInput;\n    where?: Prisma.BotUserWhereInput;\n    orderBy?: Prisma.BotUserOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.botUser.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createUser(data: Prisma.BotUserCreateInput): Promise {\n    return this.prisma.botUser.create({\n      data,\n    });\n  }\n\n  async updateUser(params: {\n    where: Prisma.BotUserWhereUniqueInput;\n    data: Prisma.BotUserUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.botUser.update({\n      data,\n      where,\n    });\n  }\n\n  async deleteUser(where: Prisma.BotUserWhereUniqueInput): Promise {\n    return this.prisma.botUser.delete({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Vehicles.html":{"url":"interfaces/Vehicles.html","title":"interface - Vehicles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Vehicles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroys\n                                        \n                                \n                                \n                                        \n                                            hijacks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroys:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hijacks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hijacks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/stats/get/get.command.ts\n            \n            class\n            StatsGetSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/get/get.dto.ts\n            \n            class\n            GetDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/stats/help/help.command.ts\n            \n            class\n            StatsHelpSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/help/help.dto.ts\n            \n            class\n            StatsHelpDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/stats/register/register.command.ts\n            \n            class\n            StatsRegSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/register/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/commands/stats/stats.command.ts\n            \n            class\n            StatsBaseCommand\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/commands/stats/stats.dto.ts\n            \n            class\n            StatsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commands/stats/update/update.command.ts\n            \n            class\n            StatsUpdateSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/update/update.dto.ts\n            \n            class\n            UpdateDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/test.command.ts\n            \n            class\n            TestCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/halo-dot-api/halo-dot-api.controller.ts\n            \n            controller\n            HaloDotApiController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/oauth2-discord/oauth2-discord.controller.ts\n            \n            controller\n            Oauth2DiscordController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exception-filters/discord-command-validation.ts\n            \n            class\n            CommandValidationFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exception-filters/globalExceptions.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/message-fom-user.guard.ts\n            \n            class\n            MessageFromUserGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/halo-dot-api.middleware.ts\n            \n            injectable\n            HaloDotApiMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/interaction-toJSON.model.ts\n            \n            interface\n            ToJsonResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/models/sub-command-options.model.ts\n            \n            interface\n            Choice\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/sub-command-options.model.ts\n            \n            interface\n            DefineDiscordCommand\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/pipes/message-to-upper.pipe.ts\n            \n            class\n            MessageToUpperPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/discord-api.service.ts\n            \n            injectable\n            DiscordApiService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Additional\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            AllTime\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            CsrsRootObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Current\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            QueueGroups\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Season\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/halodotapi.service.ts\n            \n            injectable\n            HaloDotApiService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Additional\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Assists\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Breakdowns\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Damage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Kills\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Matches\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            ServiceRecord\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Shots\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Summary\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            TimePlayed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Vehicles\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/twitter.service.ts\n            \n            injectable\n            TwitterService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @discord-nestjs/common : ^2.0.16\n        \n            @discord-nestjs/core : ^2.1.12\n        \n            @discordjs/rest : ^0.3.0\n        \n            @nestjs/axios : ^0.0.3\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/schedule : ^1.0.2\n        \n            @prisma/client : ^3.8.1\n        \n            date-fns : ^2.26.0\n        \n            discord-api-types : ^0.26.1\n        \n            discord.js : ^13.6.0\n        \n            forever-monitor : ^3.0.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.4.0\n        \n            twitter-api-v2 : ^1.6.5\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Language   (src/.../help.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commands/stats/help/help.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Language\n                    \n                \n                        \n                            \n                                 FI\n                            \n                        \n                        \n                            \n                                Value : fi\n                            \n                        \n                        \n                            \n                                 EN\n                            \n                        \n                        \n                            \n                                Value : en\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n  \n  \n\n  Discord bot for Halo Finland  community .\n  \n  \n\n  Built with a progressive Node.js framework called  Nest\n    \n\n\n\n\n\n\n\n \n  \n\n  \n\nDescription\nHalo Finland Discord bot. Production ready versions start @ 1.0.0\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nThis project uses Nest framework.\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021-2022 Halo Finland Community\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HaloDotApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Oauth2DiscordModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HaloDotApiModule\n\n\n\ncluster_HaloDotApiModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nHaloDotApiModule\n\nHaloDotApiModule\n\nHaloDotApiModule -->\n\nHaloDotApiModule->HaloDotApiModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHaloDotApiModule->AppModule\n\n\n\n\n\nOauth2DiscordModule\n\nOauth2DiscordModule\n\nAppModule -->\n\nOauth2DiscordModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHaloDotApiModule -->\n\nSharedModule->HaloDotApiModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDiscordCommandProvider \n\nDiscordCommandProvider \n\nDiscordCommandProvider  -->\n\nSharedModule->DiscordCommandProvider \n\n\n\n\n\nHaloDotApiService \n\nHaloDotApiService \n\nHaloDotApiService  -->\n\nSharedModule->HaloDotApiService \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\n\n\nTwitterService \n\nTwitterService \n\nTwitterService  -->\n\nSharedModule->TwitterService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nSharedModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDiscordApiService\n\nDiscordApiService\n\nAppModule -->\n\nDiscordApiService->AppModule\n\n\n\n\n\nHaloDotApiService\n\nHaloDotApiService\n\nHaloDotApiModule -->\n\nHaloDotApiService->HaloDotApiModule\n\n\n\nSharedModule -->\n\nHaloDotApiService->SharedModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\nTwitterService\n\nTwitterService\n\nSharedModule -->\n\nTwitterService->SharedModule\n\n\n\n\n\nUserService\n\nUserService\n\nSharedModule -->\n\nUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    22 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
