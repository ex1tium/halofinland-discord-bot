var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Additional.html",[0,0.19,1,0.932]],["body/interfaces/Additional.html",[0,0.358,1,1.605,2,0.956,3,0.181,4,0.158,5,0.158,6,2.076,7,0.229,8,0.669,9,1.189,10,3.416,11,1.234,12,0.337,13,0.019,14,1.662,15,1.162,16,0.866,17,2.214,18,0.317,19,2.929,20,1.742,21,3.319,22,3.319,23,3.319,24,3.319,25,3.319,26,3.319,27,3.319,28,3.319,29,3.319,30,2.604,31,2.231,32,2.214,33,2.604,34,2.076,35,1.743,36,2.076,37,2.076,38,2.214,39,2.214,40,1.567,41,2.214,42,1.953,43,0.866,44,0.013,45,0.013]],["title/interfaces/Additional-1.html",[0,0.159,1,0.777,46,2.15]],["body/interfaces/Additional-1.html",[0,0.375,1,1.574,2,0.911,3,0.173,4,0.151,5,0.151,7,0.218,8,0.648,9,1.166,11,1.049,12,0.241,13,0.019,14,1.673,15,1.107,16,0.826,18,0.332,43,1.267,44,0.013,45,0.013,47,1.493,48,1.493,49,1.574,50,2.177,51,1.574,52,1.574,53,2.177,54,2.218,55,1.493,56,2.218,57,1.574,58,1.574,59,1.574,60,2.177,61,1.574,62,1.574,63,1.574,64,2.177,65,1.574,66,1.574,67,1.574,68,1.574,69,1.574,70,1.574,71,1.574,72,1.574,73,1.574,74,1.574,75,1.574,76,2.07,77,1.493,78,1.574,79,1.574,80,1.574,81,2.177,82,1.92,83,1.574,84,1.574,85,1.493,86,1.493,87,1.574,88,1.574,89,1.574,90,1.574,91,1.418]],["title/classes/AllExceptionsFilter.html",[92,0.331,93,2.371]],["body/classes/AllExceptionsFilter.html",[3,0.174,4,0.152,5,0.152,7,0.219,8,0.651,12,0.372,13,0.019,18,0.174,20,1.114,31,1.427,40,1.503,44,0.013,45,0.013,92,0.342,93,3.312,94,1.357,95,3.481,96,3.284,97,2.259,98,5.851,99,2.559,100,2.424,101,1.975,102,3.12,103,2.259,104,3.823,105,6.746,106,1.624,107,5.166,108,1.833,109,1.434,110,1.744,111,2.424,112,1.874,113,2.076,114,3.598,115,5.166,116,5.851,117,6.267,118,3.823,119,4.437,120,1.229,121,3.598,122,1.123,123,5.166,124,4.8,125,1.17,126,1.114,127,3.823,128,2.123,129,3.823,130,3.823,131,2.451,132,2.663,133,1.874,134,3.823,135,3.823,136,5.166,137,3.284,138,2.663,139,3.823,140,3.823,141,3.284,142,2.741,143,3.823,144,3.823,145,3.823,146,3.823,147,3.823,148,3.823,149,5.166,150,3.823,151,3.823,152,3.823,153,3.823,154,3.823,155,2.389,156,3.823,157,3.823,158,3.823,159,3.823,160,3.823,161,3.823]],["title/interfaces/AllTime.html",[0,0.19,30,1.812]],["body/interfaces/AllTime.html",[0,0.347,1,1.417,2,0.85,3,0.161,4,0.141,5,0.141,6,1.845,7,0.203,8,0.617,9,0.661,10,2.975,11,1.24,12,0.45,13,0.019,14,1.673,15,1.032,16,0.77,17,1.967,18,0.307,19,2.756,20,1.921,21,3.661,22,3.661,23,3.661,24,3.661,25,3.661,26,3.661,27,3.661,28,3.661,29,3.661,30,2.756,31,2.099,32,1.967,33,2.403,34,1.845,35,1.549,36,1.845,37,1.845,38,1.967,39,1.967,40,1.392,41,1.967,42,1.736,43,0.77,44,0.012,45,0.012]],["title/controllers/AppController.html",[40,1.453,162,2.576]],["body/controllers/AppController.html",[3,0.14,4,0.122,5,0.122,7,0.176,12,0.195,13,0.019,18,0.14,40,1.744,44,0.011,45,0.011,92,0.275,97,1.345,99,2.493,100,1.275,101,1.498,102,1.423,103,1.345,106,1.582,109,0.854,111,1.275,113,2.023,120,1.832,121,3.091,122,1.368,125,0.941,126,0.897,128,2.465,132,2.143,133,1.508,138,3.627,155,1.423,162,3.091,163,1.972,164,2.642,165,6.297,166,5.707,167,2.475,168,5.7,169,5.7,170,3.077,171,4.438,172,5.207,173,4.438,174,3.091,175,3.077,176,2.641,177,4.438,178,3.077,179,4.438,180,3.077,181,3.077,182,1.174,183,3.098,184,3.077,185,4.438,186,1.972,187,2.641,188,2.642,189,2.642,190,3.4,191,2.642,192,2.143,193,3.077,194,4.438,195,5.207,196,3.077,197,3.077,198,3.077,199,3.077,200,3.077,201,2.795,202,3.077,203,3.97,204,3.077,205,2.642,206,3.077,207,4.472,208,3.077,209,2.356,210,3.077,211,3.077,212,3.077,213,2.642,214,3.077,215,2.642,216,1.83,217,2.838,218,2.641,219,2.356,220,4.472,221,2.642,222,0.854,223,2.642,224,2.642,225,3.077,226,2.465,227,3.077,228,3.077,229,3.077,230,3.077,231,3.077,232,2.642,233,2.642,234,3.077,235,2.642,236,3.077,237,3.077,238,1.972,239,3.077,240,1.83,241,2.642,242,3.077,243,3.077,244,3.077,245,3.077,246,3.091,247,3.077,248,3.077,249,2.356,250,3.077,251,2.642,252,3.077,253,3.077,254,1.602,255,1.275,256,3.077,257,3.077,258,3.077]],["title/modules/AppModule.html",[16,0.804,259,2.371]],["body/modules/AppModule.html",[3,0.157,4,0.137,5,0.191,13,0.019,16,1.047,18,0.157,44,0.012,45,0.012,92,0.537,93,3.088,119,2.965,120,1.783,122,1.6,125,1.056,126,1.006,162,3.864,163,3.088,167,2.18,174,3.355,182,0.913,187,3.891,188,2.965,189,2.965,190,2.644,192,2.405,259,4.515,260,2.054,261,3.088,262,2.965,263,2.965,264,2.965,265,4.302,266,4.302,267,3.689,268,2.644,269,2.405,270,3.453,271,4.137,272,4.765,273,3.453,274,5.423,275,3.556,276,2.054,277,4.137,278,3.453,279,4.817,280,4.765,281,2.213,282,3.453,283,2.965,284,4.137,285,3.453,286,2.405,287,3.453,288,4.817,289,3.453,290,3.453,291,2.965,292,6.003,293,6.314,294,3.453,295,3.453,296,2.965,297,2.644,298,3.453,299,2.644,300,2.965,301,3.453,302,3.453,303,3.453,304,3.453,305,3.453,306,3.453,307,3.453,308,1.289,309,4.137,310,4.817,311,3.864,312,5.617,313,6.003,314,3.453,315,3.453,316,2.965,317,3.453,318,2.644,319,2.965,320,3.453,321,2.965,322,2.965]],["title/interfaces/Assists.html",[0,0.19,56,1.312]],["body/interfaces/Assists.html",[0,0.373,1,1.447,2,0.885,3,0.168,4,0.147,5,0.147,7,0.212,8,0.635,9,0.688,11,0.846,12,0.365,13,0.019,14,1.679,15,1.075,16,0.802,18,0.33,43,1.248,44,0.012,45,0.012,47,1.45,48,1.45,49,1.528,50,2.144,51,1.528,52,1.528,53,2.144,54,2.191,55,1.45,56,2.294,57,1.528,58,1.528,59,1.528,60,2.144,61,1.528,62,1.528,63,1.528,64,2.144,65,1.528,66,1.528,67,1.528,68,1.528,69,1.528,70,1.528,71,1.528,72,1.528,73,2.558,74,2.558,75,2.558,76,2.038,77,1.45,78,1.528,79,1.528,80,1.528,81,2.144,82,1.882,83,1.528,84,1.528,85,1.45,86,1.45,87,1.528,88,1.528,89,1.528,90,1.528,91,1.377]],["title/interfaces/Breakdowns.html",[0,0.19,81,1.38]],["body/interfaces/Breakdowns.html",[0,0.373,1,1.447,2,0.885,3,0.168,4,0.147,5,0.147,7,0.212,8,0.635,9,0.688,11,0.846,12,0.365,13,0.019,14,1.67,15,1.075,16,0.802,18,0.33,43,1.248,44,0.012,45,0.012,47,1.45,48,1.45,49,1.528,50,2.144,51,1.528,52,1.528,53,2.144,54,2.504,55,1.45,56,2.504,57,1.528,58,1.528,59,1.528,60,2.144,61,1.528,62,1.528,63,1.528,64,2.144,65,1.528,66,1.528,67,1.528,68,1.528,69,1.528,70,1.528,71,1.528,72,1.528,73,1.528,74,1.528,75,1.528,76,2.468,77,1.45,78,1.528,79,1.528,80,1.528,81,2.305,82,1.882,83,1.528,84,1.528,85,1.45,86,1.45,87,1.528,88,1.528,89,1.528,90,1.528,91,1.377]],["title/interfaces/Choice.html",[0,0.19,323,1.812]],["body/interfaces/Choice.html",[0,0.319,2,1.221,3,0.232,4,0.202,5,0.202,7,0.292,8,0.782,11,1.249,12,0.426,13,0.018,14,1.107,18,0.283,20,2.034,44,0.015,45,0.015,109,1.987,217,2.227,222,1.414,323,3.285,324,3.547,325,3.9,326,3.982,327,3.547,328,2.652,329,3.982,330,4.373,331,3.9]],["title/classes/CommandValidationFilter.html",[92,0.331,332,2.2]],["body/classes/CommandValidationFilter.html",[3,0.18,4,0.158,5,0.158,7,0.228,8,0.667,12,0.336,13,0.019,18,0.18,20,1.544,44,0.013,45,0.013,92,0.474,94,1.408,95,3.312,97,2.316,99,2.607,100,2.47,101,1.788,102,3.065,106,1.471,108,1.408,109,1.471,110,1.34,111,2.47,112,1.945,113,2.116,114,3.689,120,1.275,122,1.383,125,1.214,126,1.156,142,2.316,155,2.45,167,2.343,182,1.049,201,1.835,203,2.764,217,2.607,246,2.764,332,3.151,333,3.822,334,3.408,335,5.963,336,3.968,337,3.968,338,6.362,339,5.121,340,6.362,341,3.968,342,5.297,343,3.151,344,3.968,345,2.361,346,1.835,347,2.764,348,3.968,349,3.408,350,2.204,351,2.361,352,3.408,353,3.968,354,2.544,355,3.968,356,3.151,357,3.968,358,3.968,359,3.968,360,3.968,361,3.968,362,3.968,363,2.759,364,2.764]],["title/interfaces/CsrsRootObject.html",[0,0.19,42,1.812]],["body/interfaces/CsrsRootObject.html",[0,0.358,1,1.784,2,0.956,3,0.181,4,0.158,5,0.158,6,2.076,7,0.229,8,0.669,9,0.744,10,3.124,11,1.215,12,0.337,13,0.019,14,1.656,15,1.162,16,0.866,17,2.214,18,0.317,19,2.929,20,1.742,21,3.319,22,3.319,23,3.319,24,3.319,25,3.319,26,3.319,27,3.319,28,3.319,29,3.319,30,2.604,31,2.231,32,2.214,33,3.124,34,2.076,35,1.743,36,2.076,37,2.076,38,2.214,39,2.214,40,1.567,41,2.214,42,2.604,43,1.385,44,0.013,45,0.013]],["title/interfaces/Current.html",[0,0.19,19,1.812]],["body/interfaces/Current.html",[0,0.347,1,1.417,2,0.85,3,0.161,4,0.141,5,0.141,6,1.845,7,0.203,8,0.617,9,0.661,10,2.975,11,1.24,12,0.45,13,0.019,14,1.673,15,1.032,16,0.77,17,1.967,18,0.307,19,2.975,20,1.921,21,3.661,22,3.661,23,3.661,24,3.661,25,3.661,26,3.661,27,3.661,28,3.661,29,3.661,30,2.403,31,2.099,32,1.967,33,2.403,34,1.845,35,1.549,36,1.845,37,1.845,38,1.967,39,1.967,40,1.392,41,1.967,42,1.736,43,0.77,44,0.012,45,0.012]],["title/interfaces/Damage.html",[0,0.19,60,1.38]],["body/interfaces/Damage.html",[0,0.373,1,1.447,2,0.885,3,0.168,4,0.147,5,0.147,7,0.212,8,0.635,9,0.688,11,0.846,12,0.365,13,0.019,14,1.679,15,1.075,16,0.802,18,0.33,43,1.248,44,0.012,45,0.012,47,1.45,48,1.45,49,1.528,50,2.144,51,1.528,52,1.528,53,2.144,54,2.191,55,1.45,56,2.191,57,1.528,58,1.528,59,1.528,60,2.305,61,2.558,62,2.558,63,2.558,64,2.144,65,1.528,66,1.528,67,1.528,68,1.528,69,1.528,70,1.528,71,1.528,72,1.528,73,1.528,74,1.528,75,1.528,76,2.038,77,1.45,78,1.528,79,1.528,80,1.528,81,2.144,82,1.882,83,1.528,84,1.528,85,1.45,86,1.45,87,1.528,88,1.528,89,1.528,90,1.528,91,1.377]],["title/interfaces/Data.html",[0,0.19,43,0.804]],["body/interfaces/Data.html",[0,0.367,1,1.375,2,0.803,3,0.152,4,0.133,5,0.133,7,0.192,8,0.594,9,0.625,11,0.791,12,0.444,13,0.019,14,1.676,15,0.976,16,0.728,18,0.325,43,1.287,44,0.012,45,0.012,47,1.316,48,1.316,49,1.387,50,2.037,51,1.387,52,1.387,53,2.536,54,2.102,55,1.316,56,2.102,57,1.387,58,1.387,59,1.387,60,2.536,61,1.387,62,1.387,63,1.387,64,2.536,65,1.387,66,1.387,67,1.387,68,1.387,69,1.387,70,1.387,71,1.387,72,1.387,73,1.387,74,1.387,75,1.387,76,1.936,77,1.316,78,1.387,79,1.387,80,1.387,81,2.536,82,2.211,83,1.387,84,1.387,85,2.328,86,2.328,87,2.454,88,2.454,89,2.454,90,2.454,91,1.25]],["title/interfaces/DefineDiscordCommand.html",[0,0.19,326,2.371]],["body/interfaces/DefineDiscordCommand.html",[0,0.296,2,1.082,3,0.205,4,0.179,5,0.179,7,0.259,8,0.725,11,1.22,12,0.473,13,0.019,14,1.379,18,0.262,20,1.315,44,0.014,45,0.014,109,1.917,110,2.497,217,1.973,222,1.856,323,3.276,324,3.142,325,3.455,326,4.428,327,4.656,328,3.482,329,4.528,330,5.741,331,5.12]],["title/injectables/DiscordApiService.html",[187,2.2,365,1.453]],["body/injectables/DiscordApiService.html",[3,0.073,4,0.064,5,0.064,7,0.092,8,0.337,9,0.949,11,1.072,12,0.445,13,0.019,18,0.073,20,1.296,31,1.792,43,0.87,44,0.007,45,0.007,46,3.544,92,0.144,99,1.944,100,1.423,101,0.903,102,1.588,103,1.17,106,1.479,108,1.219,109,1.909,110,1.352,111,1.423,112,0.788,113,1.578,120,1.712,122,1.043,124,1.231,125,0.492,128,2.224,133,0.788,142,2.099,155,2.22,167,2.354,182,1.059,186,1.03,187,1.591,201,1.588,215,2.95,216,2.044,217,2.855,218,2.855,220,1.38,222,1.874,224,3.439,226,1.908,238,3.416,240,0.956,241,4.122,254,1.789,255,2.53,275,2.85,276,0.956,277,2.297,281,1.03,308,1.495,318,3.406,324,1.119,326,3.262,327,4.172,328,2.65,331,2.049,343,2.855,363,1.789,364,2.393,365,1.051,366,0.893,367,4.752,368,1.38,369,3.435,370,3.435,371,4.446,372,4.004,373,1.607,374,3.897,375,3.067,376,2.675,377,2.675,378,4.04,379,3.406,380,2.631,381,2.95,382,3.097,383,3.435,384,2.297,385,1.607,386,2.049,387,2.297,388,2.382,389,3.067,390,2.675,391,1.607,392,1.607,393,2.297,394,3.439,395,2.049,396,3.435,397,1.607,398,2.675,399,2.393,400,1.607,401,4.8,402,1.607,403,1.863,404,2.297,405,4.446,406,2.789,407,2.675,408,2.675,409,2.297,410,2.631,411,2.675,412,2.675,413,1.607,414,1.607,415,2.95,416,1.38,417,1.607,418,1.38,419,1.38,420,2.108,421,4.446,422,1.607,423,2.675,424,1.607,425,1.38,426,1.607,427,2.675,428,2.675,429,2.297,430,1.607,431,1.607,432,1.607,433,1.607,434,2.95,435,2.95,436,1.607,437,1.607,438,2.675,439,2.95,440,1.607,441,1.607,442,1.607,443,1.908,444,1.908,445,2.675,446,1.119,447,2.316,448,1.591,449,1.485,450,3.435,451,1.119,452,1.38,453,1.38,454,1.03,455,1.607,456,1.607,457,1.119,458,1.863,459,2.297,460,1.119,461,1.607,462,1.38,463,1.119,464,1.38,465,1.38,466,1.231,467,1.38,468,1.119,469,1.607,470,1.119,471,1.607,472,1.231,473,1.607,474,2.675,475,1.607,476,1.607,477,1.607,478,1.607,479,1.607,480,1.607,481,1.607,482,1.38,483,1.607]],["title/injectables/ExampleMiddleWare.html",[365,1.453,484,2.833]],["body/injectables/ExampleMiddleWare.html",[3,0.205,4,0.179,5,0.179,7,0.259,12,0.366,13,0.019,18,0.205,31,2.495,44,0.014,45,0.014,92,0.404,97,1.973,100,2.386,101,1.944,103,1.973,106,1.599,108,2.044,109,1.599,110,1.944,111,2.769,113,1.601,120,1.45,121,3.142,122,1.252,125,1.38,131,2.892,365,2.264,366,2.506,406,4.919,460,4.012,484,4.412,485,3.875,486,4.511,487,4.511,488,5.76,489,5.45,490,5.741,491,6.685,492,4.511,493,3.455,494,5.76,495,3.455,496,4.511,497,4.511,498,4.947,499,4.511,500,4.511,501,4.511,502,4.511,503,4.511]],["title/classes/GetDto.html",[92,0.331,504,2.576]],["body/classes/GetDto.html",[3,0.226,4,0.197,5,0.197,7,0.285,8,0.77,9,1.237,11,1.027,12,0.315,13,0.019,18,0.226,44,0.015,45,0.015,92,0.444,94,1.762,106,1.378,122,1.079,126,1.447,176,2.953,182,1.313,222,1.378,308,1.853,323,2.433,328,3.185,420,2.534,447,3.185,448,3.639,449,3.397,463,4.617,504,4.26,505,4.264,506,3.458,507,4.964,508,3.458,509,4.264,510,6.116,511,4.964,512,4.964]],["title/injectables/HaloDotApiService.html",[365,1.453,513,2.2]],["body/injectables/HaloDotApiService.html",[3,0.1,4,0.088,5,0.088,7,0.127,8,0.436,9,1.121,11,1.114,12,0.401,13,0.019,18,0.157,20,0.644,31,1.291,34,2.892,35,2.109,36,2.512,37,2.512,44,0.009,45,0.009,92,0.497,99,2.816,100,1.766,101,1.168,102,1.971,103,1.513,106,1.668,108,1.513,109,1.184,110,1.439,111,0.915,112,1.083,113,1.513,120,2.069,122,1.138,125,0.676,132,2.969,133,1.695,142,2.627,155,2.568,167,2.427,186,1.417,201,1.971,209,4.446,218,2.87,222,1.184,226,1.921,240,2.058,254,2.22,255,2.618,275,3.092,276,1.315,281,1.417,343,2.058,363,2.22,365,1.36,366,1.227,374,3.694,375,3.265,379,1.692,380,4.254,384,4.143,395,3.694,406,4.401,410,1.692,415,3.662,418,4.498,419,1.898,420,1.766,434,2.971,435,2.971,439,2.971,443,2.368,444,2.368,482,1.898,493,1.692,513,3.115,514,1.898,515,3.459,516,3.459,517,3.459,518,3.694,519,4.263,520,4.263,521,4.824,522,4.143,523,3.459,524,3.459,525,2.21,526,3.459,527,3.459,528,2.21,529,2.21,530,4.824,531,2.971,532,2.21,533,4.143,534,6.008,535,2.971,536,2.21,537,4.824,538,2.21,539,1.898,540,3.459,541,2.21,542,2.971,543,4.263,544,2.971,545,5.236,546,2.21,547,4.263,548,2.21,549,2.21,550,2.21,551,2.21,552,2.21,553,2.21,554,2.21,555,2.21,556,2.21,557,4.263,558,5.553,559,3.459,560,2.21,561,3.459,562,3.459,563,2.21,564,2.21,565,3.459,566,1.898,567,2.21,568,2.21,569,2.21]],["title/interfaces/Kills.html",[0,0.19,54,1.312]],["body/interfaces/Kills.html",[0,0.372,1,1.436,2,0.872,3,0.165,4,0.144,5,0.144,7,0.209,8,0.629,9,0.678,11,0.838,12,0.39,13,0.019,14,1.681,15,1.06,16,0.79,18,0.329,43,1.239,44,0.012,45,0.012,47,1.429,48,1.429,49,1.506,50,2.128,51,1.506,52,1.506,53,2.128,54,2.283,55,1.429,56,2.178,57,1.506,58,1.506,59,1.506,60,2.128,61,1.506,62,1.506,63,1.506,64,2.128,65,1.506,66,1.506,67,1.506,68,1.506,69,2.543,70,2.543,71,2.543,72,2.543,73,1.506,74,1.506,75,1.506,76,2.023,77,1.429,78,1.506,79,1.506,80,1.506,81,2.128,82,1.864,83,1.506,84,1.506,85,1.429,86,1.429,87,1.506,88,1.506,89,1.506,90,1.506,91,1.357]],["title/interfaces/Matches.html",[0,0.19,76,1.312]],["body/interfaces/Matches.html",[0,0.372,1,1.436,2,0.872,3,0.165,4,0.144,5,0.144,7,0.209,8,0.629,9,0.678,11,0.838,12,0.39,13,0.019,14,1.681,15,1.06,16,0.79,18,0.329,43,1.239,44,0.012,45,0.012,47,1.429,48,1.429,49,1.506,50,2.128,51,1.506,52,1.506,53,2.128,54,2.178,55,1.429,56,2.178,57,1.506,58,1.506,59,1.506,60,2.128,61,1.506,62,1.506,63,1.506,64,2.128,65,1.506,66,1.506,67,1.506,68,1.506,69,1.506,70,1.506,71,1.506,72,1.506,73,1.506,74,1.506,75,1.506,76,2.178,77,2.412,78,2.543,79,2.543,80,2.543,81,2.128,82,1.864,83,1.506,84,1.506,85,1.429,86,1.429,87,1.506,88,1.506,89,1.506,90,1.506,91,1.357]],["title/classes/MessageFromUserGuard.html",[92,0.331,570,2.833]],["body/classes/MessageFromUserGuard.html",[3,0.228,4,0.199,5,0.199,7,0.287,12,0.318,13,0.019,18,0.228,44,0.015,45,0.015,92,0.448,94,1.776,97,2.688,101,2.075,106,1.39,108,1.776,109,1.39,110,1.69,120,1.609,122,1.336,126,1.459,182,1.324,255,2.074,329,3.941,346,2.315,350,3.956,566,4.3,570,4.709,571,5.28,572,5.28,573,4.3,574,6.653,575,6.148,576,6.148,577,5.006,578,4.3,579,5.006,580,4.3]],["title/classes/MessageToUpperPipe.html",[92,0.331,581,2.833]],["body/classes/MessageToUpperPipe.html",[0,0.24,3,0.212,4,0.185,5,0.185,7,0.268,12,0.296,13,0.019,18,0.212,44,0.015,45,0.015,92,0.527,94,1.655,97,2.818,101,1.986,106,1.295,108,1.655,109,1.295,110,1.575,113,1.655,120,1.891,122,1.279,126,1.36,138,4.098,182,1.234,235,4.007,255,1.933,311,3.249,346,2.157,350,4.131,388,4.026,389,4.936,403,3.249,542,4.007,581,4.936,582,5.053,583,4.007,584,6.767,585,6.767,586,4.665,587,4.665,588,4.665,589,4.665,590,4.665,591,4.665,592,4.007,593,4.665]],["title/controllers/Oauth2DiscordController.html",[40,1.453,594,2.576]],["body/controllers/Oauth2DiscordController.html",[3,0.176,4,0.154,5,0.154,7,0.222,12,0.245,13,0.019,18,0.237,31,2.625,40,1.519,44,0.013,45,0.013,92,0.466,99,1.69,100,1.601,101,1.757,106,1.073,108,1.371,109,1.073,110,1.305,111,2.156,113,1.371,120,1.242,122,0.84,124,2.96,125,1.183,128,2.89,133,1.894,142,2.573,163,2.478,167,2.312,176,2.299,182,1.665,201,2.721,222,1.073,255,2.437,286,3.625,296,4.47,299,4.507,300,4.47,308,1.443,350,2.89,378,3.336,406,4.817,489,4.47,493,3.986,498,6.119,594,4.098,595,3.986,596,3.319,597,3.865,598,5.204,599,5.204,600,5.204,601,5.204,602,5.204,603,4.47,604,4.47,605,5.884,606,3.865,607,3.865,608,3.865,609,3.865,610,3.865,611,3.865,612,3.865,613,5.884,614,5.884,615,3.865,616,3.865,617,3.865,618,3.865,619,3.865,620,3.865,621,3.865,622,3.865]],["title/modules/Oauth2DiscordModule.html",[16,0.804,265,2.371]],["body/modules/Oauth2DiscordModule.html",[3,0.249,4,0.217,5,0.217,13,0.019,16,1.409,18,0.249,44,0.016,45,0.016,92,0.489,122,1.409,125,1.673,163,4.156,260,3.253,265,4.156,286,3.808,299,4.188,594,4.814,595,4.188,623,5.467,624,5.467]],["title/injectables/PrismaService.html",[365,1.453,625,2.054]],["body/injectables/PrismaService.html",[3,0.199,4,0.173,5,0.173,7,0.251,12,0.277,13,0.019,18,0.199,44,0.014,45,0.014,92,0.391,97,1.91,101,1.904,106,1.566,108,1.55,109,1.212,110,1.474,120,1.813,122,1.226,125,1.336,166,6.014,167,2.8,201,2.609,222,1.212,365,2.217,366,2.426,381,4.845,420,1.809,454,4.006,604,5.367,625,3.133,626,3.751,627,5.641,628,6.249,629,5.641,630,5.641,631,7.126,632,4.367,633,5.641,634,5.641,635,5.641,636,4.845,637,4.367,638,5.641,639,3.345,640,4.367,641,4.367,642,4.367,643,4.367,644,4.367]],["title/interfaces/QueueGroups.html",[0,0.19,33,1.812]],["body/interfaces/QueueGroups.html",[0,0.354,1,1.471,2,0.913,3,0.173,4,0.151,5,0.151,6,1.983,7,0.218,8,0.649,9,0.71,10,3.066,11,1.205,12,0.371,13,0.019,14,1.649,15,1.109,16,0.827,17,2.114,18,0.313,19,2.861,20,1.702,21,3.243,22,3.243,23,3.243,24,3.243,25,3.243,26,3.243,27,3.243,28,3.243,29,3.243,30,2.525,31,2.616,32,2.114,33,2.861,34,3.258,35,2.553,36,3.041,37,3.041,38,3.475,39,3.243,40,2.295,41,3.243,42,1.866,43,0.827,44,0.013,45,0.013]],["title/classes/RegisterDto.html",[92,0.331,645,2.576]],["body/classes/RegisterDto.html",[3,0.22,4,0.192,5,0.192,7,0.277,8,0.757,9,1.222,11,1.15,12,0.382,13,0.019,18,0.22,44,0.015,45,0.015,92,0.432,94,1.714,106,1.669,122,1.05,126,1.407,176,3.577,182,1.277,222,1.669,308,2.558,323,2.367,328,3.569,420,2.712,447,3.132,448,3.577,449,3.339,451,4.56,452,5.164,454,3.855,506,4.188,508,3.364,645,4.188,646,4.148,647,5.164,648,4.83,649,4.83]],["title/interfaces/Response.html",[0,0.19,31,1.38]],["body/interfaces/Response.html",[0,0.357,1,1.494,2,0.941,3,0.178,4,0.156,5,0.156,6,2.044,7,0.225,8,0.662,9,0.732,10,3.502,11,1.212,12,0.377,13,0.019,14,1.653,15,1.144,16,0.853,17,2.18,18,0.316,19,3.458,20,1.728,21,3.293,22,3.293,23,3.293,24,3.293,25,3.293,26,3.293,27,3.293,28,3.293,29,3.293,30,3.104,31,2.364,32,3.518,33,2.577,34,2.044,35,1.716,36,2.044,37,2.044,38,2.18,39,2.18,40,1.542,41,2.18,42,1.923,43,0.853,44,0.013,45,0.013]],["title/interfaces/Season.html",[0,0.19,10,1.812]],["body/interfaces/Season.html",[0,0.347,1,1.417,2,0.85,3,0.161,4,0.141,5,0.141,6,1.845,7,0.203,8,0.617,9,0.661,10,3.123,11,1.24,12,0.45,13,0.019,14,1.673,15,1.032,16,0.77,17,1.967,18,0.307,19,2.756,20,1.921,21,3.661,22,3.661,23,3.661,24,3.661,25,3.661,26,3.661,27,3.661,28,3.661,29,3.661,30,2.403,31,2.099,32,1.967,33,2.403,34,1.845,35,1.549,36,1.845,37,1.845,38,1.967,39,1.967,40,1.392,41,1.967,42,1.736,43,0.77,44,0.012,45,0.012]],["title/interfaces/ServiceRecord.html",[0,0.19,91,1.38]],["body/interfaces/ServiceRecord.html",[0,0.374,1,1.758,2,0.898,3,0.17,4,0.149,5,0.149,7,0.215,8,0.641,9,0.698,11,0.855,12,0.323,13,0.019,14,1.672,15,1.091,16,0.813,18,0.331,43,1.517,44,0.013,45,0.013,47,1.471,48,1.471,49,1.551,50,2.161,51,1.551,52,1.551,53,2.161,54,2.204,55,1.471,56,2.204,57,1.551,58,1.551,59,1.551,60,2.161,61,1.551,62,1.551,63,1.551,64,2.161,65,1.551,66,1.551,67,1.551,68,1.551,69,1.551,70,1.551,71,1.551,72,1.551,73,1.551,74,1.551,75,1.551,76,2.054,77,1.471,78,1.551,79,1.551,80,1.551,81,2.161,82,1.901,83,1.551,84,1.551,85,1.471,86,1.471,87,1.551,88,1.551,89,1.551,90,1.551,91,1.901]],["title/modules/SharedModule.html",[16,0.804,266,2.371]],["body/modules/SharedModule.html",[3,0.138,4,0.121,5,0.175,13,0.019,16,0.957,18,0.138,44,0.011,45,0.011,92,0.273,93,2.824,95,1.691,122,1.509,125,0.932,126,1.284,128,2.875,138,2.121,182,1.165,183,4.176,216,3.08,219,2.332,221,2.615,223,2.615,238,3.318,260,1.812,261,2.824,266,4.685,267,3.374,268,2.332,269,2.121,271,3.784,272,3.784,274,3.784,275,3.637,276,1.812,280,3.784,281,1.952,283,2.615,284,3.784,297,3.965,308,1.137,311,2.121,316,2.615,319,2.615,321,2.615,322,2.615,327,3.605,346,2.783,350,2.875,374,2.332,378,3.318,379,3.374,388,2.621,403,2.121,513,4.176,580,2.615,592,2.615,625,3.898,650,2.615,651,2.615,652,2.615,653,5.691,654,3.656,655,3.045,656,4.406,657,4.406,658,5.673,659,2.615,660,3.045,661,3.045,662,2.121,663,3.045,664,3.045,665,3.045,666,3.045,667,3.045,668,4.406,669,4.406,670,5.176,671,3.045,672,3.045,673,3.045,674,3.045,675,2.615,676,3.045,677,3.045,678,3.045,679,3.045,680,3.045,681,4.406,682,3.045,683,3.045,684,3.045,685,3.045,686,3.045,687,3.045,688,3.045,689,3.045,690,3.045,691,3.045,692,3.045,693,3.045,694,3.045,695,3.045,696,3.045,697,3.045,698,3.045,699,3.045,700,3.045,701,3.045]],["title/interfaces/Shots.html",[0,0.19,64,1.38]],["body/interfaces/Shots.html",[0,0.372,1,1.436,2,0.872,3,0.165,4,0.144,5,0.144,7,0.209,8,0.629,9,0.678,11,0.838,12,0.39,13,0.019,14,1.681,15,1.06,16,0.79,18,0.329,43,1.239,44,0.012,45,0.012,47,1.429,48,1.429,49,1.506,50,2.128,51,1.506,52,1.506,53,2.128,54,2.178,55,1.429,56,2.178,57,1.506,58,1.506,59,1.506,60,2.128,61,1.506,62,1.506,63,1.506,64,2.291,65,2.543,66,2.543,67,2.543,68,2.543,69,1.506,70,1.506,71,1.506,72,1.506,73,1.506,74,1.506,75,1.506,76,2.023,77,1.429,78,1.506,79,1.506,80,1.506,81,2.128,82,1.864,83,1.506,84,1.506,85,1.429,86,1.429,87,1.506,88,1.506,89,1.506,90,1.506,91,1.357]],["title/classes/StatsBaseCommand.html",[92,0.331,702,2.833]],["body/classes/StatsBaseCommand.html",[3,0.213,4,0.186,5,0.186,13,0.019,18,0.268,44,0.015,45,0.015,92,0.528,94,1.66,109,1.298,122,1.517,126,1.363,182,1.237,217,2.962,222,1.636,226,3.762,238,4.343,388,3.506,518,3.582,702,4.942,703,4.017,704,6.774,705,5.893,706,5.893,707,5.893,708,6.452,709,4.105,710,4.677,711,4.105,712,4.677,713,4.105,714,4.677,715,4.105,716,4.677,717,4.017]],["title/classes/StatsDto.html",[92,0.331,718,2.833]],["body/classes/StatsDto.html",[3,0.212,4,0.185,5,0.185,11,1.082,12,0.374,13,0.019,14,1.401,18,0.212,44,0.015,45,0.015,92,0.418,94,1.655,109,1.879,122,1.014,126,1.36,182,1.234,222,1.937,308,2.526,323,2.286,328,3.525,351,3.834,420,2.951,508,3.249,718,4.506,719,4.007,720,5.884,721,4.665,722,4.665,723,5.884,724,5.884,725,4.665,726,6.445,727,4.665]],["title/classes/StatsGetSubCommand.html",[92,0.331,713,2.576]],["body/classes/StatsGetSubCommand.html",[3,0.088,4,0.077,5,0.077,7,0.111,8,0.391,9,1.027,11,0.324,12,0.247,13,0.019,18,0.088,20,1.897,35,1.357,44,0.008,45,0.008,54,1.101,55,1.22,56,1.101,76,1.101,77,1.22,85,1.22,86,1.22,92,0.173,94,0.684,95,1.07,97,1.357,99,2.141,100,1.614,101,1.048,102,0.891,103,1.357,106,1.082,108,1.101,109,1.849,110,1.048,111,1.614,112,0.945,113,1.952,120,0.619,122,1.244,125,0.95,126,0.562,142,2.503,155,1.802,167,1.531,182,0.821,201,2.867,203,3.41,217,0.843,222,0.535,226,1.07,232,1.655,233,1.655,246,4.224,254,1.004,255,1.286,308,2.532,332,1.147,333,1.236,343,1.846,345,3.113,346,0.891,347,1.342,351,1.846,354,3.669,356,2.913,363,1.004,399,1.342,420,0.798,443,1.07,444,1.07,447,1.004,459,1.655,504,3.111,513,2.657,518,1.476,531,2.666,535,2.666,654,2.326,659,1.655,662,1.342,713,2.162,728,1.655,729,2.714,730,2.714,731,1.927,732,2.984,733,3.104,734,3.104,735,3.104,736,1.342,737,3.111,738,1.927,739,2.162,740,1.342,741,1.655,742,2.162,743,2.162,744,1.342,745,1.476,746,2.377,747,2.377,748,1.927,749,1.476,750,1.342,751,1.655,752,1.927,753,1.927,754,5.232,755,1.927,756,1.927,757,3.104,758,2.377,759,2.377,760,1.476,761,4.214,762,5.232,763,3.104,764,4.466,765,4.466,766,4.466,767,3.104,768,3.104,769,5.232,770,3.104,771,3.104,772,3.104,773,3.104,774,3.111,775,3.104,776,6.315,777,3.104,778,3.104,779,3.104,780,3.104,781,4.466,782,3.104,783,2.377,784,2.377,785,3.104,786,3.104,787,3.104,788,2.377,789,4.466,790,4.897,791,4.897,792,4.897,793,3.75,794,4.466,795,3.104,796,3.104,797,3.104,798,2.666,799,3.346,800,1.927,801,1.476,802,1.927,803,1.927,804,1.927,805,1.927,806,1.927]],["title/classes/StatsHelpDto.html",[92,0.331,807,2.576]],["body/classes/StatsHelpDto.html",[3,0.23,4,0.201,5,0.201,7,0.29,8,0.78,12,0.322,13,0.019,18,0.23,44,0.015,45,0.015,92,0.453,94,1.797,106,1.406,122,1.1,126,1.476,176,3.012,182,1.339,222,1.406,308,1.89,323,2.481,328,3.224,420,2.565,466,5.122,467,5.317,468,4.977,470,4.312,472,4.741,506,3.526,509,4.349,807,4.312,808,3.878,809,5.063,810,5.063,811,5.063]],["title/classes/StatsHelpSubCommand.html",[92,0.331,711,2.576]],["body/classes/StatsHelpSubCommand.html",[3,0.131,4,0.115,5,0.115,7,0.166,8,0.534,9,1.032,12,0.269,13,0.019,18,0.131,20,1.942,44,0.01,45,0.01,92,0.258,94,1.024,95,1.603,97,1.853,99,2.196,100,2.08,101,1.431,102,1.335,103,2.196,106,1.394,108,1.024,109,1.88,110,1.431,111,2.08,112,1.415,113,1.963,114,2.952,120,0.928,122,1.338,125,1.297,126,0.841,133,1.415,142,1.853,155,1.96,167,1.973,182,1.463,217,1.853,218,1.718,222,0.801,226,3.42,238,1.851,240,1.718,246,2.952,254,1.504,255,2.292,308,1.582,309,2.48,332,1.718,333,1.851,345,2.987,346,1.335,347,2.011,350,2.354,354,3.777,356,2.521,363,1.504,378,3.219,410,2.211,420,1.196,443,1.603,444,1.603,446,2.952,447,2.207,449,1.603,451,2.952,458,2.952,462,2.48,464,4.751,466,3.246,468,2.011,470,2.011,711,2.952,729,3.497,730,3.497,736,2.011,737,3.853,739,2.952,740,2.011,742,2.952,743,2.952,744,2.011,745,2.211,746,3.246,749,2.211,750,2.011,751,3.64,774,2.952,783,3.246,784,3.246,788,3.246,793,3.246,807,3.853,812,2.48,813,4.238,814,2.887,815,2.887,816,2.887,817,4.238,818,2.887,819,2.887,820,2.887,821,4.238,822,4.238,823,2.887,824,4.238,825,2.887,826,2.887,827,2.887,828,2.887,829,2.887,830,2.887,831,2.887,832,4.238,833,2.887,834,2.887,835,2.887,836,2.887,837,2.887,838,5.021,839,4.238,840,2.887,841,2.887,842,2.887,843,4.238,844,3.246,845,2.952,846,4.238,847,2.887,848,2.887,849,2.887,850,2.887,851,2.48,852,2.887]],["title/classes/StatsRegSubCommand.html",[92,0.331,709,2.576]],["body/classes/StatsRegSubCommand.html",[3,0.132,4,0.115,5,0.115,7,0.167,8,0.536,9,1.283,12,0.32,13,0.019,18,0.132,20,1.799,43,0.631,44,0.011,45,0.011,46,2.966,92,0.26,94,1.031,95,1.614,97,1.862,99,2.204,100,2.088,101,1.437,102,1.344,103,1.271,106,1.399,108,1.511,109,1.816,110,1.437,111,2.088,112,1.424,113,2.096,114,2.966,120,0.934,122,1.386,125,1.303,126,0.847,131,1.863,133,1.424,142,2.583,155,1.969,167,1.981,182,1.126,201,1.344,216,2.533,217,1.862,222,0.807,254,1.513,255,2.088,308,1.589,332,1.729,333,1.863,345,2.533,346,1.344,347,2.024,354,3.231,356,1.729,363,1.513,395,2.226,399,2.024,443,1.614,444,1.614,446,2.024,447,2.218,448,1.729,449,1.614,451,4.3,453,2.496,457,2.966,463,2.024,645,3.865,647,3.657,654,2.89,662,2.024,709,2.966,729,3.51,730,2.966,732,3.261,736,2.024,737,3.865,739,2.966,740,2.024,742,2.024,743,2.966,744,2.024,745,2.226,746,3.261,747,3.261,749,2.226,750,2.024,758,2.226,759,4.25,760,2.226,761,4.25,793,2.226,801,3.86,844,2.226,845,2.024,853,2.496,854,2.496,855,4.258,856,2.906,857,2.906,858,2.906,859,2.226,860,2.496,861,2.496,862,2.906,863,2.906,864,3.657,865,2.496,866,5.04,867,2.906,868,2.906,869,2.906,870,2.496,871,4.258,872,2.906,873,2.906,874,2.496,875,2.496,876,4.258,877,4.258,878,2.906,879,2.906]],["title/classes/StatsUpdateSubCommand.html",[92,0.331,715,2.576]],["body/classes/StatsUpdateSubCommand.html",[3,0.152,4,0.133,5,0.133,7,0.192,8,0.593,9,1.267,12,0.346,13,0.019,18,0.152,20,1.589,43,0.726,44,0.012,45,0.012,92,0.299,94,1.186,97,2.059,99,2.384,100,2.258,101,1.589,102,1.546,103,1.462,106,1.513,108,1.671,109,1.732,110,1.589,111,2.258,112,1.638,113,2.1,120,1.074,122,1.407,125,1.441,126,0.974,131,2.143,133,1.638,142,2.588,155,2.177,167,2.142,182,1.245,201,1.546,216,1.988,217,2.059,219,2.56,222,0.928,226,1.856,254,1.741,255,2.452,308,1.248,345,3.243,346,1.546,354,3.495,356,1.988,363,1.741,399,2.328,443,1.856,444,1.856,446,2.328,447,1.741,448,1.988,449,1.856,458,3.797,460,2.328,654,3.082,662,2.328,715,3.28,729,3.797,730,3.28,732,3.606,736,2.328,737,4.122,739,3.28,740,2.328,741,2.871,742,2.328,743,3.28,744,2.328,747,3.606,750,2.328,758,2.56,759,4.175,760,2.56,761,4.175,774,2.328,788,2.56,801,3.606,844,3.606,845,2.328,854,2.871,861,2.871,864,4.044,865,2.871,870,2.871,874,2.871,875,2.871,880,2.871,881,4.709,882,4.709,883,4.122,884,3.342,885,3.342,886,3.342,887,3.342,888,3.342,889,3.342]],["title/interfaces/Summary.html",[0,0.19,53,1.38]],["body/interfaces/Summary.html",[0,0.369,1,1.405,2,0.836,3,0.159,4,0.138,5,0.138,7,0.2,8,0.611,9,0.651,11,0.814,12,0.427,13,0.019,14,1.682,15,1.016,16,0.758,18,0.327,43,1.212,44,0.012,45,0.012,47,1.37,48,1.37,49,1.444,50,2.561,51,1.444,52,1.444,53,2.25,54,2.388,55,2.369,56,2.388,57,2.497,58,2.497,59,2.497,60,2.082,61,1.444,62,1.444,63,1.444,64,2.082,65,1.444,66,1.444,67,1.444,68,1.444,69,1.444,70,1.444,71,1.444,72,1.444,73,1.444,74,1.444,75,1.444,76,1.979,77,1.37,78,1.444,79,1.444,80,1.444,81,2.082,82,1.81,83,1.444,84,1.444,85,1.37,86,1.37,87,1.444,88,1.444,89,1.444,90,1.444,91,1.301]],["title/interfaces/TimePlayed.html",[0,0.19,82,1.38]],["body/interfaces/TimePlayed.html",[0,0.374,1,1.458,2,0.898,3,0.17,4,0.149,5,0.149,7,0.215,8,0.641,9,0.698,11,1.043,12,0.323,13,0.019,14,1.675,15,1.091,16,0.813,18,0.331,43,1.258,44,0.013,45,0.013,47,1.471,48,1.471,49,1.551,50,2.161,51,1.551,52,1.551,53,2.161,54,2.204,55,1.471,56,2.204,57,1.551,58,1.551,59,1.551,60,2.161,61,1.551,62,1.551,63,1.551,64,2.161,65,1.551,66,1.551,67,1.551,68,1.551,69,1.551,70,1.551,71,1.551,72,1.551,73,1.551,74,1.551,75,1.551,76,2.054,77,1.471,78,1.551,79,1.551,80,1.551,81,2.161,82,2.161,83,2.574,84,2.574,85,1.471,86,1.471,87,1.551,88,1.551,89,1.551,90,1.551,91,1.397]],["title/interfaces/ToJsonResponse.html",[0,0.19,890,2.833]],["body/interfaces/ToJsonResponse.html",[0,0.204,2,0.952,3,0.18,4,0.158,5,0.158,7,0.228,8,0.667,11,1.283,12,0.476,13,0.019,14,1.296,18,0.18,44,0.013,45,0.013,46,2.764,329,4.372,351,3.785,364,2.764,382,4.431,394,5.464,425,5.464,544,5.464,845,4.431,890,4.057,891,3.408,892,3.408,893,5.464,894,6.362,895,6.362,896,6.362,897,6.362,898,6.362,899,6.362,900,5.963,901,5.963,902,5.963,903,5.963]],["title/injectables/TwitterService.html",[183,2.2,365,1.453]],["body/injectables/TwitterService.html",[3,0.066,4,0.097,5,0.057,7,0.083,8,0.307,11,0.854,12,0.358,13,0.019,14,1.051,18,0.066,20,1.323,35,0.631,44,0.006,45,0.006,92,0.284,99,2.783,100,1.316,101,0.824,102,1.469,103,1.068,106,1.699,108,1.717,109,1.522,110,1.633,111,0.597,112,1.832,113,2.171,120,2.021,121,1.004,122,1.152,125,0.441,126,0.42,128,1.356,132,2.212,133,2.225,142,2.529,155,2.1,167,2.44,174,1.004,182,0.84,183,1.889,186,0.924,190,1.104,191,1.238,192,1.004,201,2.237,203,1.701,205,2.097,207,3.21,209,2.863,213,4.967,218,0.858,222,1.343,254,1.946,255,2.494,275,3.101,276,0.858,291,1.238,297,1.104,308,0.538,329,0.924,343,2.223,345,1.453,346,0.667,349,2.097,350,2.944,351,2.487,352,2.097,356,0.858,363,1.654,364,2.212,365,0.96,366,0.801,375,2.432,380,1.104,382,2.912,386,1.87,388,2.223,403,1.701,404,3.21,420,2.108,443,1.764,444,1.764,454,3.101,457,1.701,458,2.212,463,1.004,490,2.097,522,3.591,533,1.238,625,2.687,774,1.004,783,1.104,784,1.104,798,2.097,859,3.478,893,2.097,904,1.238,905,3.176,906,3.176,907,3.176,908,3.176,909,2.442,910,2.442,911,3.737,912,2.442,913,2.442,914,2.442,915,2.442,916,1.442,917,3.737,918,3.737,919,4.838,920,2.442,921,1.87,922,4.541,923,2.442,924,2.442,925,6.784,926,1.442,927,2.442,928,2.442,929,6.495,930,3.176,931,1.442,932,3.176,933,3.737,934,1.442,935,3.737,936,2.442,937,3.176,938,3.591,939,2.442,940,1.442,941,3.737,942,1.442,943,2.442,944,2.442,945,3.176,946,3.176,947,3.176,948,3.176,949,3.737,950,3.737,951,2.442,952,2.442,953,2.442,954,2.442,955,1.442,956,1.442,957,1.104,958,2.442,959,2.442,960,1.442,961,4.541,962,1.442,963,1.442,964,1.442,965,1.442,966,4.181,967,1.442,968,2.442,969,1.442,970,1.442,971,3.176,972,1.442,973,1.442,974,2.442,975,2.442,976,1.442,977,1.442,978,1.442,979,1.442,980,1.442,981,1.238,982,1.238,983,2.442,984,1.442,985,1.238,986,1.238,987,2.442,988,1.442,989,1.442,990,1.442,991,1.442,992,1.442,993,1.442,994,1.442,995,2.442,996,3.176,997,2.442,998,1.442,999,1.442,1000,1.442,1001,2.442,1002,2.442,1003,1.442,1004,1.442,1005,1.442,1006,1.442,1007,1.442,1008,1.442,1009,1.442,1010,1.442,1011,1.442,1012,1.442,1013,1.442,1014,1.442,1015,3.176,1016,1.442,1017,1.442,1018,1.442,1019,1.442,1020,1.442,1021,1.442,1022,2.442,1023,2.442,1024,1.442,1025,1.442,1026,1.442,1027,2.442,1028,2.442,1029,1.442,1030,1.442,1031,1.442,1032,1.442,1033,1.442,1034,1.442,1035,1.442,1036,1.442,1037,2.442,1038,1.442,1039,1.442,1040,1.442,1041,1.238,1042,2.442,1043,1.238,1044,1.442,1045,1.442,1046,1.442,1047,1.442,1048,1.442,1049,1.442,1050,1.442,1051,1.442,1052,1.442,1053,1.442,1054,1.442,1055,1.442,1056,1.442,1057,1.442,1058,1.442,1059,1.442,1060,1.442,1061,1.442,1062,1.442,1063,1.442,1064,1.442,1065,1.442,1066,1.442,1067,1.442,1068,1.442,1069,1.442]],["title/classes/UpdateDto.html",[92,0.331,883,2.576]],["body/classes/UpdateDto.html",[3,0.236,4,0.206,5,0.206,7,0.297,8,0.791,9,1.26,11,1.054,12,0.329,13,0.019,18,0.236,44,0.016,45,0.016,92,0.464,94,1.838,106,1.438,122,1.126,126,1.51,176,3.082,182,1.37,222,1.438,308,2.343,323,2.539,328,3.27,420,2.601,447,3.27,448,3.735,449,3.487,506,3.609,508,3.609,883,4.373,1070,4.45,1071,5.181]],["title/injectables/UserService.html",[365,1.453,654,1.926]],["body/injectables/UserService.html",[3,0.122,4,0.106,5,0.106,7,0.154,12,0.422,13,0.019,14,0.871,18,0.122,43,1.388,44,0.01,45,0.01,92,0.24,101,1.353,103,1.171,106,1.664,108,2.127,109,1.664,110,2.023,113,1.892,120,2.198,122,1.044,125,0.82,128,2.226,131,1.717,142,1.753,167,2.766,222,1.664,255,2.366,311,4.174,312,3.443,343,3.957,351,4.187,365,1.575,366,1.488,382,2.792,386,3.07,387,3.443,388,2.385,389,3.07,393,3.443,416,4.126,420,2.483,454,2.57,539,4.58,625,3.628,639,2.052,654,2.088,799,5.8,851,3.443,859,4.085,921,4.085,957,4.085,982,2.3,1041,3.443,1072,2.3,1073,4.009,1074,4.009,1075,4.009,1076,2.678,1077,2.678,1078,4.009,1079,5.993,1080,4.009,1081,4.804,1082,2.678,1083,4.009,1084,6.651,1085,2.678,1086,5.333,1087,3.443,1088,4.009,1089,4.009,1090,2.678,1091,5.993,1092,4.009,1093,2.678,1094,2.678,1095,5.333,1096,4.009,1097,2.678,1098,2.678,1099,4.804,1100,4.804,1101,2.678,1102,4.804,1103,2.678,1104,2.678,1105,2.678,1106,2.678,1107,2.678,1108,2.678]],["title/interfaces/Vehicles.html",[0,0.19,50,1.38]],["body/interfaces/Vehicles.html",[0,0.374,1,1.458,2,0.898,3,0.17,4,0.149,5,0.149,7,0.215,8,0.641,9,0.698,11,0.855,12,0.323,13,0.019,14,1.678,15,1.091,16,0.813,18,0.331,43,1.258,44,0.013,45,0.013,47,1.471,48,1.471,49,1.551,50,2.319,51,2.574,52,2.574,53,2.161,54,2.204,55,1.471,56,2.204,57,1.551,58,1.551,59,1.551,60,2.161,61,1.551,62,1.551,63,1.551,64,2.161,65,1.551,66,1.551,67,1.551,68,1.551,69,1.551,70,1.551,71,1.551,72,1.551,73,1.551,74,1.551,75,1.551,76,2.054,77,1.471,78,1.551,79,1.551,80,1.551,81,2.161,82,1.901,83,1.551,84,1.551,85,1.471,86,1.471,87,1.551,88,1.551,89,1.551,90,1.551,91,1.397]],["title/coverage.html",[1109,3.869]],["body/coverage.html",[0,0.38,1,1.086,5,0.117,6,3.339,10,1.448,12,0.188,13,0.019,19,1.448,30,1.448,31,1.103,33,1.448,40,1.694,42,1.448,43,0.642,44,0.011,45,0.011,47,2.742,48,2.742,50,1.103,53,1.103,54,1.048,56,1.048,60,1.103,64,1.103,76,1.048,81,1.103,82,1.103,91,1.103,92,0.636,93,1.894,95,2.393,96,2.537,113,1.048,162,2.058,164,2.537,174,2.058,183,1.757,187,1.757,217,2.225,286,2.058,323,1.448,324,3.002,325,3.301,326,1.894,332,1.757,333,1.894,334,2.537,365,2.44,367,2.537,368,2.537,457,5.297,484,2.263,485,2.537,504,2.058,505,2.537,513,1.757,514,2.537,570,2.263,571,2.537,572,2.537,573,2.537,581,2.263,582,2.537,583,2.537,594,2.058,595,2.263,596,2.537,625,1.641,626,2.537,645,2.058,646,2.537,654,1.539,702,2.263,703,2.537,709,2.058,711,2.058,713,2.058,715,2.058,718,2.263,719,2.537,728,2.537,807,2.058,808,2.263,812,2.537,853,2.537,880,2.537,883,2.058,890,2.263,891,2.537,892,2.537,904,2.537,1070,2.537,1072,2.537,1087,2.537,1109,2.263,1110,2.537,1111,2.954,1112,2.954,1113,2.954,1114,6.809,1115,6.209,1116,6.701,1117,4.31,1118,4.31,1119,2.954,1120,2.954,1121,2.954,1122,2.537,1123,2.537,1124,2.954,1125,4.31,1126,4.31,1127,4.31,1128,5.593,1129,5.088,1130,2.954,1131,2.954,1132,2.954,1133,2.954,1134,2.954,1135,2.954,1136,2.954,1137,2.954]],["title/dependencies.html",[261,2.852,1138,3.087]],["body/dependencies.html",[13,0.019,44,0.015,45,0.015,125,1.862,126,1.773,182,1.746,186,3.156,192,3.429,218,3.62,261,3.156,276,2.929,281,3.156,339,4.228,346,2.277,495,3.771,639,3.771,938,4.228,981,4.228,985,4.228,986,4.228,1139,4.923,1140,4.923,1141,4.923,1142,4.923,1143,4.923,1144,6.604,1145,4.923,1146,4.923,1147,4.923,1148,4.923,1149,4.923,1150,4.923,1151,4.923,1152,4.923,1153,4.923,1154,4.923,1155,4.923,1156,4.923,1157,4.923,1158,4.923,1159,4.923,1160,4.923,1161,4.923]],["title/miscellaneous/enumerations.html",[1162,2.15,1163,3.821]],["body/miscellaneous/enumerations.html",[7,0.328,13,0.018,20,1.939,44,0.016,45,0.016,468,4.634,470,4.634,472,5.096,808,4.376,1162,3.979,1163,4.907,1164,5.713]],["title/miscellaneous/functions.html",[1162,2.15,1165,3.821]],["body/miscellaneous/functions.html",[7,0.327,13,0.016,44,0.016,45,0.016,216,3.388,259,3.651,675,4.891,921,4.362,957,4.362,1122,4.891,1123,6.038,1162,3.966,1165,4.891,1166,5.695,1167,5.695,1168,5.695,1169,5.695]],["title/index.html",[7,0.177,249,2.364,1170,2.651]],["body/index.html",[4,0.181,13,0.019,35,1.988,44,0.014,45,0.014,141,3.904,182,1.531,222,1.262,240,3.443,251,6.078,378,3.71,465,3.904,603,3.904,636,3.904,1109,3.482,1171,4.971,1172,3.904,1173,4.546,1174,4.546,1175,4.546,1176,5.788,1177,4.546,1178,6.704,1179,5.788,1180,4.546,1181,4.546,1182,5.788,1183,4.546,1184,4.546,1185,7.191,1186,4.546,1187,4.546,1188,4.546,1189,5.788,1190,4.546,1191,4.546,1192,4.546,1193,5.788,1194,5.788,1195,4.546,1196,4.546,1197,4.546,1198,5.788,1199,4.546,1200,4.971,1201,5.788,1202,4.546,1203,4.546,1204,4.546,1205,3.904,1206,4.546,1207,4.546,1208,4.546,1209,4.546,1210,4.546,1211,3.482]],["title/license.html",[249,2.364,1170,2.651,1211,2.364]],["body/license.html",[13,0.014,44,0.014,45,0.014,240,2.704,269,3.166,409,4.971,460,4.031,495,3.482,578,3.904,717,3.904,860,3.904,1043,3.904,1110,3.904,1171,3.904,1172,3.904,1200,3.904,1211,3.482,1212,6.368,1213,4.546,1214,4.546,1215,4.546,1216,4.546,1217,4.546,1218,4.546,1219,4.546,1220,4.546,1221,4.546,1222,5.788,1223,7.35,1224,4.546,1225,4.546,1226,4.546,1227,6.368,1228,4.546,1229,5.788,1230,4.546,1231,4.546,1232,4.546,1233,4.546,1234,4.546,1235,4.546,1236,4.546,1237,4.546,1238,4.546,1239,5.788,1240,4.546,1241,4.546,1242,4.546,1243,4.546,1244,4.546,1245,4.546,1246,4.546,1247,5.788,1248,5.788,1249,4.546,1250,4.546,1251,4.546,1252,4.546,1253,4.546,1254,4.546,1255,4.546,1256,4.546,1257,4.546,1258,4.546,1259,4.546,1260,4.546,1261,4.546,1262,4.546,1263,4.546,1264,4.546,1265,4.546,1266,4.546,1267,4.546,1268,4.546,1269,4.546,1270,4.546,1271,4.546,1272,4.546,1273,4.546]],["title/modules.html",[260,3.005]],["body/modules.html",[13,0.016,44,0.016,45,0.016,137,4.907,259,3.662,260,3.399,265,3.662,266,3.662,1205,5.714,1274,6.653,1275,6.653,1276,7.039,1277,5.713]],["title/overview.html",[1278,4.338]],["body/overview.html",[2,1.085,13,0.019,44,0.014,45,0.014,94,1.605,163,2.899,183,4.273,187,3.779,259,4.662,260,2.691,261,3.698,262,3.885,263,3.885,264,3.885,265,4.073,266,4.874,267,4.419,268,3.464,269,3.15,318,3.464,366,2.512,429,3.885,513,4.273,625,3.989,650,3.885,651,3.885,652,3.885,653,5.747,654,3.741,1278,3.885,1279,4.523,1280,4.523,1281,4.523]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":457,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsRegSubCommand.html":{},"injectables/TwitterService.html":{},"coverage.html":{}}}],["0.0.3",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["0.26.1",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":46,"title":{"interfaces/Additional-1.html":{}},"body":{"injectables/DiscordApiService.html":{},"classes/StatsRegSubCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["1.0.0",{"_index":1183,"title":{},"body":{"index.html":{}}}],["1.0.2",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["1.6.5",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["13.6.0",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1280,"title":{},"body":{"overview.html":{}}}],["2",{"_index":429,"title":{},"body":{"injectables/DiscordApiService.html":{},"overview.html":{}}}],["2.0.16",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["2.1.12",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["2.26.0",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["2.3",{"_index":550,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["2/3",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":439,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["2021",{"_index":1214,"title":{},"body":{"license.html":{}}}],["2022",{"_index":1215,"title":{},"body":{"license.html":{}}}],["22",{"_index":1281,"title":{},"body":{"overview.html":{}}}],["24",{"_index":455,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["3",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"overview.html":{}}}],["3.0.2",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["3.8.1",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["5",{"_index":252,"title":{},"body":{"controllers/AppController.html":{}}}],["5/9",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1279,"title":{},"body":{"overview.html":{}}}],["6/7",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["9/15",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["_client",{"_index":905,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_configservice",{"_index":375,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["_discordapiservice",{"_index":197,"title":{},"body":{"controllers/AppController.html":{}}}],["_discordprovider",{"_index":918,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_halodotapi",{"_index":734,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["_halodotapiinfinitebaseurl",{"_index":519,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["_halosupporttweets",{"_index":906,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_headers",{"_index":520,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["_http",{"_index":527,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["_httpservice",{"_index":383,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["_logger",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["_prismaservice",{"_index":917,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_submap",{"_index":194,"title":{},"body":{"controllers/AppController.html":{}}}],["_submap.set",{"_index":204,"title":{},"body":{"controllers/AppController.html":{}}}],["_twitterallowedsearchauthorids",{"_index":907,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_twitterservice",{"_index":196,"title":{},"body":{"controllers/AppController.html":{}}}],["_twitterusers",{"_index":908,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_userservice",{"_index":732,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["above",{"_index":1246,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":915,"title":{},"body":{"injectables/TwitterService.html":{}}}],["accuracy",{"_index":68,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["action",{"_index":1267,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1034,"title":{},"body":{"injectables/TwitterService.html":{}}}],["addfields",{"_index":774,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["additional",{"_index":1,"title":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["adds",{"_index":205,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["against",{"_index":803,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["age",{"_index":723,"title":{},"body":{"classes/StatsDto.html":{}}}],["alikomennoille",{"_index":826,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["all_time",{"_index":32,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["allexcepetionsfilter",{"_index":158,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["allexceptionsfilter",{"_index":93,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["allow",{"_index":452,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/RegisterDto.html":{}}}],["allow_stats_logging",{"_index":871,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["allowed",{"_index":951,"title":{},"body":{"injectables/TwitterService.html":{}}}],["allowfactory",{"_index":700,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowguilds",{"_index":695,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowlogging",{"_index":451,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["allows",{"_index":858,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["alltime",{"_index":30,"title":{"interfaces/AllTime.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["alpha",{"_index":551,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["already",{"_index":952,"title":{},"body":{"injectables/TwitterService.html":{}}}],["amazing",{"_index":1206,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1237,"title":{},"body":{"license.html":{}}}],["anything",{"_index":705,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["api",{"_index":218,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["api.service",{"_index":189,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["api.service.ts",{"_index":368,"title":{},"body":{"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["api.service.ts:10",{"_index":413,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:12",{"_index":414,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:13",{"_index":376,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:192",{"_index":397,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:222",{"_index":392,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:46",{"_index":402,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:99",{"_index":385,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["app",{"_index":636,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":644,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["app_filter",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["appcontroller",{"_index":162,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":381,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/PrismaService.html":{}}}],["application/json",{"_index":549,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["application_command",{"_index":900,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["application_command_autocomplete",{"_index":903,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["applicationid",{"_index":425,"title":{},"body":{"injectables/DiscordApiService.html":{},"interfaces/ToJsonResponse.html":{}}}],["appmodule",{"_index":259,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":407,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["argument",{"_index":235,"title":{},"body":{"controllers/AppController.html":{},"classes/MessageToUpperPipe.html":{}}}],["argumentshost",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["arising",{"_index":1271,"title":{},"body":{"license.html":{}}}],["around",{"_index":664,"title":{},"body":{"modules/SharedModule.html":{}}}],["array",{"_index":388,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["assigns",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{}}}],["assists",{"_index":56,"title":{"interfaces/Assists.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["associated",{"_index":1224,"title":{},"body":{"license.html":{}}}],["async",{"_index":167,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["authentication",{"_index":600,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["author",{"_index":1042,"title":{},"body":{"injectables/TwitterService.html":{}}}],["author_id",{"_index":1052,"title":{},"body":{"injectables/TwitterService.html":{}}}],["authorization",{"_index":435,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["authors",{"_index":1261,"title":{},"body":{"license.html":{}}}],["autoregisterglobalcommands",{"_index":678,"title":{},"body":{"modules/SharedModule.html":{}}}],["available",{"_index":137,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules.html":{}}}],["average",{"_index":63,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["await",{"_index":201,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["axios",{"_index":419,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["axiosresponse",{"_index":418,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["b",{"_index":1058,"title":{},"body":{"injectables/TwitterService.html":{}}}],["backers",{"_index":1207,"title":{},"body":{"index.html":{}}}],["base",{"_index":704,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["behaviorsubject",{"_index":966,"title":{},"body":{"injectables/TwitterService.html":{}}}],["below",{"_index":198,"title":{},"body":{"controllers/AppController.html":{}}}],["betrayals",{"_index":57,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["body",{"_index":498,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"controllers/Oauth2DiscordController.html":{}}}],["body.json",{"_index":620,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["bodyjson",{"_index":619,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["boolean",{"_index":329,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"classes/MessageFromUserGuard.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["bootstrap",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bot",{"_index":378,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/Oauth2DiscordController.html":{},"modules/SharedModule.html":{},"classes/StatsHelpSubCommand.html":{},"index.html":{}}}],["bottoken",{"_index":369,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["botuser",{"_index":799,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"injectables/UserService.html":{}}}],["botuser.gamertag",{"_index":802,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["breakdowns",{"_index":81,"title":{"interfaces/Breakdowns.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["browse",{"_index":1276,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1274,"title":{},"body":{"modules.html":{}}}],["built",{"_index":1173,"title":{},"body":{"index.html":{}}}],["c",{"_index":1213,"title":{},"body":{"license.html":{}}}],["callback",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{}}}],["callbackfordiscordoauth2",{"_index":605,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["callbackfordiscordoauth2(request",{"_index":606,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["called",{"_index":1177,"title":{},"body":{"index.html":{}}}],["callouts",{"_index":75,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["canactive",{"_index":575,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["canactive(event",{"_index":576,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["catch",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["catch((error",{"_index":246,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["catch(exception",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exceptionlist",{"_index":337,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["catch(validationerror",{"_index":353,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["certain",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["changes",{"_index":230,"title":{},"body":{"controllers/AppController.html":{}}}],["channel",{"_index":961,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channel.name",{"_index":1020,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channel.send",{"_index":1017,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channelid",{"_index":893,"title":{},"body":{"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["channels",{"_index":953,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channels.fetch(channelid",{"_index":1014,"title":{},"body":{"injectables/TwitterService.html":{}}}],["charge",{"_index":1219,"title":{},"body":{"license.html":{}}}],["checks",{"_index":949,"title":{},"body":{"injectables/TwitterService.html":{}}}],["choice",{"_index":323,"title":{"interfaces/Choice.html":{}},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["choice(city",{"_index":725,"title":{},"body":{"classes/StatsDto.html":{}}}],["choice(language",{"_index":811,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["choice(publicstats",{"_index":511,"title":{},"body":{"classes/GetDto.html":{}}}],["choices",{"_index":331,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{}}}],["chosen",{"_index":850,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["city",{"_index":726,"title":{},"body":{"classes/StatsDto.html":{}}}],["claim",{"_index":1264,"title":{},"body":{"license.html":{}}}],["class",{"_index":92,"title":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":94,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{},"overview.html":{}}}],["client",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{}}}],["close",{"_index":635,"title":{},"body":{"injectables/PrismaService.html":{}}}],["cluster_appmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":650,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":651,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":652,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":199,"title":{},"body":{"controllers/AppController.html":{}}}],["command",{"_index":217,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"coverage.html":{}}}],["command.js",{"_index":677,"title":{},"body":{"modules/SharedModule.html":{}}}],["commandid",{"_index":394,"title":{},"body":{"injectables/DiscordApiService.html":{},"interfaces/ToJsonResponse.html":{}}}],["commandinteraction",{"_index":737,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["commandline",{"_index":234,"title":{},"body":{"controllers/AppController.html":{}}}],["commandname",{"_index":894,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["commands",{"_index":238,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["commandvalidationfilter",{"_index":332,"title":{"classes/CommandValidationFilter.html":{}},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["community",{"_index":1172,"title":{},"body":{"index.html":{},"license.html":{}}}],["conditions",{"_index":1245,"title":{},"body":{"license.html":{}}}],["config",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{}}}],["configmodule",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["configmodule.forroot",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{}}}],["configservice.get('guildid",{"_index":699,"title":{},"body":{"modules/SharedModule.html":{}}}],["configservice.get('token",{"_index":676,"title":{},"body":{"modules/SharedModule.html":{}}}],["configuration",{"_index":1044,"title":{},"body":{"injectables/TwitterService.html":{}}}],["configure",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["configured",{"_index":954,"title":{},"body":{"injectables/TwitterService.html":{}}}],["connect",{"_index":641,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":1272,"title":{},"body":{"license.html":{}}}],["connects",{"_index":638,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.debug('twitterallowedsearchauthorids",{"_index":989,"title":{},"body":{"injectables/TwitterService.html":{}}}],["console.log('5",{"_index":806,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["console.log('discordapi",{"_index":427,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["const",{"_index":142,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["construct",{"_index":225,"title":{},"body":{"controllers/AppController.html":{}}}],["constructembedtweetmessage",{"_index":909,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructembedtweetmessage(tweet",{"_index":924,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["constructor(_configservice",{"_index":916,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructor(_halodotapi",{"_index":731,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["constructor(_http",{"_index":525,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["constructor(_httpservice",{"_index":373,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["constructor(_logger",{"_index":486,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["constructor(_userservice",{"_index":854,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["constructor(httpadapterhost",{"_index":104,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(prisma",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ExampleMiddleWare.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/UserService.html":{}}}],["constructs",{"_index":927,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructstatscommand",{"_index":224,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{}}}],["contain",{"_index":943,"title":{},"body":{"injectables/TwitterService.html":{}}}],["contains",{"_index":672,"title":{},"body":{"modules/SharedModule.html":{}}}],["content",{"_index":542,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/MessageToUpperPipe.html":{}}}],["contract",{"_index":1268,"title":{},"body":{"license.html":{}}}],["controller",{"_index":40,"title":{"controllers/AppController.html":{},"controllers/Oauth2DiscordController.html":{}},"body":{"interfaces/Additional.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"controllers/Oauth2DiscordController.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["controller('oauth2",{"_index":608,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["controllers",{"_index":163,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"overview.html":{}}}],["controllers/oauth2",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["converted",{"_index":589,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["copies",{"_index":1239,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1222,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1212,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1109,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":957,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":173,"title":{},"body":{"controllers/AppController.html":{}}}],["created_at",{"_index":1051,"title":{},"body":{"injectables/TwitterService.html":{}}}],["createmessage",{"_index":1015,"title":{},"body":{"injectables/TwitterService.html":{}}}],["creates",{"_index":386,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["createuser",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(data",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["cron",{"_index":190,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/TwitterService.html":{}}}],["cron(cronexpression.every_5_minutes",{"_index":179,"title":{},"body":{"controllers/AppController.html":{}}}],["cronexpression",{"_index":191,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["crossplay",{"_index":39,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["cryptum",{"_index":543,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["csrs",{"_index":537,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["csrsmodels",{"_index":17,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["csrsmodels.csrsrootobject",{"_index":559,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["csrsrootobject",{"_index":42,"title":{"interfaces/CsrsRootObject.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["ctx",{"_index":144,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":160,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["current",{"_index":19,"title":{"interfaces/Current.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["currently",{"_index":974,"title":{},"body":{"injectables/TwitterService.html":{}}}],["cursor",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{}}}],["damage",{"_index":60,"title":{"interfaces/Damage.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["damages",{"_index":1265,"title":{},"body":{"license.html":{}}}],["data",{"_index":43,"title":{"interfaces/Data.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"injectables/DiscordApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["data.options",{"_index":431,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["data.type",{"_index":428,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["database",{"_index":454,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["date",{"_index":985,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["date().toisostring",{"_index":152,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["date(a.created_at).valueof",{"_index":1059,"title":{},"body":{"injectables/TwitterService.html":{}}}],["date(b.created_at).valueof",{"_index":1060,"title":{},"body":{"injectables/TwitterService.html":{}}}],["date(tweet.created_at",{"_index":1037,"title":{},"body":{"injectables/TwitterService.html":{}}}],["deal",{"_index":1226,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1273,"title":{},"body":{"license.html":{}}}],["dealt",{"_index":62,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["deaths",{"_index":55,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["declare",{"_index":15,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["decorator",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["decorators",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["default",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["default_permission",{"_index":330,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{}}}],["defer",{"_index":752,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["deferred",{"_index":895,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["define",{"_index":411,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["defined",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{}}}],["definediscordcommand",{"_index":326,"title":{"interfaces/DefineDiscordCommand.html":{}},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["delay",{"_index":910,"title":{},"body":{"injectables/TwitterService.html":{}}}],["delay(ms",{"_index":930,"title":{},"body":{"injectables/TwitterService.html":{}}}],["delete",{"_index":396,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand",{"_index":371,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand(commandid",{"_index":391,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand.status",{"_index":481,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deleted",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{}}}],["deletes",{"_index":393,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/UserService.html":{}}}],["deleteuser",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(where",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":261,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":701,"title":{},"body":{"modules/SharedModule.html":{}}}],["description",{"_index":222,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["destroys",{"_index":51,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["details",{"_index":352,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/TwitterService.html":{}}}],["determine",{"_index":674,"title":{},"body":{"modules/SharedModule.html":{}}}],["development",{"_index":1187,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":877,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["discord",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"dependencies.html":{},"index.html":{}}}],["discord.controller",{"_index":624,"title":{},"body":{"modules/Oauth2DiscordModule.html":{}}}],["discord.controller.ts",{"_index":596,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"coverage.html":{}}}],["discord.controller.ts:24",{"_index":607,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["discord.js",{"_index":346,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["discord.module",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["discord.module.ts",{"_index":623,"title":{},"body":{"modules/Oauth2DiscordModule.html":{}}}],["discord/oauth2",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["discord_user_id",{"_index":801,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["discordapiservice",{"_index":187,"title":{"injectables/DiscordApiService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"coverage.html":{},"overview.html":{}}}],["discordargumentmetadata",{"_index":340,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["discordclientoptions",{"_index":679,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordclientprovider",{"_index":919,"title":{},"body":{"injectables/TwitterService.html":{}}}],["discordcommand",{"_index":741,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["discordcommandprovider",{"_index":653,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["discordexceptionfilter",{"_index":335,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["discordguard",{"_index":574,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["discordjs/rest",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["discordmodule",{"_index":657,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordmodule.forrootasync",{"_index":669,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordpipetransform",{"_index":584,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["discordtransformedcommand",{"_index":729,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["discordurl",{"_index":370,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["display",{"_index":819,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["distribute",{"_index":1235,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1110,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":227,"title":{},"body":{"controllers/AppController.html":{}}}],["down",{"_index":634,"title":{},"body":{"injectables/PrismaService.html":{}}}],["draws",{"_index":80,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["driver",{"_index":74,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["dto",{"_index":739,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["dto.allowlogging",{"_index":862,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["dto.gamertag",{"_index":758,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["dto.lang",{"_index":820,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["duo",{"_index":37,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["e2e",{"_index":1195,"title":{},"body":{"index.html":{}}}],["each",{"_index":588,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["editreply(replymessage",{"_index":790,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["embed",{"_index":928,"title":{},"body":{"injectables/TwitterService.html":{}}}],["embedhelpen",{"_index":846,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["embedhelpfi",{"_index":821,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["embedreply",{"_index":761,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["embeds",{"_index":356,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["embedtweet",{"_index":1027,"title":{},"body":{"injectables/TwitterService.html":{}}}],["emits",{"_index":941,"title":{},"body":{"injectables/TwitterService.html":{}}}],["emp",{"_index":73,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["en",{"_index":472,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpDto.html":{},"miscellaneous/enumerations.html":{}}}],["enabled",{"_index":876,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["enableshutdownhooks",{"_index":629,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":630,"title":{},"body":{"injectables/PrismaService.html":{}}}],["english",{"_index":471,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["enter",{"_index":450,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["enum",{"_index":509,"title":{},"body":{"classes/GetDto.html":{},"classes/StatsHelpDto.html":{}}}],["enumerations",{"_index":1163,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"injectables/TwitterService.html":{}}}],["envfilepath",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["environment/.env",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["environment/config",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["ephemeral",{"_index":845,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["error",{"_index":155,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["error(error",{"_index":564,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["error.stack",{"_index":363,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["errorembed",{"_index":794,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["errors",{"_index":348,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["ett",{"_index":829,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["etwitterstreamevent",{"_index":976,"title":{},"body":{"injectables/TwitterService.html":{}}}],["event",{"_index":578,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"license.html":{}}}],["events",{"_index":668,"title":{},"body":{"modules/SharedModule.html":{}}}],["examplemiddleware",{"_index":484,"title":{"injectables/ExampleMiddleWare.html":{}},"body":{"injectables/ExampleMiddleWare.html":{},"coverage.html":{}}}],["exception",{"_index":119,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["exception.getstatus",{"_index":147,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.property",{"_index":360,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["exceptionfilter",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionlist",{"_index":342,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["exceptionlist.map((exception",{"_index":357,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["exceptions",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["export",{"_index":18,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["exports",{"_index":656,"title":{},"body":{"modules/SharedModule.html":{}}}],["express",{"_index":495,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"dependencies.html":{},"license.html":{}}}],["expression",{"_index":250,"title":{},"body":{"controllers/AppController.html":{}}}],["extends",{"_index":627,"title":{},"body":{"injectables/PrismaService.html":{}}}],["factory",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":463,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/StatsRegSubCommand.html":{},"injectables/TwitterService.html":{}}}],["fetchreply",{"_index":754,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["fi",{"_index":470,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["files",{"_index":1225,"title":{},"body":{"license.html":{}}}],["filters/discord",{"_index":333,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["filters/globalexceptions",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["filters/globalexceptions.ts",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["filters/globalexceptions.ts:14",{"_index":107,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["filters/globalexceptions.ts:18",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["finally",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["find",{"_index":1041,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["finland",{"_index":1171,"title":{},"body":{"index.html":{},"license.html":{}}}],["fired",{"_index":65,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["first",{"_index":219,"title":{},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["fitness",{"_index":1257,"title":{},"body":{"license.html":{}}}],["fns",{"_index":986,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["following",{"_index":1244,"title":{},"body":{"license.html":{}}}],["fom",{"_index":572,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["forever",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["forguild",{"_index":698,"title":{},"body":{"modules/SharedModule.html":{}}}],["format",{"_index":984,"title":{},"body":{"injectables/TwitterService.html":{}}}],["format(new",{"_index":1038,"title":{},"body":{"injectables/TwitterService.html":{}}}],["found",{"_index":798,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{}}}],["founderror",{"_index":996,"title":{},"body":{"injectables/TwitterService.html":{}}}],["framework",{"_index":1176,"title":{},"body":{"index.html":{}}}],["free",{"_index":1218,"title":{},"body":{"license.html":{}}}],["from:halosupport",{"_index":1049,"title":{},"body":{"injectables/TwitterService.html":{}}}],["function",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/TwitterService.html":{},"coverage.html":{}}}],["functions",{"_index":1165,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1242,"title":{},"body":{"license.html":{}}}],["gamer",{"_index":448,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["gamertag",{"_index":9,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["gamertagille",{"_index":842,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["gamertägisi",{"_index":836,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["gametag",{"_index":805,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["get.dto",{"_index":748,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["get.status",{"_index":474,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["get/get.command",{"_index":714,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["getclient",{"_index":1013,"title":{},"body":{"injectables/TwitterService.html":{}}}],["getcommands",{"_index":372,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["getdto",{"_index":504,"title":{"classes/GetDto.html":{}},"body":{"classes/GetDto.html":{},"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["getmotd",{"_index":521,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["getnewtweets",{"_index":972,"title":{},"body":{"injectables/TwitterService.html":{}}}],["gets",{"_index":398,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["getting",{"_index":1170,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":936,"title":{},"body":{"injectables/TwitterService.html":{}}}],["granted",{"_index":1217,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1277,"title":{},"body":{"modules.html":{}}}],["grenades",{"_index":70,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["grow",{"_index":1202,"title":{},"body":{"index.html":{}}}],["guildid",{"_index":896,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["guilds/${this._configservice.get('guildid')}/commands",{"_index":426,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["hakee",{"_index":841,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["halo",{"_index":240,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsHelpSubCommand.html":{},"index.html":{},"license.html":{}}}],["halodotapi",{"_index":518,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{}}}],["halodotapibaseurl",{"_index":552,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["halodotapiservice",{"_index":513,"title":{"injectables/HaloDotApiService.html":{}},"body":{"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"coverage.html":{},"overview.html":{}}}],["halosupport",{"_index":214,"title":{},"body":{"controllers/AppController.html":{}}}],["handler",{"_index":730,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["handler(@payload",{"_index":861,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["handler(dto",{"_index":736,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["hasparam",{"_index":757,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["headers",{"_index":434,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["headshots",{"_index":71,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["help",{"_index":464,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{}}}],["help.dto",{"_index":815,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["help/help.command",{"_index":712,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["helpful",{"_index":817,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["here",{"_index":141,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"index.html":{}}}],["hereby",{"_index":1216,"title":{},"body":{"license.html":{}}}],["hh:mm",{"_index":1039,"title":{},"body":{"injectables/TwitterService.html":{}}}],["hijacks",{"_index":52,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["holders",{"_index":1262,"title":{},"body":{"license.html":{}}}],["host",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":145,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hours",{"_index":456,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["http",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{}}}],["httpadapter",{"_index":136,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":154,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":161,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":105,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpmodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["httpmodule.registerasync",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cryptum.halodotapi.com",{"_index":553,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["https://cryptum.halodotapi.com/games/hi",{"_index":546,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["https://discord.com/api/v8/applications/${this._configservice.get",{"_index":424,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["https://docs.nestjs.com/middleware",{"_index":499,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["https://github.com/discordjs/discord.js/issues/7005",{"_index":756,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["https://github.com/ex1tium/halofinland",{"_index":843,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["https://twitter.com/${tweetauthor.username",{"_index":1032,"title":{},"body":{"injectables/TwitterService.html":{}}}],["httpservice",{"_index":374,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{}}}],["httpstatus",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/Oauth2DiscordController.html":{}}}],["httpstatus.internal_server_error",{"_index":148,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.ok",{"_index":622,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["human",{"_index":84,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["iconurl",{"_index":1031,"title":{},"body":{"injectables/TwitterService.html":{}}}],["id",{"_index":382,"title":{},"body":{"injectables/DiscordApiService.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["ids",{"_index":937,"title":{},"body":{"injectables/TwitterService.html":{}}}],["implements",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/ExampleMiddleWare.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["implied",{"_index":1253,"title":{},"body":{"license.html":{}}}],["import",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["include",{"_index":708,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["included",{"_index":1043,"title":{},"body":{"injectables/TwitterService.html":{},"license.html":{}}}],["including",{"_index":1229,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":631,"title":{},"body":{"injectables/PrismaService.html":{}}}],["infinite",{"_index":462,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["information",{"_index":818,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["init",{"_index":522,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["initial_measurement_matches",{"_index":28,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["initializing",{"_index":200,"title":{},"body":{"controllers/AppController.html":{}}}],["inject",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["injectable",{"_index":365,"title":{"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}},"body":{"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":366,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injects",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["inline",{"_index":776,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["input",{"_index":38,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["installation",{"_index":1184,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1186,"title":{},"body":{"index.html":{}}}],["instance",{"_index":921,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":146,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["intents",{"_index":658,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_message_reactions",{"_index":693,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_message_typing",{"_index":694,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_messages",{"_index":692,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_bans",{"_index":683,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_emojis_and_stickers",{"_index":684,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_integrations",{"_index":685,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_invites",{"_index":687,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_members",{"_index":682,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_message_reactions",{"_index":690,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_message_typing",{"_index":691,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_messages",{"_index":681,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_presences",{"_index":689,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_voice_states",{"_index":688,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_webhooks",{"_index":686,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guilds",{"_index":680,"title":{},"body":{"modules/SharedModule.html":{}}}],["interact",{"_index":923,"title":{},"body":{"injectables/TwitterService.html":{}}}],["interacting",{"_index":239,"title":{},"body":{"controllers/AppController.html":{}}}],["interaction",{"_index":354,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["interaction.deferred",{"_index":789,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.deferreply",{"_index":753,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.iscommand",{"_index":361,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["interaction.replied",{"_index":769,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.reply",{"_index":362,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["interaction.reply(reply).catch((error",{"_index":879,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["interaction.user.id",{"_index":760,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["interactionreplyoptions",{"_index":747,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageToUpperPipe.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{},"overview.html":{}}}],["inviting",{"_index":602,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["isglobal",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["ispublic",{"_index":512,"title":{},"body":{"classes/GetDto.html":{}}}],["issue",{"_index":948,"title":{},"body":{"injectables/TwitterService.html":{}}}],["jobs",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":603,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"index.html":{}}}],["json",{"_index":614,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.parse(configservice.get('allowguilds",{"_index":696,"title":{},"body":{"modules/SharedModule.html":{}}}],["json.stringify",{"_index":159,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["json.stringify(body.body",{"_index":621,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(deletecommand.data",{"_index":483,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["json.stringify(exception",{"_index":156,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["json.stringify(get.data",{"_index":476,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["json.stringify(request.body",{"_index":615,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(response.body",{"_index":618,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(search",{"_index":1055,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(this._client",{"_index":994,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(this._twitterusers",{"_index":1007,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(user",{"_index":1003,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(userexists",{"_index":868,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["json.stringify(value",{"_index":245,"title":{},"body":{"controllers/AppController.html":{}}}],["kda",{"_index":85,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["kdr",{"_index":86,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["kills",{"_index":54,"title":{"interfaces/Kills.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["kind",{"_index":1252,"title":{},"body":{"license.html":{}}}],["käyttäjän",{"_index":839,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["landed",{"_index":66,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["lang",{"_index":466,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{}}}],["language",{"_index":468,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"miscellaneous/enumerations.html":{}}}],["lastvaluefrom",{"_index":415,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["lastvaluefrom(post",{"_index":437,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["lastvaluefrom(this._http.get(url",{"_index":554,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["latest",{"_index":852,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["left",{"_index":79,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["liability",{"_index":1266,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1263,"title":{},"body":{"license.html":{}}}],["library",{"_index":665,"title":{},"body":{"modules/SharedModule.html":{}}}],["license",{"_index":1211,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":1201,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1230,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1254,"title":{},"body":{"license.html":{}}}],["list",{"_index":387,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/UserService.html":{}}}],["listen",{"_index":675,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":539,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/UserService.html":{}}}],["load",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["loaded",{"_index":1046,"title":{},"body":{"injectables/TwitterService.html":{}}}],["logged",{"_index":453,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsRegSubCommand.html":{}}}],["logger",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["logger('statsregsubcommand",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["logger(appcontroller.name",{"_index":193,"title":{},"body":{"controllers/AppController.html":{}}}],["logger(discordapiservice.name",{"_index":412,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["logger(examplemiddleware.name",{"_index":501,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["logger(halodotapiservice.name",{"_index":540,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["logger(oauth2discordcontroller.name",{"_index":609,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["logger(statsgetsubcommand.name",{"_index":735,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["logger(statsupdatesubcommand.name",{"_index":882,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["logger(twitterservice.name",{"_index":968,"title":{},"body":{"injectables/TwitterService.html":{}}}],["logging",{"_index":647,"title":{},"body":{"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{}}}],["logs",{"_index":497,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["losses",{"_index":78,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["made",{"_index":231,"title":{},"body":{"controllers/AppController.html":{}}}],["makes",{"_index":530,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["making",{"_index":516,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["map",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["matches",{"_index":76,"title":{"interfaces/Matches.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["matches_played",{"_index":88,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["matching",{"_index":45,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["max",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["maxredirects",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["means",{"_index":849,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["measurement_matches_remaining",{"_index":21,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["medals",{"_index":59,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["melee",{"_index":69,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["member",{"_index":897,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["memberpermissions",{"_index":898,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["merchantability",{"_index":1256,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1233,"title":{},"body":{"license.html":{}}}],["message",{"_index":350,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/SharedModule.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["message.author.bot",{"_index":580,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"modules/SharedModule.html":{}}}],["message.content",{"_index":592,"title":{},"body":{"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{}}}],["message.content.touppercase",{"_index":593,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["message_component",{"_index":902,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["messagecreate",{"_index":579,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["messageembed",{"_index":345,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["messageembed().addfields",{"_index":358,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["messageembed().setcolor('#40e0d0').addfields",{"_index":878,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["messageembed().setcolor('#dfff00').addfields",{"_index":873,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["messageembed().setcolor('#ff7f50').addfields",{"_index":804,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["messagefromuserguard",{"_index":570,"title":{"classes/MessageFromUserGuard.html":{}},"body":{"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["messagetoupperpipe",{"_index":581,"title":{"classes/MessageToUpperPipe.html":{}},"body":{"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["metadata",{"_index":339,"title":{},"body":{"classes/CommandValidationFilter.html":{},"dependencies.html":{}}}],["metadata.context",{"_index":355,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["method",{"_index":138,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{}}}],["methods",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":496,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["minutes",{"_index":253,"title":{},"body":{"controllers/AppController.html":{}}}],["miscellaneous",{"_index":1162,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missed",{"_index":67,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["mit",{"_index":1200,"title":{},"body":{"index.html":{},"license.html":{}}}],["mnk",{"_index":41,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["mode",{"_index":1189,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1232,"title":{},"body":{"license.html":{}}}],["module",{"_index":16,"title":{"modules/AppModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules/SharedModule.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"modules/Oauth2DiscordModule.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["modules",{"_index":260,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1210,"title":{},"body":{"index.html":{}}}],["motd",{"_index":555,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["ms",{"_index":932,"title":{},"body":{"injectables/TwitterService.html":{}}}],["name",{"_index":109,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":1178,"title":{},"body":{"index.html":{}}}],["nestapplication",{"_index":1167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs/axios",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":192,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":494,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["new",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newtweets",{"_index":207,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["newtweets.length",{"_index":212,"title":{},"body":{"controllers/AppController.html":{}}}],["newtweets.push(tweet",{"_index":1065,"title":{},"body":{"injectables/TwitterService.html":{}}}],["next",{"_index":490,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"injectables/TwitterService.html":{}}}],["next(tweets",{"_index":939,"title":{},"body":{"injectables/TwitterService.html":{}}}],["next_sub_tier",{"_index":27,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["next_tier",{"_index":25,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["next_tier_start",{"_index":26,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["nextfunction",{"_index":491,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["nickname",{"_index":722,"title":{},"body":{"classes/StatsDto.html":{}}}],["node.js",{"_index":1175,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1260,"title":{},"body":{"license.html":{}}}],["notfounduserids",{"_index":997,"title":{},"body":{"injectables/TwitterService.html":{}}}],["notfounduserids.push(user.errors[0].value",{"_index":1005,"title":{},"body":{"injectables/TwitterService.html":{}}}],["nothing",{"_index":933,"title":{},"body":{"injectables/TwitterService.html":{}}}],["notice",{"_index":1247,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1185,"title":{},"body":{"index.html":{}}}],["null",{"_index":364,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["number",{"_index":14,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["oauth2",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{}}}],["oauth2discordcontroller",{"_index":594,"title":{"controllers/Oauth2DiscordController.html":{}},"body":{"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["oauth2discordmodule",{"_index":265,"title":{"modules/Oauth2DiscordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules.html":{},"overview.html":{}}}],["object",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{}}}],["object.values(exception.constraints).map((value",{"_index":359,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["objects",{"_index":389,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/MessageToUpperPipe.html":{},"injectables/UserService.html":{}}}],["observable",{"_index":209,"title":{},"body":{"controllers/AppController.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["obtaining",{"_index":1221,"title":{},"body":{"license.html":{}}}],["ohjeistus",{"_index":825,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["ok",{"_index":599,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["old",{"_index":874,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["once",{"_index":181,"title":{},"body":{"controllers/AppController.html":{}}}],["once('ready",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["onmoduledestroy",{"_index":165,"title":{},"body":{"controllers/AppController.html":{}}}],["onmoduleinit",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{}}}],["onready",{"_index":168,"title":{},"body":{"controllers/AppController.html":{}}}],["open",{"_index":35,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{},"index.html":{}}}],["option",{"_index":670,"title":{},"body":{"modules/SharedModule.html":{}}}],["optional",{"_index":110,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["options",{"_index":327,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{}}}],["options.model",{"_index":417,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["options.model.ts",{"_index":325,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"coverage.html":{}}}],["orderby",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{}}}],["otherwise",{"_index":1270,"title":{},"body":{"license.html":{}}}],["out",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1278,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1138,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":420,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{}}}],["param({description",{"_index":506,"title":{},"body":{"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["parameter",{"_index":220,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["parametri",{"_index":827,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["params",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["paramtype",{"_index":508,"title":{},"body":{"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/UpdateDto.html":{}}}],["paramtype.integer",{"_index":724,"title":{},"body":{"classes/StatsDto.html":{}}}],["particular",{"_index":1258,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":610,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["patch",{"_index":945,"title":{},"body":{"injectables/TwitterService.html":{}}}],["path",{"_index":153,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["paths",{"_index":671,"title":{},"body":{"modules/SharedModule.html":{}}}],["payload",{"_index":742,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["permission",{"_index":409,"title":{},"body":{"injectables/DiscordApiService.html":{},"license.html":{}}}],["permit",{"_index":1240,"title":{},"body":{"license.html":{}}}],["person",{"_index":1220,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1241,"title":{},"body":{"license.html":{}}}],["phone",{"_index":720,"title":{},"body":{"classes/StatsDto.html":{}}}],["phonenumber",{"_index":721,"title":{},"body":{"classes/StatsDto.html":{}}}],["ping",{"_index":901,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["played",{"_index":781,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["player",{"_index":534,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["please",{"_index":1209,"title":{},"body":{"index.html":{}}}],["pollhalosupporttweets",{"_index":911,"title":{},"body":{"injectables/TwitterService.html":{}}}],["polllatesttweetsfromhalosupport",{"_index":169,"title":{},"body":{"controllers/AppController.html":{}}}],["port",{"_index":1168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["portions",{"_index":1250,"title":{},"body":{"license.html":{}}}],["post",{"_index":405,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["power_weapons",{"_index":72,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["prefix",{"_index":597,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["prints",{"_index":751,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["prisma",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botusercreateinput",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserorderbywithrelationinput",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserupdateinput",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserwhereinput",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserwhereuniqueinput",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.service",{"_index":982,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["prisma/client",{"_index":639,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":628,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":625,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/PrismaService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":99,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["problem",{"_index":947,"title":{},"body":{"injectables/TwitterService.html":{}}}],["production",{"_index":1179,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1174,"title":{},"body":{"index.html":{}}}],["project",{"_index":1198,"title":{},"body":{"index.html":{}}}],["promise",{"_index":343,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["promise(resolve",{"_index":1068,"title":{},"body":{"injectables/TwitterService.html":{}}}],["promise.reject('check",{"_index":430,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["promise.reject('could",{"_index":1040,"title":{},"body":{"injectables/TwitterService.html":{}}}],["promise.reject(`api",{"_index":477,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["promise.reject(`error",{"_index":441,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["promise.reject(`problem",{"_index":1018,"title":{},"body":{"injectables/TwitterService.html":{}}}],["promise.reject(`user",{"_index":1008,"title":{},"body":{"injectables/TwitterService.html":{}}}],["promise.reject(error",{"_index":793,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["promise.reject(this._logger.error(error",{"_index":444,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["promise.reject(this._logger.error(error.stack",{"_index":443,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["property",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["provide",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["provided",{"_index":717,"title":{},"body":{"classes/StatsBaseCommand.html":{},"license.html":{}}}],["providers",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["provides",{"_index":666,"title":{},"body":{"modules/SharedModule.html":{}}}],["publicstats",{"_index":510,"title":{},"body":{"classes/GetDto.html":{}}}],["publish",{"_index":1234,"title":{},"body":{"license.html":{}}}],["pull",{"_index":461,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["purpose",{"_index":1259,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":601,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["päivit",{"_index":837,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["query",{"_index":459,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsGetSubCommand.html":{}}}],["queue",{"_index":34,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["queuegroups",{"_index":33,"title":{"interfaces/QueueGroups.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["ran",{"_index":228,"title":{},"body":{"controllers/AppController.html":{}}}],["read",{"_index":465,"title":{},"body":{"injectables/DiscordApiService.html":{},"index.html":{}}}],["readonly",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["ready",{"_index":1180,"title":{},"body":{"index.html":{}}}],["record",{"_index":533,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["record.models.ts",{"_index":48,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["record/global",{"_index":568,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["recordtweet",{"_index":912,"title":{},"body":{"injectables/TwitterService.html":{}}}],["recordtweet(tweetdata",{"_index":955,"title":{},"body":{"injectables/TwitterService.html":{}}}],["redirects",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["reg",{"_index":446,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["register",{"_index":216,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"miscellaneous/functions.html":{}}}],["register.dto",{"_index":857,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["register/register.command",{"_index":710,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["registercommandoptions",{"_index":697,"title":{},"body":{"modules/SharedModule.html":{}}}],["registerdto",{"_index":645,"title":{"classes/RegisterDto.html":{}},"body":{"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["registered",{"_index":399,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["registering",{"_index":442,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["registernewcommand",{"_index":215,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{}}}],["registernewcommand(name",{"_index":400,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["registers",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"classes/StatsHelpSubCommand.html":{}}}],["rekisteröi",{"_index":835,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["release",{"_index":946,"title":{},"body":{"injectables/TwitterService.html":{}}}],["replied",{"_index":899,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["reply",{"_index":844,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["replymessage",{"_index":762,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["represent",{"_index":390,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["req",{"_index":493,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{}}}],["req.body",{"_index":503,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["request",{"_index":406,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{}}}],["request.data",{"_index":562,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["request.json",{"_index":612,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["request.status",{"_index":561,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestjson",{"_index":611,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["requestplayerservicerecord",{"_index":523,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestplayerservicerecord(gamertag",{"_index":531,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{}}}],["requestplayerstatscsr",{"_index":524,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestplayerstatscsr(gamertag",{"_index":535,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{}}}],["requests",{"_index":517,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["required",{"_index":328,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["res",{"_index":489,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"controllers/Oauth2DiscordController.html":{}}}],["reset",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["residence",{"_index":727,"title":{},"body":{"classes/StatsDto.html":{}}}],["resolve",{"_index":140,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responded",{"_index":478,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["response",{"_index":31,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Additional.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["response.json",{"_index":617,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["responsebody",{"_index":149,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responsejson",{"_index":616,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["responsible",{"_index":515,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["restriction",{"_index":1228,"title":{},"body":{"license.html":{}}}],["result",{"_index":436,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["result.data",{"_index":440,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["result.status",{"_index":438,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["results",{"_index":44,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":255,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":120,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["returnvalue",{"_index":558,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["rights",{"_index":1231,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":251,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["running",{"_index":236,"title":{},"body":{"controllers/AppController.html":{}}}],["rxjs",{"_index":186,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["schedulemodule",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["scope",{"_index":408,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["se",{"_index":830,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["search",{"_index":1047,"title":{},"body":{"injectables/TwitterService.html":{}}}],["search.data.data.sort((a",{"_index":1057,"title":{},"body":{"injectables/TwitterService.html":{}}}],["searches",{"_index":935,"title":{},"body":{"injectables/TwitterService.html":{}}}],["season",{"_index":10,"title":{"interfaces/Season.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["second",{"_index":221,"title":{},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{}}}],["seconds",{"_index":83,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["see",{"_index":950,"title":{},"body":{"injectables/TwitterService.html":{}}}],["select",{"_index":467,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpDto.html":{}}}],["sell",{"_index":1238,"title":{},"body":{"license.html":{}}}],["send",{"_index":349,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/TwitterService.html":{}}}],["sendchannel",{"_index":913,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sendchannel(channelid",{"_index":959,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sending",{"_index":1019,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sends",{"_index":404,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/TwitterService.html":{}}}],["server",{"_index":604,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{}}}],["service",{"_index":384,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["servicerecord",{"_index":91,"title":{"interfaces/ServiceRecord.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["servicerecordsmodels",{"_index":49,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["servicerecordsmodels.servicerecord",{"_index":565,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["services",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["services/discord",{"_index":188,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["services/twitter.service",{"_index":184,"title":{},"body":{"controllers/AppController.html":{}}}],["set",{"_index":673,"title":{},"body":{"modules/SharedModule.html":{}}}],["setauthor",{"_index":1029,"title":{},"body":{"injectables/TwitterService.html":{}}}],["setcolor('#0099ff",{"_index":822,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setcolor('#ccccff",{"_index":770,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setcolor('#dfff00",{"_index":887,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["setcolor('#ff0000",{"_index":795,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setdescription",{"_index":824,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setdescription(`stats",{"_index":797,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setdescription(statscsr.data[0].response.current.tier",{"_index":773,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setfooter",{"_index":783,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["sets",{"_index":377,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["setthumbnail(statscsr.data[0].response.current.tier_image_url",{"_index":771,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["settimeout(resolve",{"_index":1069,"title":{},"body":{"injectables/TwitterService.html":{}}}],["settimestamp",{"_index":788,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["settimestamp(new",{"_index":1036,"title":{},"body":{"injectables/TwitterService.html":{}}}],["settitle('error",{"_index":796,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["settitle('help",{"_index":847,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["settitle('ohjeet",{"_index":823,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["settitle(gamertag",{"_index":772,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["seturl(`https://twitter.com/i/web/status/${tweet.id",{"_index":1028,"title":{},"body":{"injectables/TwitterService.html":{}}}],["shall",{"_index":1248,"title":{},"body":{"license.html":{}}}],["shared",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/shared.module",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":266,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shots",{"_index":64,"title":{"interfaces/Shots.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["shows",{"_index":816,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["shutting",{"_index":633,"title":{},"body":{"injectables/PrismaService.html":{}}}],["simple",{"_index":598,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["situations",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["skip",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{}}}],["software",{"_index":1223,"title":{},"body":{"license.html":{}}}],["solo",{"_index":36,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["sortdata",{"_index":1056,"title":{},"body":{"injectables/TwitterService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"index.html":{}}}],["sponsors",{"_index":1204,"title":{},"body":{"index.html":{}}}],["src/.../help.dto.ts",{"_index":1164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:26",{"_index":175,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:29",{"_index":178,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:77",{"_index":180,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:88",{"_index":170,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["src/commands/stats/get/get.command.ts",{"_index":728,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/get/get.command.ts:24",{"_index":733,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["src/commands/stats/get/get.command.ts:31",{"_index":738,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["src/commands/stats/get/get.dto.ts",{"_index":505,"title":{},"body":{"classes/GetDto.html":{},"coverage.html":{}}}],["src/commands/stats/get/get.dto.ts:10",{"_index":507,"title":{},"body":{"classes/GetDto.html":{}}}],["src/commands/stats/help/help.command.ts",{"_index":812,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/help/help.command.ts:20",{"_index":813,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["src/commands/stats/help/help.command.ts:24",{"_index":814,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["src/commands/stats/help/help.dto.ts",{"_index":808,"title":{},"body":{"classes/StatsHelpDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/commands/stats/help/help.dto.ts:11",{"_index":810,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["src/commands/stats/register/register.command.ts",{"_index":853,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/register/register.command.ts:26",{"_index":855,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["src/commands/stats/register/register.command.ts:30",{"_index":856,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["src/commands/stats/register/register.dto.ts",{"_index":646,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/commands/stats/register/register.dto.ts:5",{"_index":649,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/commands/stats/register/register.dto.ts:7",{"_index":648,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/commands/stats/stats.command.ts",{"_index":703,"title":{},"body":{"classes/StatsBaseCommand.html":{},"coverage.html":{}}}],["src/commands/stats/stats.dto.ts",{"_index":719,"title":{},"body":{"classes/StatsDto.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.command.ts",{"_index":880,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.command.ts:27",{"_index":881,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["src/commands/stats/update/update.command.ts:31",{"_index":884,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["src/commands/stats/update/update.dto.ts",{"_index":1070,"title":{},"body":{"classes/UpdateDto.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.dto.ts:5",{"_index":1071,"title":{},"body":{"classes/UpdateDto.html":{}}}],["src/controllers/oauth2",{"_index":595,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["src/exception",{"_index":95,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["src/guards/message",{"_index":571,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/example.middleware.ts",{"_index":485,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"coverage.html":{}}}],["src/middleware/example.middleware.ts:12",{"_index":492,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["src/middleware/example.middleware.ts:7",{"_index":487,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["src/models/interaction",{"_index":891,"title":{},"body":{"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["src/models/sub",{"_index":324,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["src/pipes/message",{"_index":582,"title":{},"body":{"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["src/services/discord",{"_index":367,"title":{},"body":{"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["src/services/halodotapi/csrs.models.ts",{"_index":6,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["src/services/halodotapi/halodotapi.service",{"_index":659,"title":{},"body":{"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{}}}],["src/services/halodotapi/halodotapi.service.ts",{"_index":514,"title":{},"body":{"injectables/HaloDotApiService.html":{},"coverage.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:15",{"_index":541,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:17",{"_index":538,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:18",{"_index":526,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:35",{"_index":529,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:56",{"_index":528,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:69",{"_index":536,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:98",{"_index":532,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/service",{"_index":47,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["src/services/prisma.service",{"_index":660,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/services/prisma.service.ts",{"_index":626,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/services/prisma.service.ts:10",{"_index":637,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/prisma.service.ts:18",{"_index":632,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/twitter.service",{"_index":661,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/services/twitter.service.ts",{"_index":904,"title":{},"body":{"injectables/TwitterService.html":{},"coverage.html":{}}}],["src/services/twitter.service.ts:104",{"_index":973,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:112",{"_index":940,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:123",{"_index":960,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:152",{"_index":926,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:202",{"_index":942,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:23",{"_index":969,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:24",{"_index":965,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:26",{"_index":967,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:268",{"_index":956,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:293",{"_index":963,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:30",{"_index":970,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:31",{"_index":920,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:324",{"_index":931,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:61",{"_index":934,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/user.service",{"_index":662,"title":{},"body":{"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["src/services/user.service.ts",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:18",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:31",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:53",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:6",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:64",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:80",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["src/shared/shared.module.ts",{"_index":655,"title":{},"body":{"modules/SharedModule.html":{}}}],["start",{"_index":1182,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1190,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1191,"title":{},"body":{"index.html":{}}}],["started",{"_index":249,"title":{"index.html":{},"license.html":{}},"body":{"controllers/AppController.html":{}}}],["starts",{"_index":640,"title":{},"body":{"injectables/PrismaService.html":{}}}],["startup",{"_index":229,"title":{},"body":{"controllers/AppController.html":{}}}],["statements",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":226,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["stats/players/${gamertag}/csrs",{"_index":560,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["stats/players/${gamertag}/service",{"_index":567,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["statsbasecommand",{"_index":702,"title":{"classes/StatsBaseCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"coverage.html":{}}}],["statscsr",{"_index":764,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statscsr.data",{"_index":767,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsdto",{"_index":718,"title":{"classes/StatsDto.html":{}},"body":{"classes/StatsDto.html":{},"coverage.html":{}}}],["statsgetsubcommand",{"_index":713,"title":{"classes/StatsGetSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["statshelpdto",{"_index":807,"title":{"classes/StatsHelpDto.html":{}},"body":{"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["statshelpsubcommand",{"_index":711,"title":{"classes/StatsHelpSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["statsrecord",{"_index":766,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data",{"_index":768,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.kda.tofixed(1",{"_index":779,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.kdr.tofixed(1",{"_index":780,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.matches_played",{"_index":782,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.assists",{"_index":778,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.deaths",{"_index":777,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.kills",{"_index":775,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.time_played.human",{"_index":786,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.win_rate.tofixed(1",{"_index":787,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsregsubcommand",{"_index":709,"title":{"classes/StatsRegSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["statssubcommands",{"_index":445,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["statsupdatesubcommand",{"_index":715,"title":{"classes/StatsUpdateSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"coverage.html":{}}}],["status",{"_index":479,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["statuscode",{"_index":150,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["store",{"_index":975,"title":{},"body":{"injectables/TwitterService.html":{}}}],["string",{"_index":11,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["sub",{"_index":707,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["sub.unsubscribe",{"_index":258,"title":{},"body":{"controllers/AppController.html":{}}}],["sub_command",{"_index":241,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{}}}],["sub_command_group",{"_index":401,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["sub_tier",{"_index":24,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["subcommand",{"_index":743,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["subcommands",{"_index":848,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["subject",{"_index":1243,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1236,"title":{},"body":{"license.html":{}}}],["subscribing",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["subscription",{"_index":185,"title":{},"body":{"controllers/AppController.html":{}}}],["subscriptions",{"_index":172,"title":{},"body":{"controllers/AppController.html":{}}}],["substantial",{"_index":1249,"title":{},"body":{"license.html":{}}}],["suicides",{"_index":58,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["summary",{"_index":53,"title":{"interfaces/Summary.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["suomeksi",{"_index":469,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["support",{"_index":1205,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporttweetchannelids",{"_index":1066,"title":{},"body":{"injectables/TwitterService.html":{}}}],["svg",{"_index":1275,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":449,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["tai",{"_index":840,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["take",{"_index":416,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/UserService.html":{}}}],["taken",{"_index":61,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["takes",{"_index":403,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{}}}],["tarkoittaa",{"_index":828,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["test",{"_index":1194,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1197,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1196,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1193,"title":{},"body":{"index.html":{}}}],["text",{"_index":784,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["textchannel",{"_index":983,"title":{},"body":{"injectables/TwitterService.html":{}}}],["thanks",{"_index":1203,"title":{},"body":{"index.html":{}}}],["themselves",{"_index":706,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["then((reply",{"_index":791,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["then((value",{"_index":243,"title":{},"body":{"controllers/AppController.html":{}}}],["third",{"_index":223,"title":{},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{}}}],["this.$connect",{"_index":642,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":643,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._client",{"_index":991,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._client.v2.search",{"_index":1048,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._client.v2.user(twitteruserid",{"_index":999,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._configservice.get('halodottoken",{"_index":548,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._configservice.get('supporttweetchannelids').split",{"_index":1067,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._configservice.get('token",{"_index":422,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._configservice.get('twitterallowedsearchauthorids').split",{"_index":988,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._configservice.get('twitterbearertoken",{"_index":992,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._discordapiservice.constructstatscommand",{"_index":242,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.getcommands",{"_index":247,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.registernewcommand('stats",{"_index":237,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordprovider",{"_index":1012,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._halodotapi",{"_index":765,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._halodotapiinfinitebaseurl",{"_index":545,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._halosupporttweets.asobservable",{"_index":1010,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._halosupporttweets.next([...tweets",{"_index":1011,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._headers",{"_index":547,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._http.get(url",{"_index":557,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._httpservice.delete(this.discordurl",{"_index":480,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._httpservice.get(this.discordurl",{"_index":473,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._httpservice.post(this.discordurl",{"_index":433,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._logger",{"_index":500,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["this._logger.debug",{"_index":482,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["this._logger.debug('search",{"_index":1054,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug('searching",{"_index":1053,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug(`gamertag",{"_index":763,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.debug(`registered",{"_index":475,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._logger.debug(`twitter",{"_index":993,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug(`url",{"_index":556,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.error",{"_index":157,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this._logger.error(error",{"_index":203,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{}}}],["this._logger.log('bot",{"_index":248,"title":{},"body":{"controllers/AppController.html":{}}}],["this._logger.verbose(`found",{"_index":211,"title":{},"body":{"controllers/AppController.html":{}}}],["this._logger.verbose(`registered",{"_index":244,"title":{},"body":{"controllers/AppController.html":{}}}],["this._logger.verbose(`request",{"_index":613,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["this._logger.verbose(`twitter",{"_index":1002,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.verbose(interaction",{"_index":889,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["this._logger.verbose(json.stringify(defer",{"_index":755,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.verbose(json.stringify(dto",{"_index":888,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["this._logger.verbose(reply",{"_index":792,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.warn('examplemiddleware",{"_index":502,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["this._logger.warn(`allowlogging",{"_index":863,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.warn(`url",{"_index":569,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.warn(`userexists",{"_index":867,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.warn(data",{"_index":432,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._prismaservice.tweet.findunique",{"_index":1061,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._submap.foreach((sub",{"_index":257,"title":{},"body":{"controllers/AppController.html":{}}}],["this._submap.set",{"_index":206,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterallowedsearchauthorids",{"_index":987,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._twitterservice.init().catch((error",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterservice.newtweets$.subscribe((newtweets",{"_index":210,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterservice.pollhalosupporttweets",{"_index":256,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterusers",{"_index":995,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._twitterusers.filter((user",{"_index":1025,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._twitterusers.push(user.data",{"_index":1004,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._twitterusers.some(user",{"_index":1021,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._userservice",{"_index":800,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._userservice.createuser",{"_index":872,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._userservice.updateuser",{"_index":870,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["this._userservice.user",{"_index":865,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["this.bottoken",{"_index":421,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this.constructembedtweetmessage(tweet).catch((error",{"_index":1016,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.discordurl",{"_index":423,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this.httpadapterhost",{"_index":143,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.pollhalosupporttweets().catch((error",{"_index":1006,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.prisma.botuser.create",{"_index":1105,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.delete",{"_index":1108,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.findmany",{"_index":1104,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.findunique",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.update",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["this.recordtweet(tweet",{"_index":1064,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.twitterallowedsearchauthorids",{"_index":990,"title":{},"body":{"injectables/TwitterService.html":{}}}],["throw",{"_index":563,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["thrown",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["thus",{"_index":139,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["tier",{"_index":22,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tier_image_url",{"_index":29,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tier_start",{"_index":23,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tilastot",{"_index":838,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["time",{"_index":785,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["time_played",{"_index":89,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["timeout",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["timeplayed",{"_index":82,"title":{"interfaces/TimePlayed.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["timestamp",{"_index":151,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["todo",{"_index":232,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{}}}],["tojson.model.ts",{"_index":892,"title":{},"body":{"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["tojsonresponse",{"_index":890,"title":{"interfaces/ToJsonResponse.html":{}},"body":{"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["token",{"_index":379,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{}}}],["tort",{"_index":1269,"title":{},"body":{"license.html":{}}}],["total_score",{"_index":87,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["transform",{"_index":585,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transform([message",{"_index":591,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transform(undefined",{"_index":586,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transformpipe",{"_index":740,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["true",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{}}}],["true})@choice(language",{"_index":809,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["try",{"_index":254,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["tulostaa",{"_index":832,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["tweet",{"_index":929,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.author_id",{"_index":1023,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.author_id)[0",{"_index":1026,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.fields",{"_index":1050,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.id",{"_index":1063,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.text",{"_index":1033,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet](https://twitter.com/i/web/status/${tweet.id",{"_index":1035,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet_id",{"_index":1062,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetauthor",{"_index":1024,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetauthor.username",{"_index":1030,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata",{"_index":958,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweets",{"_index":213,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["tweetstream",{"_index":977,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetv2",{"_index":925,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetv2singleresult",{"_index":978,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitter",{"_index":938,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["twitter_allowed_search_author_ids",{"_index":1045,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitterapi",{"_index":922,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitterapiv2",{"_index":979,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitterservice",{"_index":183,"title":{"injectables/TwitterService.html":{}},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"coverage.html":{},"overview.html":{}}}],["twitteruserid",{"_index":998,"title":{},"body":{"injectables/TwitterService.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["types",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["tämän",{"_index":833,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["undefined",{"_index":566,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{}}}],["unique",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["unit",{"_index":1192,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["unsubscribes",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["update",{"_index":458,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["update.dto",{"_index":885,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["update/update.command",{"_index":716,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["updated",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedto",{"_index":883,"title":{"classes/UpdateDto.html":{}},"body":{"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["updates",{"_index":851,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(params",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["upper.pipe.ts",{"_index":583,"title":{},"body":{"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["upper.pipe.ts:9",{"_index":587,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["uppercase",{"_index":590,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["upsert",{"_index":964,"title":{},"body":{"injectables/TwitterService.html":{}}}],["upserttweet",{"_index":914,"title":{},"body":{"injectables/TwitterService.html":{}}}],["upserttweet(tweetdata",{"_index":962,"title":{},"body":{"injectables/TwitterService.html":{}}}],["url",{"_index":380,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["use",{"_index":460,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/StatsUpdateSubCommand.html":{},"license.html":{}}}],["use(req",{"_index":488,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["useclass",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["used",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"controllers/Oauth2DiscordController.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["usefactory",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["usefilters",{"_index":745,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["usefilters(commandvalidationfilter",{"_index":749,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["usepipes",{"_index":744,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["usepipes(transformpipe",{"_index":750,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["user",{"_index":351,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":886,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["user(userwhereuniqueinput",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["user.data",{"_index":1000,"title":{},"body":{"injectables/TwitterService.html":{}}}],["user.errors",{"_index":1001,"title":{},"body":{"injectables/TwitterService.html":{}}}],["user.guard.ts",{"_index":573,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["user.guard.ts:5",{"_index":577,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["user.id",{"_index":1022,"title":{},"body":{"injectables/TwitterService.html":{}}}],["userexists",{"_index":864,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["userexists.discord_user_id",{"_index":869,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["userexists.gamertag",{"_index":875,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["userid",{"_index":759,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["users",{"_index":859,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["users(params",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":654,"title":{"injectables/UserService.html":{}},"body":{"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userv2",{"_index":971,"title":{},"body":{"injectables/TwitterService.html":{}}}],["userv2result",{"_index":980,"title":{},"body":{"injectables/TwitterService.html":{}}}],["userwhereuniqueinput",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1199,"title":{},"body":{"index.html":{}}}],["v2",{"_index":981,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["valid",{"_index":1009,"title":{},"body":{"injectables/TwitterService.html":{}}}],["validation",{"_index":347,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["validation.ts",{"_index":334,"title":{},"body":{"classes/CommandValidationFilter.html":{},"coverage.html":{}}}],["validation.ts:13",{"_index":336,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validation.ts:15",{"_index":341,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validationerror",{"_index":338,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validationpipe",{"_index":746,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["validator",{"_index":344,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["valinnainen",{"_index":831,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["value",{"_index":20,"title":{},"body":{"interfaces/Additional.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"miscellaneous/enumerations.html":{}}}],["variables",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["vehicles",{"_index":50,"title":{"interfaces/Vehicles.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["version",{"_index":544,"title":{},"body":{"injectables/HaloDotApiService.html":{},"interfaces/ToJsonResponse.html":{}}}],["versions",{"_index":1181,"title":{},"body":{"index.html":{}}}],["viestin",{"_index":834,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["void",{"_index":121,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/TwitterService.html":{}}}],["want",{"_index":395,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsRegSubCommand.html":{}}}],["warranties",{"_index":1255,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1251,"title":{},"body":{"license.html":{}}}],["wasupdated",{"_index":866,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["watch",{"_index":1188,"title":{},"body":{"index.html":{}}}],["way",{"_index":667,"title":{},"body":{"modules/SharedModule.html":{}}}],["whether",{"_index":860,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"license.html":{}}}],["win_rate",{"_index":90,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["wins",{"_index":77,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["without",{"_index":1227,"title":{},"body":{"license.html":{}}}],["words",{"_index":944,"title":{},"body":{"injectables/TwitterService.html":{}}}],["wrapper",{"_index":663,"title":{},"body":{"modules/SharedModule.html":{}}}],["write",{"_index":233,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{}}}],["xbox",{"_index":447,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["yes",{"_index":410,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsHelpSubCommand.html":{}}}],["you'd",{"_index":1208,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Additional.html":{"url":"interfaces/Additional.html","title":"interface - Additional","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Additional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gamertag\n                                        \n                                \n                                \n                                        \n                                            season\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gamertag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gamertag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        season:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Additional-1.html":{"url":"interfaces/Additional-1.html","title":"interface - Additional-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Additional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gamertag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gamertag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gamertag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exception-filters/globalExceptions.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/exception-filters/globalExceptions.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/exception-filters/globalExceptions.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exception-filters/globalExceptions.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n/* The @Catch() decorator is used to catch all exceptions thrown by the controller methods. */\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) { }\n\n  catch(exception: unknown, host: ArgumentsHost): void {\n    // In certain situations `httpAdapter` might not be available in the\n    // constructor method, thus we should resolve it here.\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const ctx = host.switchToHttp();\n\n    const httpStatus =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const responseBody = {\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n      error: JSON.stringify(exception),\n    };\n\n    this._logger.error(\n      `AllExcepetionsFilter error response: ${JSON.stringify(\n        ctx.getResponse(),\n      )}`,\n    );\n\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AllTime.html":{"url":"interfaces/AllTime.html","title":"interface - AllTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AllTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onModuleDestroy\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    Async\n                                onReady\n                            \n                            \n                                    Async\n                                pollLatestTweetsFromHaloSupport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \nonModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:88\n                \n            \n\n\n            \n                \n                    It unsubscribes from all the subscriptions that were created in the onModuleInit function.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onReady\n                        \n                    \n                \n            \n            \n                \n                    \n                    onReady()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Once('ready')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        pollLatestTweetsFromHaloSupport\n                        \n                    \n                \n            \n            \n                \n                    \n                    pollLatestTweetsFromHaloSupport()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_5_MINUTES)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Logger,\n  OnModuleDestroy,\n  OnModuleInit,\n} from '@nestjs/common';\nimport {\n  Once,\n} from '@discord-nestjs/core';\nimport { TwitterService } from './services/twitter.service';\nimport { Subscription } from 'rxjs';\nimport { DiscordApiService } from './services/discord-api.service';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\n\n@Controller()\nexport class AppController implements OnModuleInit, OnModuleDestroy {\n  private readonly _logger = new Logger(AppController.name);\n  private _subMap = new Map();\n\n  constructor(\n    private _twitterService: TwitterService,\n    private _discordApiService: DiscordApiService,\n  ) { }\n\n  onModuleInit() { }\n\n  @Once('ready')\n  async onReady() {\n\n    /* The below code is initializing the TwitterService. */\n    await this._twitterService.init().catch((error) => {\n      this._logger.error(error);\n    }).then(() => {\n\n    })\n\n    /* The _subMap is a map of the\n    subscriptions. The _subMap.set() method adds a subscription to the map. */\n    this._subMap.set(\n      'newTweets',\n      /* Subscribing to the newTweets$ observable. */\n      this._twitterService.newTweets$.subscribe((newTweets) => {\n        if (newTweets) {\n          this._logger.verbose(`Found ${newTweets.length} new tweets from @HaloSupport`);\n        }\n      }),\n    );\n\n\n    /* The `registerNewCommand` method is used to register a new command with the Discord API. The first\n    parameter is the name of the command, the second parameter is a description of the command, and\n    the third parameter is the type of the command. The `constructStatsCommand` method is used\n    to construct stats the command. */\n\n    // Doesn't have to be ran every startup. Only if changes are made\n    // TODO write commandline argument for running this command?\n    await this._discordApiService.registerNewCommand('stats', 'Commands for interacting with Halo Stats API', 'sub_command', await this._discordApiService.constructStatsCommand())\n      .then((value) => {\n        // this._logger.verbose(`Registered command: ${JSON.stringify(value)}`)\n      }).catch((error) => {\n        this._logger.error(error)\n      })\n\n\n    await this._discordApiService.getCommands()\n      .catch((error) => {\n        this._logger.error(error)\n      })\n\n    this._logger.log('Bot was started!');\n\n  }\n\n  /* This is a cron expression that will run every 5 minutes. */\n  @Cron(CronExpression.EVERY_5_MINUTES)\n  async pollLatestTweetsFromHaloSupport() {\n    try {\n      return await this._twitterService.pollHaloSupportTweets();\n    } catch (error) {\n      this._logger.error(error);\n    }\n  }\n\n  /**\n   * It unsubscribes from all the subscriptions that were created in the onModuleInit function.\n   */\n  onModuleDestroy() {\n    this._subMap.forEach((sub) => sub.unsubscribe());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nOauth2DiscordModule\n\nOauth2DiscordModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nOauth2DiscordModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDiscordApiService\n\nDiscordApiService\n\nAppModule -->\n\nDiscordApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiscordApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            Oauth2DiscordModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport config from '../environment/config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { HttpModule } from '@nestjs/axios';\nimport { SharedModule } from './shared/shared.module';\nimport { DiscordApiService } from './services/discord-api.service';\nimport { AllExceptionsFilter } from './exception-filters/globalExceptions';\nimport { APP_FILTER } from '@nestjs/core';\nimport { Oauth2DiscordModule } from './controllers/oauth2-discord/oauth2-discord.module';\n\n/* We import the ConfigModule, which will load the environment variables from the .env file. We then\nimport the HttpModule, which will configure the timeout and max redirects for the HTTP client. We\nthen import the ScheduleModule, which will configure the cron jobs. We then import the\nOauth2DiscordModule, which will configure the Discord OAuth2 callback. Finally, we import the\nSharedModule, which will configure the shared services. */\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: ['./environment/.env'],\n      isGlobal: true,\n      load: [config],\n    }),\n    /* The HttpModule is a class that registers an async factory function that returns an object with a\n    timeout property and a maxRedirects property. The ConfigModule is a class that registers an async\n    factory function that returns an object with a timeout property and a maxRedirects property. The\n    ConfigService is a class that injects the ConfigModule and returns the object with a timeout\n    property and a maxRedirects property. */\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async () => ({\n        timeout: 10000,\n        maxRedirects: 3,\n      }),\n      inject: [ConfigService],\n    }),\n    ScheduleModule.forRoot(),\n    Oauth2DiscordModule,\n    SharedModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    DiscordApiService,\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Assists.html":{"url":"interfaces/Assists.html","title":"interface - Assists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Assists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callouts\n                                        \n                                \n                                \n                                        \n                                            driver\n                                        \n                                \n                                \n                                        \n                                            emp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callouts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callouts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        driver\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        driver:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Breakdowns.html":{"url":"interfaces/Breakdowns.html","title":"interface - Breakdowns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Breakdowns\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assists\n                                        \n                                \n                                \n                                        \n                                            kills\n                                        \n                                \n                                \n                                        \n                                            matches\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assists:         Assists\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Assists\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kills\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kills:         Kills\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Kills\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matches:         Matches\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Matches\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Choice.html":{"url":"interfaces/Choice.html","title":"interface - Choice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Choice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sub-command-options.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefineDiscordCommand {\n  name: string;\n  description: string;\n  type?: number;\n  options?: DefineDiscordCommand[];\n  required?: boolean;\n  default_permission?: boolean;\n  choices?: Choice[];\n}\n\nexport interface Choice {\n  name: string;\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommandValidationFilter.html":{"url":"classes/CommandValidationFilter.html","title":"class - CommandValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommandValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exception-filters/discord-command-validation.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/exception-filters/discord-command-validation.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exceptionList: ValidationError[], metadata: DiscordArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/exception-filters/discord-command-validation.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exceptionList\n                                    \n                                            ValidationError[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            DiscordArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  DiscordArgumentMetadata,\n  DiscordExceptionFilter,\n  Catch,\n} from '@discord-nestjs/core';\nimport { Logger } from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { MessageEmbed } from 'discord.js';\n\n/* We catch all validation errors and send a message to the user with the error details. */\n@Catch(ValidationError)\nexport class CommandValidationFilter implements DiscordExceptionFilter {\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  async catch(\n    exceptionList: ValidationError[],\n    metadata: DiscordArgumentMetadata,\n  ): Promise {\n    const [interaction] = metadata.context;\n\n    const embeds = exceptionList.map((exception) =>\n      new MessageEmbed().addFields(\n        Object.values(exception.constraints).map((value) => ({\n          name: exception.property,\n          value,\n        })),\n      ),\n    );\n\n    if (interaction.isCommand())\n      await interaction.reply({ embeds }).catch((error) => {\n        this._logger.error(error, error && error.stack ? error.stack : null);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CsrsRootObject.html":{"url":"interfaces/CsrsRootObject.html","title":"interface - CsrsRootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CsrsRootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            additional\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additional:         Additional\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Additional\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         QueueGroups[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QueueGroups[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Current.html":{"url":"interfaces/Current.html","title":"interface - Current","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Current\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Damage.html":{"url":"interfaces/Damage.html","title":"interface - Damage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Damage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            average\n                                        \n                                \n                                \n                                        \n                                            dealt\n                                        \n                                \n                                \n                                        \n                                            taken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        average\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        average:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dealt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dealt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taken:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            breakdowns\n                                        \n                                \n                                \n                                        \n                                            damage\n                                        \n                                \n                                \n                                        \n                                            kda\n                                        \n                                \n                                \n                                        \n                                            kdr\n                                        \n                                \n                                \n                                        \n                                            matches_played\n                                        \n                                \n                                \n                                        \n                                            shots\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            time_played\n                                        \n                                \n                                \n                                        \n                                            total_score\n                                        \n                                \n                                \n                                        \n                                            win_rate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        breakdowns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        breakdowns:         Breakdowns\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Breakdowns\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        damage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        damage:         Damage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Damage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kda\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kda:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kdr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kdr:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matches_played\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matches_played:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shots\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shots:         Shots\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Shots\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         Summary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Summary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time_played\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time_played:         TimePlayed\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimePlayed\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        win_rate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        win_rate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefineDiscordCommand.html":{"url":"interfaces/DefineDiscordCommand.html","title":"interface - DefineDiscordCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefineDiscordCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sub-command-options.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            choices\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default_permission\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        choices:         Choice[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Choice[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default_permission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default_permission:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         DefineDiscordCommand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefineDiscordCommand[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefineDiscordCommand {\n  name: string;\n  description: string;\n  type?: number;\n  options?: DefineDiscordCommand[];\n  required?: boolean;\n  default_permission?: boolean;\n  choices?: Choice[];\n}\n\nexport interface Choice {\n  name: string;\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscordApiService.html":{"url":"injectables/DiscordApiService.html","title":"injectable - DiscordApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscordApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/discord-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                            \n                                botToken\n                            \n                            \n                                discordUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                constructStatsCommand\n                            \n                            \n                                    Async\n                                deleteCommand\n                            \n                            \n                                    Async\n                                getCommands\n                            \n                            \n                                    Async\n                                registerNewCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_httpService: HttpService, _configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/services/discord-api.service.ts:13\n                            \n                        \n\n                \n                    \n                            It sets the bot token and the discord url.\napplication ID.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpService\n\n\n                                                        \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe config service is used to get the bot token and\napplication ID.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        constructStatsCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    constructStatsCommand()\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:99\n                \n            \n\n\n            \n                \n                    It creates a list of commands that can be used in the bot.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An array of objects that represent the commands.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCommand(commandId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:222\n                \n            \n\n\n            \n                \n                    It deletes a command from the bot.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    commandId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the command you want to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The response from the API.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCommands\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommands()\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:192\n                \n            \n\n\n            \n                \n                    It gets the commands that are registered with the bot.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The response from the API.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerNewCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNewCommand(name: string, description: string, type?: \"sub_command\" | \"sub_command_group\", options?: DefineDiscordCommand[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:46\n                \n            \n\n\n            \n                \n                    It takes in a name, description, and type, and then sends a post request to the Discord API with\nthe data to register a new command for the bot. Required appropriate scope and permission.\ncommand.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe name of the command.\n\n\n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe description of the command.\n\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                            \"sub_command\" | \"sub_command_group\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe type of command.\n\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                DefineDiscordCommand[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nAn array of objects that define the options for the\ncommand.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The response from the post request.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(DiscordApiService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        botToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discordUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { lastValueFrom, take } from 'rxjs';\nimport { DefineDiscordCommand } from 'src/models/sub-command-options.model';\nimport { AxiosResponse } from 'axios';\n\n@Injectable()\nexport class DiscordApiService {\n  private _logger: Logger = new Logger(DiscordApiService.name);\n\n  discordUrl: string;\n  botToken: string;\n\n  /**\n   * It sets the bot token and the discord url.\n   * @param {HttpService} _httpService - HttpService\n   * @param {ConfigService} _configService - The config service is used to get the bot token and\n   * application ID.\n   */\n  constructor(\n    private _httpService: HttpService,\n    private _configService: ConfigService,\n  ) {\n    this.botToken = this._configService.get('token');\n    this.discordUrl = `https://discord.com/api/v8/applications/${this._configService.get(\n      'applicationId',\n    )}/guilds/${this._configService.get('guildID')}/commands`;\n\n    // console.log('discordAPI url for commands:', this.discordUrl);\n    // console.log('discordAPI token:', this.botToken);\n  }\n\n\n\n  /**\n   * It takes in a name, description, and type, and then sends a post request to the Discord API with\n   * the data to register a new command for the bot. Required appropriate scope and permission.\n   * @param {string} name - The name of the command.\n   * @param {string} description - The description of the command.\n   * @param {'sub_command' | 'sub_command_group'} [type] - The type of command.\n   * @param {DefineDiscordCommand[]} [options] - An array of objects that define the options for the\n   * command.\n   * @returns The response from the post request.\n   */\n  async registerNewCommand(\n    name: string,\n    description: string,\n    type?: 'sub_command' | 'sub_command_group',\n    options?: DefineDiscordCommand[],\n  ): Promise {\n    try {\n      const data: DefineDiscordCommand = {\n        name: name,\n        description: description,\n      };\n\n      if (type) {\n        data.type = type === 'sub_command' ? 1 : type === 'sub_command_group' ? 2 : null;\n\n        if (data.type === null) {\n          return Promise.reject('Check type parameter');\n        }\n      }\n\n      if (options) {\n        data.options = options;\n      }\n\n      // this._logger.warn(data);\n\n      const post = this._httpService.post(this.discordUrl, data, {\n        headers: {\n          Authorization: `Bot ${this.botToken}`,\n        },\n      });\n\n      const result = await lastValueFrom(post)\n\n\n      if (result.status === 200) {\n        return result.data\n      } else {\n        return Promise.reject(`Error registering new command. HttpStatus: ${result.status}`)\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It creates a list of commands that can be used in the bot.\n   * @returns An array of objects that represent the commands.\n   */\n  async constructStatsCommand() {\n    // 1 is type SUB_COMMAND'\n    // 2 is type SUB_COMMAND_GROUP\n    const statsSubCommands: DefineDiscordCommand[] = [\n      {\n        name: 'reg',\n        description: 'Register your Xbox Gamer tag',\n        type: 1,\n        options: [\n          {\n            name: 'gamertag',\n            description: 'Enter Xbox Gamertag',\n            type: 3,\n            required: true,\n          },\n          {\n            name: 'allowlogging',\n            description:\n              'Allow your stats to be logged in a database every 24 hours.',\n            type: 3,\n            required: true,\n            choices: [\n              {\n                name: 'Yes',\n                value: '1',\n              },\n              {\n                name: 'No',\n                value: '0',\n              },\n            ],\n          },\n        ],\n      },\n      {\n        name: 'update',\n        description: 'Update your registered Xbox Gamer Tag',\n        type: 1,\n        options: [\n          {\n            name: 'gamertag',\n            description: 'Enter Xbox Gamertag',\n            type: 3,\n            required: true,\n          },\n        ],\n      },\n      {\n        name: 'get',\n        description: 'Query your stats or use :gamertag: to query',\n        type: 1,\n        options: [\n          {\n            name: 'gamertag',\n            description:\n              '(Optional) Enter Xbox Gamertag to pull stats for Halo Infinite',\n            type: 3,\n            required: false,\n          },\n        ],\n      },\n      {\n        name: 'help',\n        description: 'READ ME',\n        type: 1,\n        options: [\n          {\n            name: 'lang',\n            description: 'Select language',\n            type: 3,\n            required: true,\n            choices: [\n              {\n                name: 'Suomeksi',\n                value: 'fi',\n              },\n              {\n                name: 'In English',\n                value: 'en',\n              },\n            ],\n          },\n        ],\n      },\n    ];\n\n    return statsSubCommands\n  }\n\n  /**\n   * It gets the commands that are registered with the bot.\n   * @returns The response from the API.\n   */\n  async getCommands(): Promise> {\n    try {\n      const get = await lastValueFrom(\n        this._httpService.get(this.discordUrl, {\n          headers: {\n            Authorization: `Bot ${this.botToken}`,\n          },\n        }),\n      );\n\n      if (get.status == 200) {\n        this._logger.debug(`REGISTERED COMMANDS: `, JSON.stringify(get.data));\n        return get;\n      } else {\n        Promise.reject(`API responded with status ${get.status}`)\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It deletes a command from the bot.\n   * @param {string} commandId - The ID of the command you want to delete.\n   * @returns The response from the API.\n   */\n  async deleteCommand(\n    commandId: string,\n  ): Promise> {\n    try {\n      const deleteCommand = await lastValueFrom(\n        this._httpService.delete(this.discordUrl + `/${commandId}`, {\n          headers: {\n            Authorization: `Bot ${this.botToken}`,\n          },\n        }),\n      );\n\n      if (deleteCommand.status == 200) {\n        this._logger.debug(\n          `DELETE COMMAND: `,\n          JSON.stringify(deleteCommand.data),\n        );\n\n        return deleteCommand;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExampleMiddleWare.html":{"url":"injectables/ExampleMiddleWare.html","title":"injectable - ExampleMiddleWare","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExampleMiddleWare\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/example.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/example.middleware.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/example.middleware.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\n/* This middleware logs the request body. */\n// https://docs.nestjs.com/middleware\nexport class ExampleMiddleWare implements NestMiddleware {\n  constructor(private _logger: Logger) {\n    this._logger = new Logger(ExampleMiddleWare.name);\n  }\n\n  use(req: Request, res: Response, next: NextFunction) {\n    this._logger.warn('ExampleMiddleWare request body: ', req.body);\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetDto.html":{"url":"classes/GetDto.html","title":"class - GetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/get/get.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/get/get.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\n// enum PublicStats {\n//   true,\n//   false,\n// }\n\nexport class GetDto {\n  @Param({ description: 'Xbox Gamer Tag', required: false })\n  gamertag: string;\n  // @Choice(PublicStats)\n  // isPublic: PublicStats;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HaloDotApiService.html":{"url":"injectables/HaloDotApiService.html","title":"injectable - HaloDotApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HaloDotApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/halodotapi.service.ts\n        \n\n\n            \n                Description\n            \n            \n                 The HaloDotApiService class is a class that is responsible for making requests to the HaloDotApi.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _haloDotApiInfiniteBaseUrl\n                            \n                            \n                                    Private\n                                _headers\n                            \n                            \n                                    Private\n                                    Readonly\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMotd\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                requestPlayerServiceRecord\n                            \n                            \n                                    Async\n                                requestPlayerStatsCSR\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpService, _configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMotd\n                        \n                    \n                \n            \n            \n                \ngetMotd()\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:56\n                \n            \n\n\n            \n                \n                    It returns an Observable of an AxiosResponse.\n\n\n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        An Observable of type AxiosResponse\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:35\n                \n            \n\n\n            \n                \n                    It makes a request to the HaloDotApi and returns the response.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestPlayerServiceRecord\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestPlayerServiceRecord(gamertag: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:98\n                \n            \n\n\n            \n                \n                    It makes a request to the Halo API to get the Service Record for a player.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gamertag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe gamertag of the player you want to get the service record for.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestPlayerStatsCSR\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestPlayerStatsCSR(gamertag: string, queue?: \"open\" | \"solo-duo\")\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:69\n                \n            \n\n\n            \n                \n                    It returns the CSRs for a player.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gamertag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe gamertag of the player you want to get the CSRs for.\n\n\n                                    \n                                \n                                \n                                    queue\n                                    \n                                            \"open\" | \"solo-duo\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe queue to get stats for.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _haloDotApiInfiniteBaseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HaloDotApiService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosResponse } from 'axios';\nimport { lastValueFrom, Observable } from 'rxjs';\n\n/**\n *  The HaloDotApiService class is a class that is responsible for making requests to the HaloDotApi. \n *\n * @export\n * @class HaloDotApiService\n */\n@Injectable()\nexport class HaloDotApiService {\n  private readonly _logger = new Logger(HaloDotApiService.name);\n\n  private _haloDotApiInfiniteBaseUrl: string;\n  private _headers: { Authorization: string; 'Content-Type': string; 'Cryptum-API-Version': string; };\n\n  constructor(\n    private _http: HttpService,\n    private _configService: ConfigService,\n  ) {\n    this._haloDotApiInfiniteBaseUrl = `https://cryptum.halodotapi.com/games/hi/`;\n    this._headers = {\n      Authorization: `Cryptum-Token ${this._configService.get('haloDotToken')}`,\n      'Content-Type': 'application/json',\n      'Cryptum-API-Version': '2.3-alpha',\n    };\n  }\n\n  /**\n   * It makes a request to the HaloDotApi and returns the response.\n   */\n  async init(): Promise> {\n    try {\n      this._logger.debug(\n        `haloDotApiBaseUrl: ${this._haloDotApiInfiniteBaseUrl}`,\n      );\n      const url = 'https://cryptum.halodotapi.com/';\n      // const req =\n      return await lastValueFrom(this._http.get(url));\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It returns an Observable of an AxiosResponse.\n   * @returns An Observable of type AxiosResponse\n   */\n  getMotd(): Observable> {\n    const url = this._haloDotApiInfiniteBaseUrl + 'motd';\n    this._logger.debug(`url: ${url}`);\n    const request = this._http.get(url, {});\n    return request;\n  }\n\n\n  /**\n   * It returns the CSRs for a player.\n   * @param {string} gamertag - The gamertag of the player you want to get the CSRs for.\n   * @param {'open' | 'solo-duo'} [queue] - The queue to get stats for.\n   */\n  async requestPlayerStatsCSR(gamertag: string, queue?: 'open' | 'solo-duo') {\n    try {\n      let returnValue: CsrsModels.CsrsRootObject;\n\n      const url =\n        this._haloDotApiInfiniteBaseUrl + `stats/players/${gamertag}/csrs`;\n      const request = await lastValueFrom(\n        this._http.get(url, {\n          headers: this._headers,\n        }),\n      );\n      if (request && request.status === 200) {\n        returnValue = request.data as CsrsModels.CsrsRootObject;\n      }\n      return returnValue;\n    } catch (error) {\n      // throw new Error(error);\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It makes a request to the Halo API to get the Service Record for a player.\n   * @param {string} gamertag - The gamertag of the player you want to get the service record for.\n   */\n  async requestPlayerServiceRecord(gamertag: string) {\n    try {\n      let returnValue: ServiceRecordsModels.ServiceRecord | undefined;\n\n      const url =\n        this._haloDotApiInfiniteBaseUrl +\n        `stats/players/${gamertag}/service-record/global`;\n      // this._logger.warn(`url: ${url}`)\n      const request = await lastValueFrom(\n        this._http.get(url, {\n          headers: this._headers,\n        }),\n      );\n      if (request && request.status == 200) {\n        returnValue = request.data as ServiceRecordsModels.ServiceRecord;\n      }\n      return returnValue;\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Kills.html":{"url":"interfaces/Kills.html","title":"interface - Kills","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Kills\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            grenades\n                                        \n                                \n                                \n                                        \n                                            headshots\n                                        \n                                \n                                \n                                        \n                                            melee\n                                        \n                                \n                                \n                                        \n                                            power_weapons\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        grenades\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grenades:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headshots\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headshots:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        melee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        melee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        power_weapons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        power_weapons:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Matches.html":{"url":"interfaces/Matches.html","title":"interface - Matches","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Matches\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            draws\n                                        \n                                \n                                \n                                        \n                                            left\n                                        \n                                \n                                \n                                        \n                                            losses\n                                        \n                                \n                                \n                                        \n                                            wins\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        draws\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draws:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        losses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        losses:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wins:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageFromUserGuard.html":{"url":"classes/MessageFromUserGuard.html","title":"class - MessageFromUserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageFromUserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/message-fom-user.guard.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActive\n                        \n                    \n                \n            \n            \n                \ncanActive(event, undefined: [Message])\n                \n            \n\n\n            \n                \n                    Defined in src/guards/message-fom-user.guard.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            [Message]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DiscordGuard } from '@discord-nestjs/core';\nimport { Message } from 'discord.js';\n\nexport class MessageFromUserGuard implements DiscordGuard {\n  canActive(event: 'messageCreate', [message]: [Message]): boolean {\n    return !message.author.bot;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageToUpperPipe.html":{"url":"classes/MessageToUpperPipe.html","title":"class - MessageToUpperPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageToUpperPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/message-to-upper.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordPipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(undefined: [Message])\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/message-to-upper.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            [Message]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DiscordPipeTransform } from '@discord-nestjs/core';\nimport { Message } from 'discord.js';\n\n/* The MessageToUpperPipe class implements the DiscordPipeTransform interface. The transform method\ntakes an array of Message objects as an argument and returns an array of Message objects. The\ntransform method returns a new array of Message objects with the content of each Message object in\nthe array converted to uppercase. */\nexport class MessageToUpperPipe implements DiscordPipeTransform {\n  transform([message]: [Message]): [Message] {\n    message.content = message.content.toUpperCase();\n\n    return [message];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/Oauth2DiscordController.html":{"url":"controllers/Oauth2DiscordController.html","title":"controller - Oauth2DiscordController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  Oauth2DiscordController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/oauth2-discord/oauth2-discord.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                oauth2-discord\n            \n\n\n            \n                Description\n            \n            \n                 Used for Discord oAuth2 callback. Return simple HTTP OK message for authentication purposes when inviting bot to join server\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                callbackForDiscordOauth2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        callbackForDiscordOauth2\n                        \n                    \n                \n            \n            \n                \n                    \n                    callbackForDiscordOauth2(request: Request, response: Response, body: Body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/controllers/oauth2-discord/oauth2-discord.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                            Body\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Request,\n  Req,\n  Logger,\n  Body,\n  Res,\n  Response,\n  HttpStatus,\n} from '@nestjs/common';\n\n/**\n *  Used for Discord oAuth2 callback. Return simple HTTP OK message for authentication purposes when inviting bot to join server\n *\n * @export\n * @class Oauth2DiscordController\n */\n@Controller('oauth2-discord')\nexport class Oauth2DiscordController {\n  private _logger: Logger = new Logger(Oauth2DiscordController.name);\n\n  @Get()\n  async callbackForDiscordOauth2(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n    @Body() body: Body,\n  ) {\n    if (request) {\n      // const requestJson = await request.json();\n      this._logger.verbose(`request json: ${JSON.stringify(request.body)}`);\n    }\n\n    if (response) {\n      // const responseJson = await response.json();\n      this._logger.verbose(`request json: ${JSON.stringify(response.body)}`);\n    }\n\n    if (body) {\n      // const bodyJson = await body.json();\n      this._logger.verbose(`request json: ${JSON.stringify(body.body)}`);\n    }\n\n    return HttpStatus.OK;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Oauth2DiscordModule.html":{"url":"modules/Oauth2DiscordModule.html","title":"module - Oauth2DiscordModule","body":"\n                   \n\n\n\n\n    Modules\n    Oauth2DiscordModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/controllers/oauth2-discord/oauth2-discord.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            Oauth2DiscordController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Oauth2DiscordController } from './oauth2-discord.controller';\n\n@Module({\n  controllers: [Oauth2DiscordController],\n})\nexport class Oauth2DiscordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:18\n                \n            \n\n\n            \n                \n                    When the server is shutting down, close the application\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nINestApplication\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:10\n                \n            \n\n\n            \n                \n                    It connects to the database.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\n/* When the server starts, connect to the database. */\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  /**\n   * It connects to the database.\n   */\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  /**\n   * When the server is shutting down, close the application\n   * @param {INestApplication} app - INestApplication\n   */\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueueGroups.html":{"url":"interfaces/QueueGroups.html","title":"interface - QueueGroups","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueueGroups\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            input\n                                        \n                                \n                                \n                                        \n                                            queue\n                                        \n                                \n                                \n                                        \n                                            response\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input:     \"crossplay\" | \"controller\" | \"mnk\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"crossplay\" | \"controller\" | \"mnk\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue:     \"open\" | \"solo-duo\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"open\" | \"solo-duo\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response:         Response\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Response\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/register/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowlogging\n                            \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allowlogging\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Allow logging to a database', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class RegisterDto {\n  @Param({ description: 'Xbox Gamer Tag', required: true })\n  gamertag: string;\n  @Param({ description: 'Allow logging to a database', required: true })\n  allowlogging: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            all_time\n                                        \n                                \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            season\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        all_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        all_time:         AllTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AllTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         Current\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Current\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        season:         Season\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Season\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Season.html":{"url":"interfaces/Season.html","title":"interface - Season","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Season\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceRecord.html":{"url":"interfaces/ServiceRecord.html","title":"interface - ServiceRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            additional\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additional:         Additional\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Additional\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nDiscordCommandProvider \n\nDiscordCommandProvider \n\n\n\nHaloDotApiService \n\nHaloDotApiService \n\n\n\nPrismaService \n\nPrismaService \n\n\n\nTwitterService \n\nTwitterService \n\n\n\nUserService \n\nUserService \n\n\n\nSharedModule\n\nSharedModule\n\nDiscordCommandProvider  -->\n\nSharedModule->DiscordCommandProvider \n\n\n\nHaloDotApiService  -->\n\nSharedModule->HaloDotApiService \n\n\n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\nTwitterService  -->\n\nSharedModule->TwitterService \n\n\n\nUserService  -->\n\nSharedModule->UserService \n\n\n\n\n\nHaloDotApiService\n\nHaloDotApiService\n\nSharedModule -->\n\nHaloDotApiService->SharedModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\nTwitterService\n\nTwitterService\n\nSharedModule -->\n\nTwitterService->SharedModule\n\n\n\n\n\nUserService\n\nUserService\n\nSharedModule -->\n\nUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HaloDotApiService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            TwitterService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiscordCommandProvider\n                        \n                        \n                            HaloDotApiService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            TwitterService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DiscordCommandProvider, DiscordModule } from '@discord-nestjs/core';\nimport { HttpModule, HttpService } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER } from '@nestjs/core';\nimport { Intents, Message } from 'discord.js';\nimport { AllExceptionsFilter } from 'src/exception-filters/globalExceptions';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { PrismaService } from 'src/services/prisma.service';\nimport { TwitterService } from 'src/services/twitter.service';\nimport { UserService } from 'src/services/user.service';\n\n/* The DiscordModule is a wrapper around the Discord.js library. It provides a way to register commands\nand events.\n\nThe DiscordModule.forRootAsync method is used to register the Discord.js client. It takes an array\nof options. The first option is the token for the Discord bot. The second option is an array of file\npaths to register commands from. The third option is an object that contains the Discord.js client\noptions. The Discord.js client options are used to set the intents for the bot. The intents are used\nto determine what events the bot will listen */\n\n@Module({\n  imports: [\n    HttpModule,\n    DiscordModule.forRootAsync({\n      imports: [ConfigModule, SharedModule],\n      useFactory: (configService: ConfigService) => ({\n        token: configService.get('token'),\n        commands: ['**/**/*.command.js'],\n        autoRegisterGlobalCommands: true,\n        discordClientOptions: {\n          intents: [\n            Intents.FLAGS.GUILDS,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MEMBERS,\n            Intents.FLAGS.GUILD_BANS,\n            Intents.FLAGS.GUILD_EMOJIS_AND_STICKERS,\n            Intents.FLAGS.GUILD_INTEGRATIONS,\n            Intents.FLAGS.GUILD_WEBHOOKS,\n            Intents.FLAGS.GUILD_INVITES,\n            Intents.FLAGS.GUILD_VOICE_STATES,\n            Intents.FLAGS.GUILD_PRESENCES,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MESSAGE_REACTIONS,\n            Intents.FLAGS.GUILD_MESSAGE_TYPING,\n            Intents.FLAGS.DIRECT_MESSAGES,\n            Intents.FLAGS.DIRECT_MESSAGE_REACTIONS,\n            Intents.FLAGS.DIRECT_MESSAGE_TYPING,\n          ],\n        },\n        allowGuilds: JSON.parse(configService.get('allowGuilds')),\n        registerCommandOptions: [\n          {\n            forGuild: configService.get('guildID'),\n            allowFactory: (message: Message) =>\n              !message.author.bot && message.content === '!deploy',\n          },\n        ],\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    TwitterService,\n    PrismaService,\n    UserService,\n    HaloDotApiService,\n    DiscordCommandProvider,\n  ],\n  exports: [\n    TwitterService,\n    PrismaService,\n    UserService,\n    HaloDotApiService,\n    DiscordCommandProvider,\n  ],\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Shots.html":{"url":"interfaces/Shots.html","title":"interface - Shots","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Shots\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accuracy\n                                        \n                                \n                                \n                                        \n                                            fired\n                                        \n                                \n                                \n                                        \n                                            landed\n                                        \n                                \n                                \n                                        \n                                            missed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accuracy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accuracy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fired\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fired:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        landed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        landed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        missed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsBaseCommand.html":{"url":"classes/StatsBaseCommand.html","title":"class - StatsBaseCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsBaseCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/stats.command.ts\n        \n\n\n            \n                Description\n            \n            \n                 Base /stats command. Base commands cannot do anything by themselves if they have sub commands in  include array.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\n\nimport { StatsRegSubCommand } from './register/register.command';\nimport { StatsHelpSubCommand } from './help/help.command';\nimport { StatsGetSubCommand } from './get/get.command';\nimport { StatsUpdateSubCommand } from './update/update.command';\n/**\n *  Base /stats command. Base commands cannot do anything by themselves if they have sub commands in  include array.\n *\n * @export\n * @class StatsBaseCommand\n */\n@Command({\n  name: 'stats',\n  description: 'Stats provided by HaloDotAPI',\n  include: [\n    StatsGetSubCommand,\n    StatsUpdateSubCommand,\n    StatsRegSubCommand,\n    StatsHelpSubCommand,\n  ],\n})\nexport class StatsBaseCommand { }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsDto.html":{"url":"classes/StatsDto.html","title":"class - StatsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/stats.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class StatsDto {\n  // @Param({ description: 'User name', required: true })\n  // name: string;\n  // @Param({\n  //   name: 'phone-number',\n  //   description: 'Phone number',\n  //   required: true,\n  // })\n  // phoneNumber: string;\n  // @Param({ description: 'User nickname', required: true })\n  // name: string;\n  // @Param({ description: 'User age', required: true, type: ParamType.INTEGER })\n  // age: number;\n  // @Choice(City)\n  // @Param({ description: 'City of residence', type: ParamType.INTEGER })\n  // city: City;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsGetSubCommand.html":{"url":"classes/StatsGetSubCommand.html","title":"class - StatsGetSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsGetSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/get/get.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_haloDotApi: HaloDotApiService, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/get/get.command.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _haloDotApi\n                                                  \n                                                        \n                                                                        HaloDotApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(StatsGetSubCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/get/get.command.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: GetDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/get/get.command.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                GetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordCommand,\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { UserService } from 'src/services/user.service';\nimport { GetDto } from './get.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'get', description: 'Prints our your stats' })\nexport class StatsGetSubCommand implements DiscordTransformedCommand {\n  private _logger: Logger = new Logger(StatsGetSubCommand.name);\n\n  constructor(\n    private _haloDotApi: HaloDotApiService,\n    private _userService: UserService,\n  ) { }\n\n  async handler(\n    @Payload() dto: GetDto,\n    interaction: CommandInteraction,\n  ): Promise {\n    try {\n      const defer = await interaction.deferReply({ fetchReply: true });\n      // this._logger.verbose(JSON.stringify(defer));\n\n      // https://github.com/discordjs/discord.js/issues/7005\n      const hasParam = !!dto.gamertag;\n      const userId = interaction.user.id;\n\n      let gamerTag: string;\n      let embedReply: MessageEmbed;\n\n      let replyMessage: InteractionReplyOptions;\n\n      if (hasParam) {\n        gamerTag = dto.gamertag;\n        this._logger.debug(`gamerTag as param: ${gamerTag}`);\n\n        const statsCSR = await this._haloDotApi\n          .requestPlayerStatsCSR(gamerTag, 'open')\n          .catch((error) => {\n            this._logger.error(error);\n          });\n        const statsRecord = await this._haloDotApi\n          .requestPlayerServiceRecord(gamerTag)\n          .catch((error) => {\n            this._logger.error(error);\n          });\n\n        if (\n          statsCSR &&\n          statsCSR.data &&\n          statsRecord &&\n          statsRecord.data &&\n          !interaction.replied\n        ) {\n          embedReply = new MessageEmbed()\n            .setColor('#CCCCFF')\n            .setThumbnail(statsCSR.data[0].response.current.tier_image_url)\n            .setTitle(gamerTag)\n            .setDescription(statsCSR.data[0].response.current.tier)\n            .addFields(\n              {\n                name: `Kills`,\n                value: ` ${statsRecord.data.summary.kills}`,\n                inline: true,\n              },\n              {\n                name: `Deaths`,\n                value: ` ${statsRecord.data.summary.deaths}`,\n                inline: true,\n              },\n              {\n                name: `Assists`,\n                value: ` ${statsRecord.data.summary.assists}`,\n                inline: true,\n              },\n            )\n            .addFields(\n              {\n                name: `KDA`,\n                value: ` ${statsRecord.data.kda.toFixed(1)}`,\n                inline: true,\n              },\n              {\n                name: `KDR`,\n                value: ` ${statsRecord.data.kdr.toFixed(1)}`,\n                inline: true,\n              },\n              {\n                name: `Matches Played`,\n                value: ` ${statsRecord.data.matches_played}`,\n                inline: true,\n              },\n            )\n            .setFooter({\n              text: `Time played: ${statsRecord.data.time_played.human\n                }. Wins: ${statsRecord.data.win_rate.toFixed(1)}%`,\n            });\n          // .setTimestamp()\n          replyMessage = {\n            embeds: [embedReply],\n            fetchReply: true,\n          };\n\n          if (interaction.deferred && !interaction.replied)\n            await interaction\n              .editReply(replyMessage)\n              .then((reply) => {\n                this._logger.verbose(reply);\n              })\n              .catch((error) => {\n                Promise.reject(error);\n              });\n        } else {\n          let errorEmbed = new MessageEmbed()\n            .setColor('#FF0000')\n            .setTitle('Error')\n            .setDescription(`Stats not found for ${gamerTag}`);\n          replyMessage = {\n            embeds: [errorEmbed],\n            fetchReply: true,\n          };\n\n          await interaction\n            .editReply(replyMessage)\n            .then((reply) => {\n              this._logger.verbose(reply);\n            })\n            .catch((error) => {\n              Promise.reject(error);\n            });\n        }\n      } else {\n        const botUser = await this._userService\n          .user({\n            discord_user_id: userId,\n          })\n          .catch((error) => {\n            this._logger.error(error);\n          });\n\n        if (botUser) {\n          gamerTag = botUser.gamertag;\n          this._logger.debug(`gamerTag from botuser: ${gamerTag}`);\n\n          // TODO write query against HaloDotApi\n          const statsCSR = await this._haloDotApi\n            .requestPlayerStatsCSR(gamerTag, 'open')\n            .catch((error) => {\n              this._logger.error(error);\n            });\n\n          const statsRecord = await this._haloDotApi\n            .requestPlayerServiceRecord(gamerTag)\n            .catch((error) => {\n              this._logger.error(error);\n            });\n\n          if (\n            statsCSR &&\n            statsCSR.data &&\n            statsRecord &&\n            statsRecord.data &&\n            !interaction.replied\n          ) {\n            embedReply = new MessageEmbed()\n              .setColor('#CCCCFF')\n              .setThumbnail(statsCSR.data[0].response.current.tier_image_url)\n              .setTitle(gamerTag)\n              .setDescription(statsCSR.data[0].response.current.tier)\n              .addFields(\n                {\n                  name: `Kills`,\n                  value: ` ${statsRecord.data.summary.kills}`,\n                  inline: true,\n                },\n                {\n                  name: `Deaths`,\n                  value: ` ${statsRecord.data.summary.deaths}`,\n                  inline: true,\n                },\n                {\n                  name: `Assists`,\n                  value: ` ${statsRecord.data.summary.assists}`,\n                  inline: true,\n                },\n              )\n              .addFields(\n                {\n                  name: `KDA`,\n                  value: ` ${statsRecord.data.kda.toFixed(1)}`,\n                  inline: true,\n                },\n                {\n                  name: `KDR`,\n                  value: ` ${statsRecord.data.kdr.toFixed(1)}`,\n                  inline: true,\n                },\n                {\n                  name: `Matches Played`,\n                  value: ` ${statsRecord.data.matches_played}`,\n                  inline: true,\n                },\n              )\n              .setFooter({\n                text: `Time played: ${statsRecord.data.time_played.human\n                  }. Wins: ${statsRecord.data.win_rate.toFixed(1)}%`,\n              }); // .setTimestamp()\n\n            replyMessage = {\n              embeds: [embedReply],\n              fetchReply: true,\n            };\n\n            if (interaction.deferred && !interaction.replied)\n              await interaction\n                .editReply(replyMessage)\n                .then((reply) => {\n                  this._logger.verbose(reply);\n                })\n                .catch((error) => {\n                  Promise.reject(error);\n                });\n          } else {\n            let errorEmbed = new MessageEmbed()\n              .setColor('#FF0000')\n              .setTitle('Error')\n              .setDescription(`Stats not found for ${gamerTag}`);\n            replyMessage = {\n              embeds: [errorEmbed],\n              fetchReply: true,\n            };\n\n            if (interaction.deferred && !interaction.replied)\n              await interaction\n                .editReply(replyMessage)\n                .then((reply) => {\n                  this._logger.verbose(reply);\n                })\n                .catch((error) => {\n                  Promise.reject(error);\n                });\n          }\n        } else {\n          embedReply = new MessageEmbed().setColor('#FF7F50').addFields({\n            name: `Error`,\n            value: `No Xbox Gametag registered for user`,\n          });\n\n          replyMessage = {\n            embeds: [embedReply],\n            fetchReply: true,\n          };\n\n          console.log('5');\n\n          if (interaction.deferred && !interaction.replied)\n            await interaction\n              .editReply(replyMessage)\n              .then((reply) => {\n                this._logger.verbose(reply);\n              })\n              .catch((error) => {\n                Promise.reject(error);\n              });\n        }\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsHelpDto.html":{"url":"classes/StatsHelpDto.html","title":"class - StatsHelpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsHelpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/help/help.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lang\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Select language', required: true})@Choice(Language)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/help/help.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice } from '@discord-nestjs/core';\n\nenum Language {\n  FI = 'fi',\n  EN = 'en',\n}\n\nexport class StatsHelpDto {\n  @Param({ description: 'Select language', required: true })\n  @Choice(Language)\n  lang: Language;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsHelpSubCommand.html":{"url":"classes/StatsHelpSubCommand.html","title":"class - StatsHelpSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsHelpSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/help/help.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/help/help.command.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/help/help.command.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: StatsHelpDto, interaction?: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/help/help.command.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                StatsHelpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport { CommandInteraction, MessageEmbed } from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { StatsHelpDto } from './help.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'help', description: 'Shows bot commands and helpful information' })\n/* This is a command that will display helpful message! */\nexport class StatsHelpSubCommand\n  implements DiscordTransformedCommand\n{\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  constructor() { }\n\n  async handler(\n    @Payload() dto: StatsHelpDto,\n    interaction?: CommandInteraction,\n  ) {\n    try {\n      if (dto.lang == 'fi') {\n        const embedHelpFi = new MessageEmbed()\n          .setColor('#0099ff')\n          .setTitle('Ohjeet')\n          .setDescription(\n            'Ohjeistus alikomennoille /stats. ?:parametri: tarkoittaa että se on valinnainen.',\n          )\n          .addFields(\n            { name: 'help :lang:', value: 'Tulostaa tämän viestin' },\n            {\n              name: 'reg :gamertag: :allowlogging:',\n              value: 'Rekisteröi Xbox gamertägisi',\n            },\n            { name: 'update', value: 'Päivitä tilastot' },\n            {\n              name: 'get ?:gamertag:',\n              value:\n                'Tulostaa käyttäjän Halo Infinite tilastot tai hakee käyttäjän tilastot gamertagille',\n            },\n          )\n          .setFooter({\n            text: 'https://github.com/ex1tium/halofinland-discord-bot',\n          })\n          .setTimestamp();\n\n        return interaction\n          .reply({\n            embeds: [embedHelpFi],\n            ephemeral: true,\n          })\n          .catch((error) => {\n            Promise.reject(error);\n          });\n      } else {\n        const embedHelpEn = new MessageEmbed()\n          .setColor('#0099ff')\n          .setTitle('Help')\n          .setDescription(\n            'Help for subcommands of /stats. ?:param: means its optional.',\n          )\n          .addFields(\n            {\n              name: 'help :lang:',\n              value: 'Prints this message in chosen language',\n            },\n            {\n              name: 'reg :tag: :allowlogging:',\n              value: 'Registers your Xbox gamertag for stats',\n            },\n            { name: 'update', value: 'Updates latest stats from API' },\n            { name: 'get', value: 'Prints your stats or stats for gamertag' },\n          )\n          .setFooter({\n            text: 'https://github.com/ex1tium/halofinland-discord-bot',\n          })\n          .setTimestamp();\n\n        return interaction\n          .reply({\n            embeds: [embedHelpEn],\n            ephemeral: true,\n          })\n          .catch((error) => {\n            Promise.reject(error);\n          });\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsRegSubCommand.html":{"url":"classes/StatsRegSubCommand.html","title":"class - StatsRegSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsRegSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/register/register.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/register/register.command.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.command.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: RegisterDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/register/register.command.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { UserService } from 'src/services/user.service';\nimport { RegisterDto } from './register.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'reg', description: 'Register your Xbox Gamer tag' })\n/* This is a command that allows users to register their gamertag and whether or not they want to be\nlogged. */\nexport class StatsRegSubCommand\n  implements DiscordTransformedCommand\n{\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  constructor(private _userService: UserService) { }\n\n  async handler(@Payload() dto: RegisterDto, interaction: CommandInteraction) {\n    try {\n      const gamerTag = dto.gamertag;\n      const allowLogging = dto.allowlogging;\n      this._logger.warn(`allowLogging: ${allowLogging}`);\n\n      const userId = interaction.user.id;\n      const userExists = await this._userService.user({\n        discord_user_id: userId,\n      });\n\n      let wasUpdated = false;\n\n      // this._logger.warn(`userExists: ${JSON.stringify(userExists)}`);\n\n      if (userExists && userExists.discord_user_id) {\n        this._userService.updateUser({\n          where: {\n            discord_user_id: userId,\n          },\n          data: {\n            gamertag: gamerTag,\n            allow_stats_logging: allowLogging ? 1 : 0,\n          },\n        });\n\n        wasUpdated = true;\n      } else {\n        this._userService.createUser({\n          discord_user_id: userId,\n          gamertag: gamerTag,\n          allow_stats_logging: allowLogging ? 1 : 0,\n        });\n      }\n\n      let embedReply: MessageEmbed;\n\n      if (wasUpdated) {\n        embedReply = new MessageEmbed().setColor('#DFFF00').addFields(\n          { name: `Old Gamertag`, value: `${userExists.gamertag}` },\n          { name: `New Gamertag`, value: `${gamerTag}` },\n          {\n            name: `Logging`,\n            value: `${allowLogging ? 'enabled' : 'disabled'}`,\n          },\n        );\n      } else {\n        embedReply = new MessageEmbed().setColor('#40E0D0').addFields(\n          { name: `Registered Xbox Gamertag`, value: `${gamerTag}` },\n          {\n            name: `Logging`,\n            value: `${allowLogging ? 'enabled' : 'disabled'}`,\n          },\n        );\n      }\n\n      const reply: InteractionReplyOptions = {\n        embeds: [embedReply],\n        ephemeral: true,\n      };\n\n      return interaction.reply(reply).catch((error) => {\n        Promise.reject(error);\n      });\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsUpdateSubCommand.html":{"url":"classes/StatsUpdateSubCommand.html","title":"class - StatsUpdateSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsUpdateSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/update/update.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/update/update.command.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(StatsUpdateSubCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/update/update.command.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: UpdateDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/update/update.command.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordCommand,\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { UserService } from 'src/services/user.service';\nimport { UpdateDto } from './update.dto';\n\n@UsePipes(TransformPipe)\n@SubCommand({\n  name: 'update',\n  description: 'Update your registered Xbox Gamer Tag',\n})\n/* This is a command that will update a user's gamertag. */\nexport class StatsUpdateSubCommand\n  implements DiscordTransformedCommand\n{\n  private _logger: Logger = new Logger(StatsUpdateSubCommand.name);\n\n  constructor(private _userService: UserService) { }\n\n  async handler(@Payload() dto: UpdateDto, interaction: CommandInteraction) {\n    try {\n      const gamerTag = dto.gamertag;\n      const userId = interaction.user.id;\n      const userExists = await this._userService.user({\n        discord_user_id: userId,\n      });\n      let embedReply: MessageEmbed;\n\n      if (userExists) {\n        this._userService.updateUser({\n          where: {\n            discord_user_id: userId,\n          },\n          data: {\n            gamertag: gamerTag,\n          },\n        });\n\n        embedReply = new MessageEmbed()\n          .setColor('#DFFF00')\n          .addFields(\n            { name: `Old Gamertag`, value: `${userExists.gamertag}` },\n            { name: `New Gamertag`, value: `${gamerTag}` },\n          )\n          .setTimestamp();\n        const reply: InteractionReplyOptions = {\n          embeds: [embedReply],\n          ephemeral: true\n        };\n\n        this._logger.verbose(JSON.stringify(dto));\n        this._logger.verbose(interaction);\n\n        return reply;\n      }\n\n      return 'use /stats reg :gamertag: command to register first';\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Summary.html":{"url":"interfaces/Summary.html","title":"interface - Summary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Summary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assists\n                                        \n                                \n                                \n                                        \n                                            betrayals\n                                        \n                                \n                                \n                                        \n                                            deaths\n                                        \n                                \n                                \n                                        \n                                            kills\n                                        \n                                \n                                \n                                        \n                                            medals\n                                        \n                                \n                                \n                                        \n                                            suicides\n                                        \n                                \n                                \n                                        \n                                            vehicles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assists:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        betrayals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        betrayals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deaths\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deaths:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kills\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kills:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suicides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suicides:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vehicles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vehicles:         Vehicles\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vehicles\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimePlayed.html":{"url":"interfaces/TimePlayed.html","title":"interface - TimePlayed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimePlayed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            human\n                                        \n                                \n                                \n                                        \n                                            seconds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        human\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        human:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seconds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seconds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToJsonResponse.html":{"url":"interfaces/ToJsonResponse.html","title":"interface - ToJsonResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToJsonResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interaction-toJSON.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            applicationId\n                                        \n                                \n                                \n                                        \n                                            channelId\n                                        \n                                \n                                \n                                        \n                                            commandId\n                                        \n                                \n                                \n                                        \n                                            commandName\n                                        \n                                \n                                \n                                        \n                                            deferred\n                                        \n                                \n                                \n                                        \n                                            ephemeral\n                                        \n                                \n                                \n                                        \n                                            guildId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            member\n                                        \n                                \n                                \n                                        \n                                            memberPermissions\n                                        \n                                \n                                \n                                        \n                                            replied\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        applicationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        applicationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commandId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commandId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commandName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commandName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deferred\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deferred:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ephemeral\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ephemeral:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guildId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guildId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        member\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        member:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        memberPermissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        memberPermissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replied\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replied:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"APPLICATION_COMMAND\" | \"PING\" | \"MESSAGE_COMPONENT\" | \"APPLICATION_COMMAND_AUTOCOMPLETE\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"APPLICATION_COMMAND\" | \"PING\" | \"MESSAGE_COMPONENT\" | \"APPLICATION_COMMAND_AUTOCOMPLETE\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ToJsonResponse {\n  type:\n    | 'APPLICATION_COMMAND'\n    | 'PING'\n    | 'MESSAGE_COMPONENT'\n    | 'APPLICATION_COMMAND_AUTOCOMPLETE';\n  id: string;\n  applicationId: string;\n  channelId: string;\n  guildId: string;\n  user: string;\n  member: string;\n  version: 1;\n  memberPermissions: number;\n  commandId: string;\n  commandName: string;\n  deferred: boolean;\n  replied: boolean;\n  ephemeral: null;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwitterService.html":{"url":"injectables/TwitterService.html","title":"injectable - TwitterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TwitterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/twitter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _client\n                            \n                            \n                                    Private\n                                _haloSupportTweets\n                            \n                            \n                                    Private\n                                    Readonly\n                                _logger\n                            \n                            \n                                    Private\n                                _twitterAllowedSearchAuthorIds\n                            \n                            \n                                    Private\n                                _twitterUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                constructEmbedTweetMessage\n                            \n                            \n                                delay\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                next\n                            \n                            \n                                    Async\n                                pollHaloSupportTweets\n                            \n                            \n                                    Async\n                                recordTweet\n                            \n                            \n                                    Async\n                                sendChannel\n                            \n                            \n                                    Async\n                                upsertTweet\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newTweets$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _prismaService: PrismaService, _discordProvider: DiscordClientProvider)\n                    \n                \n                        \n                            \n                                Defined in src/services/twitter.service.ts:31\n                            \n                        \n\n                \n                    \n                            It creates a new instance of the TwitterApi class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nConfigService\n\n\n                                                        \n                                                \n                                                \n                                                        _prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe PrismaService is used to interact with the database.\n\n\n                                                        \n                                                \n                                                \n                                                        _discordProvider\n                                                  \n                                                        \n                                                                    DiscordClientProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDiscordClientProvider\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        constructEmbedTweetMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    constructEmbedTweetMessage(tweet: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:152\n                \n            \n\n\n            \n                \n                    It constructs a message embed for a tweet.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tweet\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTweetV2\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n            \n                \ndelay(ms: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:324\n                \n            \n\n\n            \n                \n                    Delay(ms: number) => Promise\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ms\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnumber\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Nothing.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:61\n                \n            \n\n\n            \n                \n                    It searches for users with the given IDs and returns them.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The twitter users.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(tweets: TweetV2[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:112\n                \n            \n\n\n            \n                \n                    It takes in an array of tweets and emits a new array of tweets\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tweets\n                                    \n                                            TweetV2[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTweetV2[]\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        pollHaloSupportTweets\n                        \n                    \n                \n            \n            \n                \n                    \n                    pollHaloSupportTweets()\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:202\n                \n            \n\n\n            \n                \n                    It searches for tweets that contain the words \"patch\", \"release\", \"update\", \"problem\", or \"issue\"\nand then checks to see if the tweet is from a user that we have allowed to tweet. If it is, it then\nchecks to see if the tweet is already in our database. If it is not, it then adds the tweet to our\ndatabase and then sends a message to the channels that we have configured\n\n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        recordTweet\n                        \n                    \n                \n            \n            \n                \n                    \n                    recordTweet(tweetData: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:268\n                \n            \n\n\n            \n                \n                    Create a new tweet record in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tweetData\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTweetV2\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendChannel\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendChannel(channelId: string, tweet: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:123\n                \n            \n\n\n            \n                \n                    It sends a message to a Discord channel.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    channelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the channel to send the message to.\n\n\n                                    \n                                \n                                \n                                    tweet\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTweetV2\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Nothing.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        upsertTweet\n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertTweet(tweetData: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:293\n                \n            \n\n\n            \n                \n                    Upsert a tweet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tweetData\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTweetV2\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TwitterApi\n\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _haloSupportTweets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    null,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TwitterService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _twitterAllowedSearchAuthorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _twitterUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserV2[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newTweets$\n                    \n                \n\n                \n                    \n                        getnewTweets$()\n                    \n                \n                            \n                                \n                                    Defined in src/services/twitter.service.ts:104\n                                \n                            \n                    \n                        \n                                It returns an observable that emits the tweets that are currently in the store.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  ETwitterStreamEvent,\n  TweetStream,\n  TweetV2,\n  TweetV2SingleResult,\n  TwitterApi,\n  TwitterApiv2,\n  UserV2,\n  UserV2Result,\n} from 'twitter-api-v2';\n\nimport { BehaviorSubject, from, Observable } from 'rxjs';\nimport { PrismaService } from './prisma.service';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { DiscordClientProvider } from '@discord-nestjs/core';\nimport { TextChannel, MessageEmbed } from 'discord.js';\nimport { format } from 'date-fns';\n\n@Injectable()\nexport class TwitterService {\n  private readonly _logger = new Logger(TwitterService.name);\n  private _client: TwitterApi;\n\n  private _haloSupportTweets: BehaviorSubject = new BehaviorSubject(\n    null,\n  );\n\n  private _twitterAllowedSearchAuthorIds: string[] = [];\n  private _twitterUsers: UserV2[] = [];\n\n  /**\n   * It creates a new instance of the TwitterApi class.\n   * @param {ConfigService} _configService - ConfigService\n   * @param {PrismaService} _prismaService - The PrismaService is used to interact with the database.\n   * @param {DiscordClientProvider} _discordProvider - DiscordClientProvider\n   */\n  constructor(\n    private _configService: ConfigService,\n    private _prismaService: PrismaService,\n    private _discordProvider: DiscordClientProvider,\n  ) {\n    this._twitterAllowedSearchAuthorIds = this._configService.get('twitterAllowedSearchAuthorIds').split(\", \");\n\n    // console.debug('twitterAllowedSearchAuthorIds', this.twitterAllowedSearchAuthorIds)\n\n    this._client = new TwitterApi(\n      this._configService.get('twitterBearerToken'),\n    );\n\n    // this._logger.debug(`twitter client:  ${JSON.stringify(this._client)}`);\n  }\n\n\n\n  /**\n   * It searches for users with the given IDs and returns them.\n   * @returns The twitter users.\n   */\n  async init() {\n    try {\n\n      this._twitterUsers = [];\n      let foundError: boolean = false;\n      const notFoundUserIds: string[] = [];\n\n      for (const twitterUserId of this._twitterAllowedSearchAuthorIds) {\n        const user = await this._client.v2.user(twitterUserId);\n\n        if (user.data && !user.errors) {\n          this._logger.verbose(`twitter user: ${JSON.stringify(user)}`);\n          this._twitterUsers.push(user.data)\n        } else if (user.errors) {\n          foundError = true;\n          notFoundUserIds.push(user.errors[0].value)\n        }\n      }\n\n      await this.pollHaloSupportTweets().catch((error) => {\n        this._logger.error(error)\n      })\n\n      // this._logger.verbose(`twitter users: ${JSON.stringify(this._twitterUsers)}`);\n\n      if (foundError) {\n        return Promise.reject(`User with IDs ${notFoundUserIds} not a valid Twitter User`)\n      } else {\n        return this._twitterUsers;\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It returns an observable that emits the tweets that are currently in the store.\n   * @returns An Observable of tweets.\n   */\n  get newTweets$() {\n    return this._haloSupportTweets.asObservable();\n  }\n\n  /**\n   * It takes in an array of tweets and emits a new array of tweets\n   * @param {TweetV2[]} tweets - TweetV2[]\n   */\n  next(tweets: TweetV2[]) {\n    this._haloSupportTweets.next([...tweets]);\n  }\n\n\n  /**\n   * It sends a message to a Discord channel.\n   * @param {string} channelId - The ID of the channel to send the message to.\n   * @param {TweetV2} tweet - TweetV2\n   * @returns Nothing.\n   */\n  async sendChannel(channelId: string, tweet: TweetV2) {\n    try {\n      const channel = (await this._discordProvider\n        .getClient()\n        .channels.fetch(channelId)) as TextChannel;\n      const createMessage = await this.constructEmbedTweetMessage(tweet).catch((error) => {\n        this._logger.error(error);\n      });\n\n      if (createMessage) {\n        return channel.send({ embeds: [createMessage] });\n      } else {\n        return Promise.reject(`Problem sending message to channel ${channel.name}.`);\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n\n  /**\n   * It constructs a message embed for a tweet.\n   * @param {TweetV2} tweet - TweetV2\n   * @returns A promise.\n   */\n  async constructEmbedTweetMessage(tweet: TweetV2) {\n    try {\n\n      if (this._twitterUsers.some(user => user.id === tweet.author_id)) {\n\n        const tweetAuthor = this._twitterUsers.filter((user) => user.id === tweet.author_id)[0];\n\n        const embedTweet = new MessageEmbed()\n          .setURL(`https://twitter.com/i/web/status/${tweet.id}`)\n          .setAuthor({\n            name: `@${tweetAuthor.username}`,\n            iconURL: null,\n            url: `https://twitter.com/${tweetAuthor.username}`,\n          })\n          .addFields(\n            {\n              name: 'Tweet',\n              value: tweet.text,\n            },\n            {\n              name: 'Actions',\n              value: `[Open Tweet](https://twitter.com/i/web/status/${tweet.id})`,\n            },\n          )\n          .setTimestamp(new Date(tweet.created_at))\n          .setFooter({\n            text: format(new Date(tweet.created_at), 'HH:mm'),\n          });\n        // .setURL(`https://twitter.com/i/web/status/${tweet.id}`)\n        return embedTweet;\n      } else {\n        Promise.reject('Could not find details for tweet author. Author twitter ID is not included in .env configuration TWITTER_ALLOWED_SEARCH_AUTHOR_IDS. Details for these users are loaded in init() function of TwitterService')\n      }\n\n\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It searches for tweets that contain the words \"patch\", \"release\", \"update\", \"problem\", or \"issue\"\n   * and then checks to see if the tweet is from a user that we have allowed to tweet. If it is, it then\n   * checks to see if the tweet is already in our database. If it is not, it then adds the tweet to our\n   * database and then sends a message to the channels that we have configured\n   */\n  async pollHaloSupportTweets() {\n    try {\n      const search = await this._client.v2.search(\n        'from:HaloSupport (\"patch\" OR \"release\" OR \"update\" OR \"problem\" OR \"issue\")',\n        {\n          'tweet.fields': ['created_at', 'id', 'author_id', 'source'],\n        },\n      );\n\n      this._logger.debug('searching for new tweets');\n\n      // this._logger.debug('search', JSON.stringify(search))\n      const newTweets: TweetV2[] = [];\n\n      const sortData = search.data.data.sort((a, b) => {\n        return (\n          new Date(a.created_at).valueOf() - new Date(b.created_at).valueOf()\n        );\n      });\n\n      for (let i = 0; i  id == tweet.author_id,\n          )\n        ) {\n          const found = await this._prismaService.tweet.findUnique({\n            where: {\n              tweet_id: tweet.id,\n            },\n          });\n\n          if (!found) {\n            await this.recordTweet(tweet);\n            newTweets.push(tweet);\n\n            const supportTweetChannelIds: string[] = this._configService.get('supportTweetChannelIds').split(', ');\n\n            for (let i = 0; i  Promise\n   * @param {number} ms - number\n   * @returns Nothing.\n   */\n  delay(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDto.html":{"url":"classes/UpdateDto.html","title":"class - UpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/update/update.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/update/update.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class UpdateDto {\n  @Param({ description: 'Xbox Gamer Tag', required: true })\n  gamertag: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                user\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            It creates a new instance of the PrismaService and assigns it to the prisma property.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe PrismaService instance.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: Prisma.BotUserCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:53\n                \n            \n\n\n            \n                \n                    Create a new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.BotUserCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data that will be used to create the user.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A BotUser object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(where: Prisma.BotUserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:80\n                \n            \n\n\n            \n                \n                    It deletes a user from the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.BotUserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA unique identifier for the user.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The botUser object that was deleted.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:64\n                \n            \n\n\n            \n                \n                    It updates a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \n{\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated user.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(userWhereUniqueInput: Prisma.BotUserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:18\n                \n            \n\n\n            \n                \n                    Find a unique BotUser by its id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.BotUserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPrisma.BotUserWhereUniqueInput\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A BotUser object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:31\n                \n            \n\n\n            \n                \n                    It returns a list of users.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \n{\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of BotUser objects.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { BotUser, Prisma } from '@prisma/client';\n\n@Injectable()\nexport class UserService {\n  /**\n   * It creates a new instance of the PrismaService and assigns it to the prisma property.\n   * @param {PrismaService} prisma - The PrismaService instance.\n   */\n  constructor(private prisma: PrismaService) { }\n\n  /**\n   * Find a unique BotUser by its id\n   * @param userWhereUniqueInput - Prisma.BotUserWhereUniqueInput\n   * @returns A BotUser object\n   */\n  async user(\n    userWhereUniqueInput: Prisma.BotUserWhereUniqueInput,\n  ): Promise {\n    return this.prisma.botUser.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  /**\n   * It returns a list of users.\n   * @param params - {\n   * @returns An array of BotUser objects.\n   */\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.BotUserWhereUniqueInput;\n    where?: Prisma.BotUserWhereInput;\n    orderBy?: Prisma.BotUserOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.botUser.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  /**\n   * Create a new user\n   * @param data - The data that will be used to create the user.\n   * @returns A BotUser object\n   */\n  async createUser(data: Prisma.BotUserCreateInput): Promise {\n    return this.prisma.botUser.create({\n      data,\n    });\n  }\n\n  /**\n   * It updates a user.\n   * @param params - {\n   * @returns The updated user.\n   */\n  async updateUser(params: {\n    where: Prisma.BotUserWhereUniqueInput;\n    data: Prisma.BotUserUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.botUser.update({\n      data,\n      where,\n    });\n  }\n\n  /**\n   * It deletes a user from the database.\n   * @param where - A unique identifier for the user.\n   * @returns The botUser object that was deleted.\n   */\n  async deleteUser(where: Prisma.BotUserWhereUniqueInput): Promise {\n    return this.prisma.botUser.delete({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Vehicles.html":{"url":"interfaces/Vehicles.html","title":"interface - Vehicles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Vehicles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroys\n                                        \n                                \n                                \n                                        \n                                            hijacks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroys:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hijacks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hijacks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/commands/stats/get/get.command.ts\n            \n            class\n            StatsGetSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/get/get.dto.ts\n            \n            class\n            GetDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/stats/help/help.command.ts\n            \n            class\n            StatsHelpSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/help/help.dto.ts\n            \n            class\n            StatsHelpDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/stats/register/register.command.ts\n            \n            class\n            StatsRegSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/register/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/commands/stats/stats.command.ts\n            \n            class\n            StatsBaseCommand\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/commands/stats/stats.dto.ts\n            \n            class\n            StatsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commands/stats/update/update.command.ts\n            \n            class\n            StatsUpdateSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/update/update.dto.ts\n            \n            class\n            UpdateDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controllers/oauth2-discord/oauth2-discord.controller.ts\n            \n            controller\n            Oauth2DiscordController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/exception-filters/discord-command-validation.ts\n            \n            class\n            CommandValidationFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exception-filters/globalExceptions.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/message-fom-user.guard.ts\n            \n            class\n            MessageFromUserGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middleware/example.middleware.ts\n            \n            injectable\n            ExampleMiddleWare\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/interaction-toJSON.model.ts\n            \n            interface\n            ToJsonResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/models/sub-command-options.model.ts\n            \n            interface\n            Choice\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/sub-command-options.model.ts\n            \n            interface\n            DefineDiscordCommand\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/pipes/message-to-upper.pipe.ts\n            \n            class\n            MessageToUpperPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/discord-api.service.ts\n            \n            injectable\n            DiscordApiService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Additional\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            AllTime\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            CsrsRootObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Current\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            QueueGroups\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Season\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/halodotapi.service.ts\n            \n            injectable\n            HaloDotApiService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Additional\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Assists\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Breakdowns\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Damage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Kills\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Matches\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            ServiceRecord\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Shots\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Summary\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            TimePlayed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Vehicles\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/services/twitter.service.ts\n            \n            injectable\n            TwitterService\n            \n                60 %\n                (9/15)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                85 %\n                (6/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @discord-nestjs/common : ^2.0.16\n        \n            @discord-nestjs/core : ^2.1.12\n        \n            @discordjs/rest : ^0.3.0\n        \n            @nestjs/axios : ^0.0.3\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/schedule : ^1.0.2\n        \n            @prisma/client : ^3.8.1\n        \n            date-fns : ^2.26.0\n        \n            discord-api-types : ^0.26.1\n        \n            discord.js : ^13.6.0\n        \n            forever-monitor : ^3.0.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.4.0\n        \n            twitter-api-v2 : ^1.6.5\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Language   (src/.../help.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commands/stats/help/help.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Language\n                    \n                \n                        \n                            \n                                 FI\n                            \n                        \n                        \n                            \n                                Value : fi\n                            \n                        \n                        \n                            \n                                 EN\n                            \n                        \n                        \n                            \n                                Value : en\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Create an instance of NestApplication, register the AppModule, and listen to port 3000\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n  \n  \n\n  Discord bot for Halo Finland  community .\n  \n  \n\n  Built with a progressive Node.js framework called  Nest\n    \n\n\n\n\n\n\n\n \n  \n\n  \n\nDescription\nHalo Finland Discord bot. Production ready versions start @ 1.0.0\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nThis project uses Nest framework.\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021-2022 Halo Finland Community\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Oauth2DiscordModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nOauth2DiscordModule\n\nOauth2DiscordModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nOauth2DiscordModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDiscordCommandProvider \n\nDiscordCommandProvider \n\nDiscordCommandProvider  -->\n\nSharedModule->DiscordCommandProvider \n\n\n\n\n\nHaloDotApiService \n\nHaloDotApiService \n\nHaloDotApiService  -->\n\nSharedModule->HaloDotApiService \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\n\n\nTwitterService \n\nTwitterService \n\nTwitterService  -->\n\nSharedModule->TwitterService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nSharedModule->UserService \n\n\n\n\n\nDiscordApiService\n\nDiscordApiService\n\nAppModule -->\n\nDiscordApiService->AppModule\n\n\n\n\n\nHaloDotApiService\n\nHaloDotApiService\n\nSharedModule -->\n\nHaloDotApiService->SharedModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\nTwitterService\n\nTwitterService\n\nSharedModule -->\n\nTwitterService->SharedModule\n\n\n\n\n\nUserService\n\nUserService\n\nSharedModule -->\n\nUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    22 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
