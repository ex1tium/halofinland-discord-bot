var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Additional.html",[0,0.19,1,0.932]],["body/interfaces/Additional.html",[0,0.358,1,1.606,2,0.957,3,0.181,4,0.158,5,0.158,6,2.077,7,0.229,8,0.669,9,1.19,10,3.416,11,1.234,12,0.337,13,0.019,14,1.662,15,1.162,16,0.867,17,2.215,18,0.317,19,2.929,20,1.742,21,3.32,22,3.32,23,3.32,24,3.32,25,3.32,26,3.32,27,3.32,28,3.32,29,3.32,30,2.605,31,2.231,32,2.215,33,2.605,34,2.077,35,1.744,36,2.077,37,2.077,38,2.215,39,2.215,40,1.567,41,2.215,42,1.954,43,0.867,44,0.013,45,0.013]],["title/interfaces/Additional-1.html",[0,0.159,1,0.777,46,2.15]],["body/interfaces/Additional-1.html",[0,0.375,1,1.575,2,0.912,3,0.173,4,0.151,5,0.151,7,0.218,8,0.648,9,1.167,11,1.049,12,0.241,13,0.019,14,1.673,15,1.108,16,0.826,18,0.332,43,1.268,44,0.013,45,0.013,47,1.494,48,1.494,49,1.575,50,2.178,51,1.575,52,1.575,53,2.178,54,2.218,55,1.494,56,2.218,57,1.575,58,1.575,59,1.575,60,2.178,61,1.575,62,1.575,63,1.575,64,2.178,65,1.575,66,1.575,67,1.575,68,1.575,69,1.575,70,1.575,71,1.575,72,1.575,73,1.575,74,1.575,75,1.575,76,2.07,77,1.494,78,1.575,79,1.575,80,1.575,81,2.178,82,1.921,83,1.575,84,1.575,85,1.494,86,1.494,87,1.575,88,1.575,89,1.575,90,1.575,91,1.419]],["title/classes/AllExceptionsFilter.html",[92,0.331,93,2.371]],["body/classes/AllExceptionsFilter.html",[3,0.174,4,0.152,5,0.152,7,0.22,8,0.652,12,0.372,13,0.019,18,0.174,20,1.117,31,1.431,40,1.507,44,0.013,45,0.013,92,0.343,93,3.318,94,1.36,95,3.484,96,3.293,97,2.263,98,5.86,99,2.562,100,2.427,101,1.978,102,3.122,103,2.263,104,3.834,105,6.751,106,1.627,107,5.176,108,1.837,109,1.437,110,1.747,111,2.427,112,1.879,113,2.079,114,3.605,115,5.176,116,5.86,117,6.274,118,3.834,119,4.445,120,1.232,121,3.605,122,1.125,123,5.176,124,4.805,125,1.173,126,1.117,127,3.834,128,2.129,129,3.834,130,3.834,131,2.458,132,2.67,133,1.879,134,3.834,135,3.834,136,5.176,137,3.293,138,2.67,139,3.834,140,3.834,141,3.293,142,2.744,143,3.834,144,3.834,145,3.834,146,3.834,147,3.834,148,3.834,149,5.176,150,3.834,151,3.834,152,3.834,153,3.834,154,3.834,155,2.393,156,3.834,157,3.834,158,3.834,159,3.834,160,3.834,161,3.834]],["title/interfaces/AllTime.html",[0,0.19,30,1.812]],["body/interfaces/AllTime.html",[0,0.347,1,1.417,2,0.85,3,0.161,4,0.141,5,0.141,6,1.846,7,0.203,8,0.618,9,0.661,10,2.975,11,1.24,12,0.45,13,0.019,14,1.673,15,1.033,16,0.77,17,1.968,18,0.307,19,2.757,20,1.921,21,3.662,22,3.662,23,3.662,24,3.662,25,3.662,26,3.662,27,3.662,28,3.662,29,3.662,30,2.757,31,2.1,32,1.968,33,2.404,34,1.846,35,1.55,36,1.846,37,1.846,38,1.968,39,1.968,40,1.393,41,1.968,42,1.737,43,0.77,44,0.012,45,0.012]],["title/controllers/AppController.html",[40,1.453,162,2.576]],["body/controllers/AppController.html",[3,0.138,4,0.121,5,0.121,7,0.174,12,0.193,13,0.019,18,0.138,40,1.728,44,0.011,45,0.011,92,0.272,97,1.328,99,2.478,100,1.258,101,1.484,102,1.404,103,1.328,106,1.573,109,0.843,111,1.258,113,2.01,120,1.821,121,3.063,122,1.362,125,0.929,126,0.885,128,2.442,132,2.115,133,1.488,138,3.6,155,1.404,162,3.063,163,1.947,164,2.608,165,6.269,166,5.687,167,2.464,168,5.666,169,5.666,170,3.037,171,4.397,172,5.169,173,4.397,174,3.063,175,3.037,176,2.616,177,4.397,178,3.037,179,4.397,180,3.037,181,3.037,182,1.163,183,3.075,184,3.037,185,4.397,186,1.947,187,2.616,188,2.608,189,2.608,190,3.368,191,2.608,192,2.115,193,3.037,194,4.397,195,5.169,196,3.037,197,3.037,198,3.037,199,3.037,200,3.037,201,2.781,202,3.037,203,2.326,204,3.063,205,3.946,206,3.037,207,2.608,208,3.037,209,4.439,210,3.037,211,2.326,212,3.037,213,3.037,214,2.326,215,3.037,216,2.608,217,3.037,218,3.776,219,1.807,220,2.827,221,2.616,222,2.326,223,4.439,224,2.608,225,0.843,226,2.608,227,2.608,228,3.037,229,2.871,230,3.037,231,3.037,232,3.037,233,3.037,234,3.037,235,2.608,236,2.608,237,3.037,238,2.608,239,3.037,240,3.037,241,1.947,242,3.037,243,1.807,244,2.608,245,3.037,246,3.037,247,3.037,248,3.037,249,3.037,250,3.037,251,2.326,252,3.037,253,2.608,254,3.037,255,3.037,256,1.582,257,1.258,258,3.037,259,3.037,260,3.037]],["title/modules/AppModule.html",[16,0.804,261,2.371]],["body/modules/AppModule.html",[3,0.157,4,0.137,5,0.192,13,0.019,16,1.049,18,0.157,44,0.012,45,0.012,92,0.538,93,3.093,119,2.973,120,1.785,122,1.601,125,1.059,126,1.009,162,3.869,163,3.093,167,2.183,174,3.361,182,0.915,187,3.894,188,2.973,189,2.973,190,2.651,192,2.411,261,4.518,262,2.059,263,3.093,264,2.973,265,2.973,266,2.973,267,4.305,268,4.305,269,3.696,270,2.651,271,2.411,272,3.461,273,4.145,274,4.771,275,3.461,276,5.428,277,3.561,278,2.059,279,4.145,280,3.461,281,4.825,282,4.771,283,2.219,284,3.461,285,2.973,286,4.145,287,3.461,288,2.411,289,3.461,290,4.825,291,3.461,292,3.461,293,2.973,294,6.01,295,6.32,296,3.461,297,3.461,298,2.973,299,2.651,300,3.461,301,2.651,302,2.973,303,3.461,304,3.461,305,3.461,306,3.461,307,3.461,308,3.461,309,3.461,310,1.292,311,4.145,312,4.825,313,3.869,314,5.621,315,6.01,316,3.461,317,3.461,318,2.973,319,3.461,320,2.651,321,2.973,322,3.461,323,2.973,324,2.973]],["title/interfaces/Assists.html",[0,0.19,56,1.312]],["body/interfaces/Assists.html",[0,0.373,1,1.447,2,0.885,3,0.168,4,0.147,5,0.147,7,0.212,8,0.635,9,0.689,11,0.847,12,0.365,13,0.019,14,1.68,15,1.076,16,0.802,18,0.33,43,1.249,44,0.012,45,0.012,47,1.451,48,1.451,49,1.529,50,2.145,51,1.529,52,1.529,53,2.145,54,2.192,55,1.451,56,2.295,57,1.529,58,1.529,59,1.529,60,2.145,61,1.529,62,1.529,63,1.529,64,2.145,65,1.529,66,1.529,67,1.529,68,1.529,69,1.529,70,1.529,71,1.529,72,1.529,73,2.559,74,2.559,75,2.559,76,2.039,77,1.451,78,1.529,79,1.529,80,1.529,81,2.145,82,1.883,83,1.529,84,1.529,85,1.451,86,1.451,87,1.529,88,1.529,89,1.529,90,1.529,91,1.378]],["title/interfaces/Breakdowns.html",[0,0.19,81,1.38]],["body/interfaces/Breakdowns.html",[0,0.373,1,1.447,2,0.885,3,0.168,4,0.147,5,0.147,7,0.212,8,0.635,9,0.689,11,0.847,12,0.365,13,0.019,14,1.67,15,1.076,16,0.802,18,0.33,43,1.249,44,0.012,45,0.012,47,1.451,48,1.451,49,1.529,50,2.145,51,1.529,52,1.529,53,2.145,54,2.504,55,1.451,56,2.504,57,1.529,58,1.529,59,1.529,60,2.145,61,1.529,62,1.529,63,1.529,64,2.145,65,1.529,66,1.529,67,1.529,68,1.529,69,1.529,70,1.529,71,1.529,72,1.529,73,1.529,74,1.529,75,1.529,76,2.469,77,1.451,78,1.529,79,1.529,80,1.529,81,2.305,82,1.883,83,1.529,84,1.529,85,1.451,86,1.451,87,1.529,88,1.529,89,1.529,90,1.529,91,1.378]],["title/interfaces/Choice.html",[0,0.19,325,1.812]],["body/interfaces/Choice.html",[0,0.319,2,1.222,3,0.232,4,0.202,5,0.202,7,0.292,8,0.782,11,1.249,12,0.426,13,0.018,14,1.107,18,0.283,20,2.034,44,0.015,45,0.015,109,1.987,220,2.227,225,1.414,325,3.286,326,3.547,327,3.901,328,3.983,329,3.547,330,2.653,331,3.983,332,4.375,333,3.901]],["title/classes/CommandValidationFilter.html",[92,0.331,334,2.2]],["body/classes/CommandValidationFilter.html",[3,0.181,4,0.158,5,0.158,7,0.228,8,0.667,12,0.336,13,0.019,18,0.181,20,1.544,44,0.013,45,0.013,92,0.474,94,1.409,95,3.312,97,2.317,99,2.608,100,2.471,101,1.789,102,3.066,106,1.471,108,1.409,109,1.471,110,1.34,111,2.471,112,1.946,113,2.116,114,3.691,120,1.276,122,1.383,125,1.215,126,1.157,142,2.317,155,2.45,167,2.344,182,1.05,201,1.836,204,2.765,205,2.765,220,2.608,334,3.152,335,3.823,336,3.41,337,5.964,338,3.97,339,3.97,340,6.364,341,5.122,342,6.364,343,3.97,344,5.299,345,3.152,346,3.97,347,2.362,348,1.836,349,2.765,350,3.97,351,3.41,352,2.205,353,2.362,354,3.41,355,3.97,356,2.545,357,3.97,358,3.152,359,3.97,360,3.97,361,3.97,362,3.97,363,3.97,364,3.97,365,2.76,366,2.765]],["title/interfaces/CsrsRootObject.html",[0,0.19,42,1.812]],["body/interfaces/CsrsRootObject.html",[0,0.358,1,1.784,2,0.957,3,0.181,4,0.158,5,0.158,6,2.077,7,0.229,8,0.669,9,0.744,10,3.124,11,1.216,12,0.337,13,0.019,14,1.656,15,1.162,16,0.867,17,2.215,18,0.317,19,2.929,20,1.742,21,3.32,22,3.32,23,3.32,24,3.32,25,3.32,26,3.32,27,3.32,28,3.32,29,3.32,30,2.605,31,2.231,32,2.215,33,3.124,34,2.077,35,1.744,36,2.077,37,2.077,38,2.215,39,2.215,40,1.567,41,2.215,42,2.605,43,1.385,44,0.013,45,0.013]],["title/interfaces/Current.html",[0,0.19,19,1.812]],["body/interfaces/Current.html",[0,0.347,1,1.417,2,0.85,3,0.161,4,0.141,5,0.141,6,1.846,7,0.203,8,0.618,9,0.661,10,2.975,11,1.24,12,0.45,13,0.019,14,1.673,15,1.033,16,0.77,17,1.968,18,0.307,19,2.975,20,1.921,21,3.662,22,3.662,23,3.662,24,3.662,25,3.662,26,3.662,27,3.662,28,3.662,29,3.662,30,2.404,31,2.1,32,1.968,33,2.404,34,1.846,35,1.55,36,1.846,37,1.846,38,1.968,39,1.968,40,1.393,41,1.968,42,1.737,43,0.77,44,0.012,45,0.012]],["title/interfaces/Damage.html",[0,0.19,60,1.38]],["body/interfaces/Damage.html",[0,0.373,1,1.447,2,0.885,3,0.168,4,0.147,5,0.147,7,0.212,8,0.635,9,0.689,11,0.847,12,0.365,13,0.019,14,1.68,15,1.076,16,0.802,18,0.33,43,1.249,44,0.012,45,0.012,47,1.451,48,1.451,49,1.529,50,2.145,51,1.529,52,1.529,53,2.145,54,2.192,55,1.451,56,2.192,57,1.529,58,1.529,59,1.529,60,2.305,61,2.559,62,2.559,63,2.559,64,2.145,65,1.529,66,1.529,67,1.529,68,1.529,69,1.529,70,1.529,71,1.529,72,1.529,73,1.529,74,1.529,75,1.529,76,2.039,77,1.451,78,1.529,79,1.529,80,1.529,81,2.145,82,1.883,83,1.529,84,1.529,85,1.451,86,1.451,87,1.529,88,1.529,89,1.529,90,1.529,91,1.378]],["title/interfaces/Data.html",[0,0.19,43,0.804]],["body/interfaces/Data.html",[0,0.367,1,1.375,2,0.804,3,0.152,4,0.133,5,0.133,7,0.192,8,0.594,9,0.625,11,0.792,12,0.445,13,0.019,14,1.676,15,0.977,16,0.728,18,0.325,43,1.288,44,0.012,45,0.012,47,1.317,48,1.317,49,1.388,50,2.038,51,1.388,52,1.388,53,2.536,54,2.102,55,1.317,56,2.102,57,1.388,58,1.388,59,1.388,60,2.536,61,1.388,62,1.388,63,1.388,64,2.536,65,1.388,66,1.388,67,1.388,68,1.388,69,1.388,70,1.388,71,1.388,72,1.388,73,1.388,74,1.388,75,1.388,76,1.937,77,1.317,78,1.388,79,1.388,80,1.388,81,2.536,82,2.212,83,1.388,84,1.388,85,2.328,86,2.328,87,2.454,88,2.454,89,2.454,90,2.454,91,1.251]],["title/interfaces/DefineDiscordCommand.html",[0,0.19,328,2.371]],["body/interfaces/DefineDiscordCommand.html",[0,0.296,2,1.083,3,0.205,4,0.179,5,0.179,7,0.259,8,0.725,11,1.22,12,0.473,13,0.019,14,1.379,18,0.262,20,1.315,44,0.014,45,0.014,109,1.918,110,2.497,220,1.974,225,1.856,325,3.277,326,3.143,327,3.457,328,4.428,329,4.657,330,3.482,331,4.528,332,5.742,333,5.121]],["title/injectables/DiscordApiService.html",[187,2.2,367,1.453]],["body/injectables/DiscordApiService.html",[3,0.073,4,0.064,5,0.064,7,0.092,8,0.337,9,0.949,11,1.072,12,0.445,13,0.019,18,0.073,20,1.295,31,1.791,43,0.87,44,0.007,45,0.007,46,3.543,92,0.144,99,1.944,100,1.422,101,0.902,102,1.588,103,1.169,106,1.479,108,1.218,109,1.909,110,1.351,111,1.422,112,0.787,113,1.577,120,1.712,122,1.043,124,1.23,125,0.491,128,2.223,133,0.787,142,2.098,155,2.352,167,2.353,182,1.058,186,1.03,187,1.59,201,1.588,218,2.949,219,2.042,220,2.855,221,2.854,223,1.379,225,1.874,227,3.438,229,1.907,241,3.415,243,0.955,244,4.121,256,1.788,257,2.529,277,2.849,278,0.955,279,2.296,283,1.03,310,1.494,320,3.404,326,1.119,328,3.261,329,4.171,330,2.649,333,2.047,345,2.854,365,1.788,366,2.391,367,1.05,368,0.892,369,4.75,370,1.379,371,3.433,372,3.433,373,4.445,374,4.002,375,1.606,376,3.896,377,3.066,378,2.673,379,2.673,380,4.039,381,3.404,382,2.63,383,2.949,384,3.096,385,3.433,386,2.296,387,1.606,388,2.047,389,2.296,390,2.381,391,3.066,392,2.673,393,1.606,394,1.606,395,2.296,396,3.438,397,2.047,398,3.433,399,1.606,400,2.673,401,2.391,402,1.606,403,4.798,404,1.606,405,1.862,406,2.296,407,4.445,408,2.788,409,2.673,410,2.673,411,2.296,412,2.63,413,2.673,414,2.673,415,1.606,416,1.606,417,2.949,418,1.379,419,1.606,420,1.379,421,1.379,422,2.107,423,4.445,424,1.606,425,2.673,426,1.606,427,1.379,428,1.606,429,2.673,430,2.673,431,2.296,432,1.606,433,1.606,434,1.606,435,1.606,436,2.949,437,2.949,438,1.606,439,1.606,440,2.673,441,2.949,442,1.606,443,1.379,444,1.606,445,1.907,446,1.907,447,2.673,448,1.119,449,2.315,450,1.59,451,1.485,452,3.433,453,1.119,454,1.379,455,1.379,456,1.03,457,1.606,458,1.606,459,1.119,460,1.862,461,2.296,462,1.119,463,1.606,464,1.379,465,1.119,466,1.379,467,1.379,468,1.23,469,1.379,470,1.119,471,1.606,472,1.119,473,1.606,474,1.23,475,1.606,476,2.673,477,1.606,478,1.606,479,1.606,480,1.606,481,1.606,482,1.606,483,1.606,484,1.379,485,1.606]],["title/injectables/ExampleMiddleWare.html",[367,1.453,486,2.833]],["body/injectables/ExampleMiddleWare.html",[3,0.205,4,0.179,5,0.179,7,0.259,12,0.366,13,0.019,18,0.205,31,2.496,44,0.014,45,0.014,92,0.404,97,1.974,100,2.387,101,1.945,103,1.974,106,1.599,108,2.044,109,1.599,110,1.945,111,2.77,113,1.601,120,1.45,121,3.143,122,1.252,125,1.381,131,2.893,367,2.264,368,2.506,408,4.92,462,4.013,486,4.413,487,3.876,488,4.513,489,4.513,490,5.761,491,5.451,492,5.742,493,6.686,494,4.513,495,3.457,496,5.761,497,3.457,498,4.513,499,4.513,500,4.948,501,4.513,502,4.513,503,4.513,504,4.513,505,4.513]],["title/classes/GetDto.html",[92,0.331,506,2.576]],["body/classes/GetDto.html",[3,0.226,4,0.197,5,0.197,7,0.285,8,0.77,9,1.237,11,1.027,12,0.315,13,0.019,18,0.226,44,0.015,45,0.015,92,0.445,94,1.762,106,1.379,122,1.079,126,1.447,176,2.954,182,1.313,225,1.379,310,1.854,325,2.434,330,3.186,422,2.534,449,3.186,450,3.639,451,3.397,465,4.617,506,4.261,507,4.265,508,3.459,509,4.966,510,3.459,511,4.265,512,6.117,513,4.966,514,4.966]],["title/injectables/HaloDotApiService.html",[367,1.453,515,2.2]],["body/injectables/HaloDotApiService.html",[3,0.101,4,0.088,5,0.088,7,0.127,8,0.436,9,1.121,11,1.114,12,0.401,13,0.019,18,0.157,20,0.645,31,1.292,34,2.893,35,2.11,36,2.513,37,2.513,44,0.009,45,0.009,92,0.497,99,2.817,100,1.767,101,1.169,102,1.973,103,1.514,106,1.668,108,1.514,109,1.184,110,1.44,111,0.916,112,1.084,113,1.514,120,2.07,122,1.138,125,0.677,132,2.971,133,1.697,142,2.628,155,2.569,167,2.428,186,1.418,201,1.973,203,3.696,211,4.447,221,2.871,225,1.184,229,1.923,243,2.06,256,2.222,257,2.618,277,3.094,278,1.316,283,1.418,345,2.06,365,2.222,367,1.361,368,1.228,376,3.696,377,3.267,381,1.694,382,4.255,386,4.145,397,3.696,408,4.402,412,1.694,417,3.664,420,4.5,421,1.9,422,1.767,436,2.973,437,2.973,441,2.973,445,2.369,446,2.369,484,1.9,495,1.694,515,3.117,516,1.9,517,3.462,518,3.462,519,3.462,520,3.696,521,4.266,522,4.266,523,4.826,524,3.462,525,3.462,526,2.212,527,2.212,528,3.462,529,2.212,530,2.212,531,4.826,532,2.973,533,2.212,534,4.145,535,6.01,536,2.973,537,2.212,538,4.826,539,2.212,540,1.9,541,2.212,542,3.462,543,2.212,544,2.973,545,4.266,546,2.973,547,5.239,548,2.212,549,4.266,550,2.212,551,2.212,552,2.212,553,2.212,554,2.212,555,2.212,556,2.212,557,2.212,558,2.212,559,4.266,560,5.556,561,3.462,562,2.212,563,3.462,564,3.462,565,2.212,566,2.212,567,3.462,568,1.9,569,2.212,570,2.212,571,2.212]],["title/interfaces/Kills.html",[0,0.19,54,1.312]],["body/interfaces/Kills.html",[0,0.372,1,1.437,2,0.873,3,0.165,4,0.145,5,0.145,7,0.209,8,0.629,9,0.679,11,0.838,12,0.39,13,0.019,14,1.681,15,1.06,16,0.791,18,0.33,43,1.239,44,0.012,45,0.012,47,1.43,48,1.43,49,1.507,50,2.129,51,1.507,52,1.507,53,2.129,54,2.283,55,1.43,56,2.178,57,1.507,58,1.507,59,1.507,60,2.129,61,1.507,62,1.507,63,1.507,64,2.129,65,1.507,66,1.507,67,1.507,68,1.507,69,2.543,70,2.543,71,2.543,72,2.543,73,1.507,74,1.507,75,1.507,76,2.024,77,1.43,78,1.507,79,1.507,80,1.507,81,2.129,82,1.864,83,1.507,84,1.507,85,1.43,86,1.43,87,1.507,88,1.507,89,1.507,90,1.507,91,1.358]],["title/interfaces/Matches.html",[0,0.19,76,1.312]],["body/interfaces/Matches.html",[0,0.372,1,1.437,2,0.873,3,0.165,4,0.145,5,0.145,7,0.209,8,0.629,9,0.679,11,0.838,12,0.39,13,0.019,14,1.681,15,1.06,16,0.791,18,0.33,43,1.239,44,0.012,45,0.012,47,1.43,48,1.43,49,1.507,50,2.129,51,1.507,52,1.507,53,2.129,54,2.178,55,1.43,56,2.178,57,1.507,58,1.507,59,1.507,60,2.129,61,1.507,62,1.507,63,1.507,64,2.129,65,1.507,66,1.507,67,1.507,68,1.507,69,1.507,70,1.507,71,1.507,72,1.507,73,1.507,74,1.507,75,1.507,76,2.178,77,2.413,78,2.543,79,2.543,80,2.543,81,2.129,82,1.864,83,1.507,84,1.507,85,1.43,86,1.43,87,1.507,88,1.507,89,1.507,90,1.507,91,1.358]],["title/classes/MessageFromUserGuard.html",[92,0.331,572,2.833]],["body/classes/MessageFromUserGuard.html",[3,0.228,4,0.199,5,0.199,7,0.287,12,0.318,13,0.019,18,0.228,44,0.015,45,0.015,92,0.448,94,1.777,97,2.689,101,2.076,106,1.39,108,1.777,109,1.39,110,1.69,120,1.609,122,1.336,126,1.459,182,1.324,257,2.074,331,3.942,348,2.316,352,3.956,568,4.301,572,4.709,573,5.281,574,5.281,575,4.301,576,6.654,577,6.149,578,6.149,579,5.007,580,4.301,581,5.007,582,4.301]],["title/classes/MessageToUpperPipe.html",[92,0.331,583,2.833]],["body/classes/MessageToUpperPipe.html",[0,0.24,3,0.212,4,0.185,5,0.185,7,0.268,12,0.296,13,0.019,18,0.212,44,0.015,45,0.015,92,0.527,94,1.656,97,2.819,101,1.987,106,1.296,108,1.656,109,1.296,110,1.575,113,1.656,120,1.891,122,1.279,126,1.36,138,4.099,182,1.234,238,4.008,257,1.933,313,3.25,348,2.158,352,4.131,390,4.027,391,4.937,405,3.25,544,4.008,583,4.937,584,5.054,585,4.008,586,6.768,587,6.768,588,4.667,589,4.667,590,4.667,591,4.667,592,4.667,593,4.667,594,4.008,595,4.667]],["title/controllers/Oauth2DiscordController.html",[40,1.453,596,2.576]],["body/controllers/Oauth2DiscordController.html",[3,0.176,4,0.154,5,0.154,7,0.222,12,0.246,13,0.019,18,0.237,31,2.625,40,1.52,44,0.013,45,0.013,92,0.466,99,1.691,100,1.602,101,1.757,106,1.073,108,1.372,109,1.073,110,1.305,111,2.157,113,1.372,120,1.243,122,0.84,124,2.962,125,1.183,128,2.891,133,1.895,142,2.574,163,2.479,167,2.313,176,2.3,182,1.665,201,2.722,225,1.073,257,2.438,288,3.626,298,4.471,301,4.508,302,4.471,310,1.443,352,2.891,380,3.337,408,4.818,491,4.471,495,3.987,500,6.12,596,4.099,597,3.987,598,3.321,599,3.867,600,5.206,601,5.206,602,5.206,603,5.206,604,5.206,605,4.471,606,4.471,607,5.885,608,3.867,609,3.867,610,3.867,611,3.867,612,3.867,613,3.867,614,3.867,615,5.885,616,5.885,617,3.867,618,3.867,619,3.867,620,3.867,621,3.867,622,3.867,623,3.867,624,3.867]],["title/modules/Oauth2DiscordModule.html",[16,0.804,267,2.371]],["body/modules/Oauth2DiscordModule.html",[3,0.249,4,0.217,5,0.217,13,0.019,16,1.409,18,0.249,44,0.016,45,0.016,92,0.49,122,1.409,125,1.673,163,4.157,262,3.253,267,4.157,288,3.809,301,4.188,596,4.814,597,4.188,625,5.468,626,5.468]],["title/injectables/PrismaService.html",[367,1.453,627,2.054]],["body/injectables/PrismaService.html",[3,0.199,4,0.174,5,0.174,7,0.251,12,0.277,13,0.019,18,0.199,44,0.014,45,0.014,92,0.391,97,1.911,101,1.905,106,1.566,108,1.55,109,1.213,110,1.475,120,1.813,122,1.226,125,1.337,166,6.015,167,2.801,201,2.609,225,1.213,367,2.218,368,2.427,383,4.846,422,1.81,456,4.007,606,5.368,627,3.134,628,3.753,629,5.643,630,6.25,631,5.643,632,5.643,633,7.126,634,4.369,635,5.643,636,5.643,637,5.643,638,4.846,639,4.369,640,5.643,641,3.347,642,4.369,643,4.369,644,4.369,645,4.369,646,4.369]],["title/interfaces/QueueGroups.html",[0,0.19,33,1.812]],["body/interfaces/QueueGroups.html",[0,0.354,1,1.471,2,0.914,3,0.173,4,0.151,5,0.151,6,1.984,7,0.218,8,0.649,9,0.711,10,3.067,11,1.205,12,0.371,13,0.019,14,1.649,15,1.11,16,0.828,17,2.116,18,0.313,19,2.862,20,1.702,21,3.244,22,3.244,23,3.244,24,3.244,25,3.244,26,3.244,27,3.244,28,3.244,29,3.244,30,2.526,31,2.616,32,2.116,33,2.862,34,3.259,35,2.554,36,3.042,37,3.042,38,3.475,39,3.244,40,2.295,41,3.244,42,1.867,43,0.828,44,0.013,45,0.013]],["title/classes/RegisterDto.html",[92,0.331,647,2.576]],["body/classes/RegisterDto.html",[3,0.22,4,0.192,5,0.192,7,0.277,8,0.757,9,1.222,11,1.15,12,0.382,13,0.019,18,0.22,44,0.015,45,0.015,92,0.432,94,1.714,106,1.67,122,1.05,126,1.408,176,3.578,182,1.278,225,1.67,310,2.558,325,2.368,330,3.569,422,2.713,449,3.132,450,3.578,451,3.34,453,4.561,454,5.165,456,3.855,508,4.189,510,3.365,647,4.189,648,4.149,649,5.165,650,4.831,651,4.831]],["title/interfaces/Response.html",[0,0.19,31,1.38]],["body/interfaces/Response.html",[0,0.357,1,1.494,2,0.942,3,0.179,4,0.156,5,0.156,6,2.045,7,0.225,8,0.662,9,0.733,10,3.503,11,1.212,12,0.377,13,0.019,14,1.653,15,1.144,16,0.853,17,2.181,18,0.316,19,3.458,20,1.728,21,3.294,22,3.294,23,3.294,24,3.294,25,3.294,26,3.294,27,3.294,28,3.294,29,3.294,30,3.105,31,2.365,32,3.519,33,2.578,34,2.045,35,1.717,36,2.045,37,2.045,38,2.181,39,2.181,40,1.543,41,2.181,42,1.924,43,0.853,44,0.013,45,0.013]],["title/interfaces/Season.html",[0,0.19,10,1.812]],["body/interfaces/Season.html",[0,0.347,1,1.417,2,0.85,3,0.161,4,0.141,5,0.141,6,1.846,7,0.203,8,0.618,9,0.661,10,3.124,11,1.24,12,0.45,13,0.019,14,1.673,15,1.033,16,0.77,17,1.968,18,0.307,19,2.757,20,1.921,21,3.662,22,3.662,23,3.662,24,3.662,25,3.662,26,3.662,27,3.662,28,3.662,29,3.662,30,2.404,31,2.1,32,1.968,33,2.404,34,1.846,35,1.55,36,1.846,37,1.846,38,1.968,39,1.968,40,1.393,41,1.968,42,1.737,43,0.77,44,0.012,45,0.012]],["title/interfaces/ServiceRecord.html",[0,0.19,91,1.38]],["body/interfaces/ServiceRecord.html",[0,0.374,1,1.758,2,0.898,3,0.17,4,0.149,5,0.149,7,0.215,8,0.641,9,0.699,11,0.855,12,0.323,13,0.019,14,1.672,15,1.091,16,0.814,18,0.331,43,1.517,44,0.013,45,0.013,47,1.472,48,1.472,49,1.551,50,2.161,51,1.551,52,1.551,53,2.161,54,2.205,55,1.472,56,2.205,57,1.551,58,1.551,59,1.551,60,2.161,61,1.551,62,1.551,63,1.551,64,2.161,65,1.551,66,1.551,67,1.551,68,1.551,69,1.551,70,1.551,71,1.551,72,1.551,73,1.551,74,1.551,75,1.551,76,2.054,77,1.472,78,1.551,79,1.551,80,1.551,81,2.161,82,1.902,83,1.551,84,1.551,85,1.472,86,1.472,87,1.551,88,1.551,89,1.551,90,1.551,91,1.902]],["title/modules/SharedModule.html",[16,0.804,268,2.371]],["body/modules/SharedModule.html",[3,0.139,4,0.121,5,0.175,13,0.019,16,0.959,18,0.139,44,0.011,45,0.011,92,0.273,93,2.829,95,1.695,122,1.51,125,0.934,126,1.286,128,2.879,138,2.126,182,1.167,183,4.178,219,3.084,222,2.338,224,2.622,226,2.622,241,3.323,262,1.816,263,2.829,268,4.686,269,3.38,270,2.338,271,2.126,273,3.791,274,3.791,276,3.791,277,3.641,278,1.816,282,3.791,283,1.957,285,2.622,286,3.791,299,3.97,310,1.139,313,2.126,318,2.622,321,2.622,323,2.622,324,2.622,329,3.61,348,2.786,352,2.879,376,2.338,380,3.323,381,3.38,390,2.626,405,2.126,515,4.178,582,2.622,594,2.622,627,3.9,652,2.622,653,2.622,654,2.622,655,5.695,656,3.657,657,3.052,658,4.413,659,4.413,660,5.679,661,2.622,662,3.052,663,3.052,664,2.126,665,3.052,666,3.052,667,3.052,668,3.052,669,3.052,670,4.413,671,4.413,672,5.184,673,3.052,674,3.052,675,3.052,676,3.052,677,2.622,678,3.052,679,3.052,680,3.052,681,3.052,682,3.052,683,4.413,684,3.052,685,3.052,686,3.052,687,3.052,688,3.052,689,3.052,690,3.052,691,3.052,692,3.052,693,3.052,694,3.052,695,3.052,696,3.052,697,3.052,698,3.052,699,3.052,700,3.052,701,3.052,702,3.052,703,3.052]],["title/interfaces/Shots.html",[0,0.19,64,1.38]],["body/interfaces/Shots.html",[0,0.372,1,1.437,2,0.873,3,0.165,4,0.145,5,0.145,7,0.209,8,0.629,9,0.679,11,0.838,12,0.39,13,0.019,14,1.681,15,1.06,16,0.791,18,0.33,43,1.239,44,0.012,45,0.012,47,1.43,48,1.43,49,1.507,50,2.129,51,1.507,52,1.507,53,2.129,54,2.178,55,1.43,56,2.178,57,1.507,58,1.507,59,1.507,60,2.129,61,1.507,62,1.507,63,1.507,64,2.291,65,2.543,66,2.543,67,2.543,68,2.543,69,1.507,70,1.507,71,1.507,72,1.507,73,1.507,74,1.507,75,1.507,76,2.024,77,1.43,78,1.507,79,1.507,80,1.507,81,2.129,82,1.864,83,1.507,84,1.507,85,1.43,86,1.43,87,1.507,88,1.507,89,1.507,90,1.507,91,1.358]],["title/classes/StatsBaseCommand.html",[92,0.331,704,2.833]],["body/classes/StatsBaseCommand.html",[3,0.213,4,0.186,5,0.186,13,0.019,18,0.269,44,0.015,45,0.015,92,0.529,94,1.665,109,1.302,122,1.519,126,1.367,182,1.241,220,2.965,225,1.639,229,3.766,241,4.347,390,3.513,520,3.593,704,4.949,705,4.029,706,6.781,707,5.904,708,5.904,709,5.904,710,6.461,711,4.112,712,4.691,713,4.112,714,4.691,715,4.112,716,4.691,717,4.112,718,4.691,719,4.029]],["title/classes/StatsDto.html",[92,0.331,720,2.833]],["body/classes/StatsDto.html",[3,0.212,4,0.185,5,0.185,11,1.082,12,0.374,13,0.019,14,1.401,18,0.212,44,0.015,45,0.015,92,0.418,94,1.656,109,1.879,122,1.014,126,1.36,182,1.234,225,1.937,310,2.526,325,2.287,330,3.525,353,3.835,422,2.952,510,3.25,720,4.507,721,4.008,722,5.885,723,4.667,724,4.667,725,5.885,726,5.885,727,4.667,728,6.446,729,4.667]],["title/classes/StatsGetSubCommand.html",[92,0.331,715,2.576]],["body/classes/StatsGetSubCommand.html",[3,0.088,4,0.077,5,0.077,7,0.111,8,0.391,9,1.027,11,0.323,12,0.247,13,0.019,18,0.088,20,1.897,35,1.357,44,0.008,45,0.008,54,1.101,55,1.22,56,1.101,76,1.101,77,1.22,85,1.22,86,1.22,92,0.173,94,0.684,95,1.07,97,1.357,99,2.141,100,1.614,101,1.048,102,0.891,103,1.357,106,1.082,108,1.101,109,1.849,110,1.048,111,1.614,112,0.944,113,1.952,120,0.619,122,1.244,125,0.95,126,0.562,142,2.503,155,1.802,167,1.531,182,0.821,201,2.866,204,4.224,205,3.41,214,2.377,220,0.843,225,0.535,229,1.07,235,1.655,236,1.655,256,1.004,257,1.286,310,2.532,334,1.147,335,1.235,345,1.846,347,3.113,348,0.891,349,1.342,353,1.846,356,3.669,358,2.913,365,1.004,401,1.342,422,0.798,445,1.07,446,1.07,449,1.004,461,1.655,506,3.111,515,2.657,520,1.476,532,2.665,536,2.665,656,2.326,661,1.655,664,1.342,715,2.161,730,1.655,731,2.714,732,2.714,733,1.927,734,2.984,735,3.103,736,3.103,737,3.103,738,1.342,739,3.111,740,1.927,741,2.161,742,1.342,743,1.655,744,2.161,745,2.161,746,1.342,747,1.476,748,2.377,749,2.377,750,1.927,751,1.476,752,1.342,753,1.655,754,1.927,755,1.927,756,5.232,757,1.927,758,1.927,759,3.103,760,2.377,761,2.377,762,1.476,763,4.214,764,5.232,765,3.103,766,4.466,767,4.466,768,4.466,769,3.103,770,3.103,771,5.232,772,3.103,773,3.103,774,3.103,775,3.103,776,3.111,777,3.103,778,6.315,779,3.103,780,3.103,781,3.103,782,3.103,783,4.466,784,3.103,785,2.377,786,2.377,787,3.103,788,3.103,789,3.103,790,2.377,791,4.466,792,4.896,793,4.896,794,4.896,795,3.75,796,4.466,797,3.103,798,3.103,799,3.103,800,3.346,801,1.927,802,1.476,803,1.927,804,1.927,805,1.927,806,1.927,807,1.927]],["title/classes/StatsHelpDto.html",[92,0.331,808,2.576]],["body/classes/StatsHelpDto.html",[3,0.23,4,0.201,5,0.201,7,0.29,8,0.78,12,0.322,13,0.019,18,0.23,44,0.015,45,0.015,92,0.453,94,1.797,106,1.406,122,1.101,126,1.476,176,3.013,182,1.339,225,1.406,310,1.89,325,2.482,330,3.225,422,2.565,468,5.122,469,5.318,470,4.977,472,4.312,474,4.742,508,3.527,511,4.35,808,4.312,809,3.879,810,5.064,811,5.064,812,5.064]],["title/classes/StatsHelpSubCommand.html",[92,0.331,713,2.576]],["body/classes/StatsHelpSubCommand.html",[3,0.132,4,0.115,5,0.115,7,0.166,8,0.535,9,1.033,12,0.27,13,0.019,18,0.132,20,1.943,44,0.011,45,0.011,92,0.259,94,1.027,95,1.607,97,1.856,99,2.199,100,2.083,101,1.433,102,1.338,103,2.199,106,1.396,108,1.027,109,1.881,110,1.433,111,2.083,112,1.418,113,1.965,114,2.957,120,0.93,122,1.34,125,1.299,126,0.843,133,1.418,142,1.856,155,1.963,167,1.976,182,1.465,204,2.957,220,1.856,221,1.722,225,0.803,229,3.423,241,1.855,243,1.722,256,1.507,257,2.294,310,1.585,311,2.485,334,1.722,335,1.855,347,2.991,348,1.338,349,2.016,352,2.358,356,3.781,358,2.526,365,1.507,380,3.223,412,2.217,422,1.199,445,1.607,446,1.607,448,2.957,449,2.211,451,1.607,453,2.957,460,2.957,464,2.485,466,4.757,468,3.251,470,2.016,472,2.016,713,2.957,731,3.502,732,3.502,738,2.016,739,3.857,741,2.957,742,2.016,744,2.957,745,2.957,746,2.016,747,2.217,748,3.251,751,2.217,752,2.016,753,3.646,776,2.957,785,3.251,786,3.251,790,3.251,795,3.251,808,3.857,813,2.485,814,4.245,815,2.894,816,2.894,817,2.894,818,4.245,819,2.894,820,2.894,821,2.894,822,4.245,823,4.245,824,2.894,825,4.245,826,2.894,827,2.894,828,2.894,829,2.894,830,2.894,831,2.894,832,2.894,833,4.245,834,2.894,835,2.894,836,2.894,837,2.894,838,2.894,839,5.028,840,4.245,841,2.894,842,2.894,843,2.894,844,4.245,845,3.251,846,2.957,847,4.245,848,2.894,849,2.894,850,2.894,851,2.894,852,2.485,853,2.894]],["title/classes/StatsRegSubCommand.html",[92,0.331,711,2.576]],["body/classes/StatsRegSubCommand.html",[3,0.132,4,0.116,5,0.116,7,0.167,8,0.537,9,1.284,12,0.32,13,0.019,18,0.132,20,1.8,43,0.633,44,0.011,45,0.011,46,2.971,92,0.261,94,1.034,95,1.618,97,1.865,99,2.207,100,2.091,101,1.44,102,1.347,103,1.274,106,1.401,108,1.514,109,1.817,110,1.44,111,2.091,112,1.428,113,2.098,114,2.971,120,0.936,122,1.387,125,1.305,126,0.849,131,1.867,133,1.428,142,2.586,155,1.973,167,1.983,182,1.128,201,1.347,219,2.538,220,1.865,225,0.809,256,1.517,257,2.091,310,1.592,334,1.733,335,1.867,347,2.538,348,1.347,349,2.029,356,3.235,358,1.733,365,1.517,397,2.231,401,2.029,445,1.618,446,1.618,448,2.029,449,2.222,450,1.733,451,1.618,453,4.303,455,2.502,459,2.971,465,2.029,647,3.869,649,3.664,656,2.893,664,2.029,711,2.971,731,3.515,732,2.971,734,3.267,738,2.029,739,3.869,741,2.971,742,2.029,744,2.029,745,2.971,746,2.029,747,2.231,748,3.267,749,3.267,751,2.231,752,2.029,760,2.231,761,4.255,762,2.231,763,4.255,795,2.231,802,3.865,845,2.231,846,2.029,854,2.502,855,2.502,856,4.265,857,2.913,858,2.913,859,2.913,860,2.231,861,2.502,862,2.502,863,2.913,864,2.913,865,3.664,866,2.502,867,5.047,868,2.913,869,2.913,870,2.913,871,2.502,872,4.265,873,2.913,874,2.913,875,2.502,876,2.502,877,4.265,878,4.265,879,2.913,880,2.913]],["title/classes/StatsUpdateSubCommand.html",[92,0.331,717,2.576]],["body/classes/StatsUpdateSubCommand.html",[3,0.152,4,0.133,5,0.133,7,0.192,8,0.594,9,1.268,12,0.347,13,0.019,18,0.152,20,1.591,43,0.728,44,0.012,45,0.012,92,0.3,94,1.189,97,2.063,99,2.387,100,2.261,101,1.592,102,1.55,103,1.465,106,1.515,108,1.674,109,1.734,110,1.592,111,2.261,112,1.642,113,2.102,120,1.077,122,1.408,125,1.443,126,0.977,131,2.148,133,1.642,142,2.591,155,2.181,167,2.145,182,1.247,201,1.55,219,1.993,220,2.063,222,2.566,225,0.93,229,1.861,256,1.745,257,2.454,310,1.251,347,3.248,348,1.55,356,3.499,358,1.993,365,1.745,401,2.334,445,1.861,446,1.861,448,2.334,449,1.745,450,1.993,451,1.861,460,3.802,462,2.334,656,3.086,664,2.334,717,3.285,731,3.802,732,3.285,734,3.613,738,2.334,739,4.127,741,3.285,742,2.334,743,2.878,744,2.334,745,3.285,746,2.334,749,3.613,752,2.334,760,2.566,761,4.181,762,2.566,763,4.181,776,2.334,790,2.566,802,3.613,845,3.613,846,2.334,855,2.878,862,2.878,865,4.051,866,2.878,871,2.878,875,2.878,876,2.878,881,2.878,882,4.717,883,4.717,884,4.127,885,3.351,886,3.351,887,3.351,888,3.351,889,3.351,890,3.351]],["title/interfaces/Summary.html",[0,0.19,53,1.38]],["body/interfaces/Summary.html",[0,0.369,1,1.405,2,0.837,3,0.159,4,0.139,5,0.139,7,0.2,8,0.611,9,0.651,11,0.814,12,0.427,13,0.019,14,1.682,15,1.017,16,0.758,18,0.327,43,1.212,44,0.012,45,0.012,47,1.371,48,1.371,49,1.445,50,2.562,51,1.445,52,1.445,53,2.251,54,2.388,55,2.37,56,2.388,57,2.498,58,2.498,59,2.498,60,2.082,61,1.445,62,1.445,63,1.445,64,2.082,65,1.445,66,1.445,67,1.445,68,1.445,69,1.445,70,1.445,71,1.445,72,1.445,73,1.445,74,1.445,75,1.445,76,1.979,77,1.371,78,1.445,79,1.445,80,1.445,81,2.082,82,1.811,83,1.445,84,1.445,85,1.371,86,1.371,87,1.445,88,1.445,89,1.445,90,1.445,91,1.302]],["title/interfaces/TimePlayed.html",[0,0.19,82,1.38]],["body/interfaces/TimePlayed.html",[0,0.374,1,1.458,2,0.898,3,0.17,4,0.149,5,0.149,7,0.215,8,0.641,9,0.699,11,1.043,12,0.323,13,0.019,14,1.675,15,1.091,16,0.814,18,0.331,43,1.258,44,0.013,45,0.013,47,1.472,48,1.472,49,1.551,50,2.161,51,1.551,52,1.551,53,2.161,54,2.205,55,1.472,56,2.205,57,1.551,58,1.551,59,1.551,60,2.161,61,1.551,62,1.551,63,1.551,64,2.161,65,1.551,66,1.551,67,1.551,68,1.551,69,1.551,70,1.551,71,1.551,72,1.551,73,1.551,74,1.551,75,1.551,76,2.054,77,1.472,78,1.551,79,1.551,80,1.551,81,2.161,82,2.161,83,2.574,84,2.574,85,1.472,86,1.472,87,1.551,88,1.551,89,1.551,90,1.551,91,1.398]],["title/interfaces/ToJsonResponse.html",[0,0.19,891,2.833]],["body/interfaces/ToJsonResponse.html",[0,0.204,2,0.952,3,0.181,4,0.158,5,0.158,7,0.228,8,0.667,11,1.283,12,0.476,13,0.019,14,1.296,18,0.181,44,0.013,45,0.013,46,2.765,331,4.372,353,3.786,366,2.765,384,4.432,396,5.466,427,5.466,546,5.466,846,4.432,891,4.059,892,3.41,893,3.41,894,5.466,895,6.364,896,6.364,897,6.364,898,6.364,899,6.364,900,6.364,901,5.964,902,5.964,903,5.964,904,5.964]],["title/injectables/TwitterService.html",[183,2.2,367,1.453]],["body/injectables/TwitterService.html",[3,0.065,4,0.096,5,0.057,7,0.082,8,0.305,11,0.85,12,0.357,13,0.019,14,1.047,18,0.065,20,1.317,35,0.625,44,0.006,45,0.006,92,0.282,99,2.777,100,1.307,101,0.818,102,1.458,103,1.059,106,1.694,108,1.709,109,1.517,110,1.626,111,0.592,112,1.821,113,2.165,120,2.016,121,0.995,122,1.147,125,0.437,126,0.416,128,1.345,132,2.197,133,2.214,142,2.521,155,2.227,167,2.434,174,0.995,182,0.834,183,1.876,186,0.916,190,1.094,191,1.227,192,0.995,201,2.227,203,3.185,205,1.687,207,2.08,209,3.19,211,2.845,214,1.855,216,4.952,221,0.85,225,1.337,256,1.935,257,2.487,277,3.087,278,0.85,293,1.227,299,1.094,310,0.533,331,0.916,345,2.21,347,1.441,348,0.661,351,2.08,352,2.932,353,2.865,354,2.08,358,0.85,365,1.643,366,2.197,367,0.952,368,0.793,377,2.416,382,1.094,384,2.896,388,1.855,390,2.21,405,1.687,406,3.19,422,2.099,443,2.709,445,1.752,446,1.752,456,3.087,459,2.197,460,2.197,465,0.995,492,2.08,534,1.227,627,2.675,776,0.995,785,1.094,786,1.094,860,3.461,894,2.08,905,1.227,906,3.154,907,3.154,908,3.154,909,3.154,910,2.422,911,2.422,912,3.715,913,2.422,914,2.422,915,2.422,916,2.422,917,1.428,918,3.715,919,3.715,920,4.816,921,2.422,922,1.855,923,4.518,924,2.422,925,2.422,926,6.772,927,1.428,928,2.422,929,2.422,930,6.481,931,3.154,932,1.428,933,3.154,934,3.715,935,1.428,936,3.715,937,2.422,938,3.154,939,3.572,940,2.422,941,1.428,942,3.715,943,1.428,944,2.422,945,2.422,946,3.154,947,3.154,948,3.715,949,3.154,950,3.715,951,3.715,952,2.422,953,2.422,954,2.422,955,2.422,956,1.428,957,1.428,958,1.094,959,2.422,960,2.422,961,1.428,962,4.518,963,1.428,964,1.428,965,1.428,966,1.428,967,4.158,968,1.428,969,2.422,970,1.428,971,1.428,972,3.154,973,1.428,974,1.428,975,2.422,976,2.422,977,1.428,978,1.428,979,1.428,980,1.428,981,1.428,982,1.227,983,1.227,984,2.422,985,1.428,986,1.227,987,1.227,988,2.422,989,2.422,990,1.428,991,2.422,992,1.428,993,1.428,994,1.428,995,1.428,996,1.428,997,1.428,998,2.422,999,3.154,1000,2.422,1001,1.428,1002,1.428,1003,1.428,1004,2.422,1005,2.422,1006,1.428,1007,1.428,1008,1.428,1009,1.428,1010,1.428,1011,1.428,1012,1.428,1013,1.428,1014,1.428,1015,1.428,1016,1.428,1017,3.154,1018,1.428,1019,1.428,1020,1.428,1021,1.428,1022,1.428,1023,2.422,1024,3.154,1025,1.428,1026,1.428,1027,2.422,1028,2.422,1029,1.428,1030,1.428,1031,1.428,1032,1.428,1033,1.428,1034,1.428,1035,1.428,1036,1.428,1037,2.422,1038,1.428,1039,1.428,1040,1.227,1041,2.422,1042,1.227,1043,1.428,1044,1.428,1045,1.428,1046,1.428,1047,1.428,1048,1.428,1049,1.428,1050,1.428,1051,1.428,1052,1.428,1053,1.428,1054,1.428,1055,1.428,1056,1.428,1057,1.428,1058,1.428,1059,1.428,1060,1.428,1061,1.428,1062,1.428,1063,1.428,1064,1.428,1065,1.428,1066,1.428,1067,1.428,1068,1.428]],["title/classes/UpdateDto.html",[92,0.331,884,2.576]],["body/classes/UpdateDto.html",[3,0.236,4,0.206,5,0.206,7,0.297,8,0.791,9,1.26,11,1.054,12,0.329,13,0.019,18,0.236,44,0.016,45,0.016,92,0.464,94,1.839,106,1.439,122,1.126,126,1.51,176,3.083,182,1.37,225,1.439,310,2.344,325,2.54,330,3.27,422,2.601,449,3.27,450,3.735,451,3.487,508,3.609,510,3.609,884,4.373,1069,4.451,1070,5.182]],["title/injectables/UserService.html",[367,1.453,656,1.926]],["body/injectables/UserService.html",[3,0.122,4,0.107,5,0.107,7,0.154,12,0.423,13,0.019,14,0.873,18,0.122,43,1.389,44,0.01,45,0.01,92,0.24,101,1.356,103,1.174,106,1.665,108,2.128,109,1.665,110,2.025,113,1.895,120,2.199,122,1.045,125,0.821,128,2.23,131,1.721,142,1.756,167,2.767,225,1.665,257,2.368,313,4.178,314,3.449,345,3.959,353,4.189,367,1.578,368,1.491,384,2.797,388,3.076,389,3.449,390,2.389,391,3.076,395,3.449,418,4.132,422,2.485,456,2.574,540,4.586,627,3.63,641,2.056,656,2.091,800,5.803,852,3.449,860,4.089,922,4.089,958,4.089,983,2.306,1040,3.449,1071,2.306,1072,4.016,1073,4.016,1074,4.016,1075,2.685,1076,2.685,1077,4.016,1078,5.998,1079,4.016,1080,4.811,1081,2.685,1082,4.016,1083,6.655,1084,2.685,1085,5.339,1086,3.449,1087,4.016,1088,4.016,1089,2.685,1090,5.998,1091,4.016,1092,2.685,1093,2.685,1094,5.339,1095,4.016,1096,2.685,1097,2.685,1098,4.811,1099,4.811,1100,2.685,1101,4.811,1102,2.685,1103,2.685,1104,2.685,1105,2.685,1106,2.685,1107,2.685]],["title/interfaces/Vehicles.html",[0,0.19,50,1.38]],["body/interfaces/Vehicles.html",[0,0.374,1,1.458,2,0.898,3,0.17,4,0.149,5,0.149,7,0.215,8,0.641,9,0.699,11,0.855,12,0.323,13,0.019,14,1.678,15,1.091,16,0.814,18,0.331,43,1.258,44,0.013,45,0.013,47,1.472,48,1.472,49,1.551,50,2.319,51,2.574,52,2.574,53,2.161,54,2.205,55,1.472,56,2.205,57,1.551,58,1.551,59,1.551,60,2.161,61,1.551,62,1.551,63,1.551,64,2.161,65,1.551,66,1.551,67,1.551,68,1.551,69,1.551,70,1.551,71,1.551,72,1.551,73,1.551,74,1.551,75,1.551,76,2.054,77,1.472,78,1.551,79,1.551,80,1.551,81,2.161,82,1.902,83,1.551,84,1.551,85,1.472,86,1.472,87,1.551,88,1.551,89,1.551,90,1.551,91,1.398]],["title/coverage.html",[1108,3.869]],["body/coverage.html",[0,0.38,1,1.086,5,0.117,6,3.34,10,1.449,12,0.188,13,0.019,19,1.449,30,1.449,31,1.103,33,1.449,40,1.695,42,1.449,43,0.642,44,0.011,45,0.011,47,2.743,48,2.743,50,1.103,53,1.103,54,1.049,56,1.049,60,1.103,64,1.103,76,1.049,81,1.103,82,1.103,91,1.103,92,0.636,93,1.895,95,2.395,96,2.539,113,1.049,162,2.059,164,2.539,174,2.059,183,1.759,187,1.759,220,2.226,288,2.059,325,1.449,326,3.003,327,3.303,328,1.895,334,1.759,335,1.895,336,2.539,367,2.441,369,2.539,370,2.539,459,5.298,486,2.264,487,2.539,506,2.059,507,2.539,515,1.759,516,2.539,572,2.264,573,2.539,574,2.539,575,2.539,583,2.264,584,2.539,585,2.539,596,2.059,597,2.264,598,2.539,627,1.642,628,2.539,647,2.059,648,2.539,656,1.54,704,2.264,705,2.539,711,2.059,713,2.059,715,2.059,717,2.059,720,2.264,721,2.539,730,2.539,808,2.059,809,2.264,813,2.539,854,2.539,881,2.539,884,2.059,891,2.264,892,2.539,893,2.539,905,2.539,1069,2.539,1071,2.539,1086,2.539,1108,2.264,1109,2.539,1110,2.956,1111,2.956,1112,2.956,1113,6.81,1114,6.21,1115,6.702,1116,4.312,1117,4.312,1118,2.956,1119,2.956,1120,2.956,1121,2.539,1122,2.539,1123,2.956,1124,4.312,1125,4.312,1126,4.312,1127,5.595,1128,5.09,1129,2.956,1130,2.956,1131,2.956,1132,2.956,1133,2.956,1134,2.956,1135,2.956,1136,2.956]],["title/dependencies.html",[263,2.852,1137,3.087]],["body/dependencies.html",[13,0.019,44,0.015,45,0.015,125,1.862,126,1.774,182,1.747,186,3.157,192,3.43,221,3.621,263,3.157,278,2.93,283,3.157,341,4.23,348,2.277,497,3.772,641,3.772,939,4.23,982,4.23,986,4.23,987,4.23,1138,4.924,1139,4.924,1140,4.924,1141,4.924,1142,4.924,1143,6.605,1144,4.924,1145,4.924,1146,4.924,1147,4.924,1148,4.924,1149,4.924,1150,4.924,1151,4.924,1152,4.924,1153,4.924,1154,4.924,1155,4.924,1156,4.924,1157,4.924,1158,4.924,1159,4.924,1160,4.924]],["title/miscellaneous/enumerations.html",[1161,2.15,1162,3.821]],["body/miscellaneous/enumerations.html",[7,0.328,13,0.018,20,1.939,44,0.016,45,0.016,470,4.634,472,4.634,474,5.096,809,4.376,1161,3.98,1162,4.907,1163,5.714]],["title/miscellaneous/functions.html",[1161,2.15,1164,3.821]],["body/miscellaneous/functions.html",[7,0.327,13,0.016,44,0.016,45,0.016,219,3.388,261,3.651,677,4.892,922,4.362,958,4.362,1121,4.892,1122,6.038,1161,3.967,1164,4.892,1165,5.695,1166,5.695,1167,5.695,1168,5.695]],["title/index.html",[7,0.177,251,2.364,1169,2.651]],["body/index.html",[4,0.181,13,0.019,35,1.989,44,0.014,45,0.014,141,3.906,182,1.531,225,1.262,243,3.444,253,6.079,380,3.711,467,3.906,605,3.906,638,3.906,1108,3.483,1170,4.972,1171,3.906,1172,4.548,1173,4.548,1174,4.548,1175,5.789,1176,4.548,1177,6.705,1178,5.789,1179,4.548,1180,4.548,1181,5.789,1182,4.548,1183,4.548,1184,7.192,1185,4.548,1186,4.548,1187,4.548,1188,5.789,1189,4.548,1190,4.548,1191,4.548,1192,5.789,1193,5.789,1194,4.548,1195,4.548,1196,4.548,1197,5.789,1198,4.548,1199,4.972,1200,5.789,1201,4.548,1202,4.548,1203,4.548,1204,3.906,1205,4.548,1206,4.548,1207,4.548,1208,4.548,1209,4.548,1210,3.483]],["title/license.html",[251,2.364,1169,2.651,1210,2.364]],["body/license.html",[13,0.014,44,0.014,45,0.014,243,2.705,271,3.167,411,4.972,462,4.032,497,3.483,580,3.906,719,3.906,861,3.906,1042,3.906,1109,3.906,1170,3.906,1171,3.906,1199,3.906,1210,3.483,1211,6.369,1212,4.548,1213,4.548,1214,4.548,1215,4.548,1216,4.548,1217,4.548,1218,4.548,1219,4.548,1220,4.548,1221,5.789,1222,7.35,1223,4.548,1224,4.548,1225,4.548,1226,6.369,1227,4.548,1228,5.789,1229,4.548,1230,4.548,1231,4.548,1232,4.548,1233,4.548,1234,4.548,1235,4.548,1236,4.548,1237,4.548,1238,5.789,1239,4.548,1240,4.548,1241,4.548,1242,4.548,1243,4.548,1244,4.548,1245,4.548,1246,5.789,1247,5.789,1248,4.548,1249,4.548,1250,4.548,1251,4.548,1252,4.548,1253,4.548,1254,4.548,1255,4.548,1256,4.548,1257,4.548,1258,4.548,1259,4.548,1260,4.548,1261,4.548,1262,4.548,1263,4.548,1264,4.548,1265,4.548,1266,4.548,1267,4.548,1268,4.548,1269,4.548,1270,4.548,1271,4.548,1272,4.548]],["title/modules.html",[262,3.005]],["body/modules.html",[13,0.016,44,0.016,45,0.016,137,4.907,261,3.663,262,3.399,267,3.663,268,3.663,1204,5.715,1273,6.654,1274,6.654,1275,7.04,1276,5.714]],["title/overview.html",[1277,4.338]],["body/overview.html",[2,1.085,13,0.019,44,0.014,45,0.014,94,1.605,163,2.901,183,4.274,187,3.78,261,4.662,262,2.692,263,3.699,264,3.886,265,3.886,266,3.886,267,4.073,268,4.874,269,4.42,270,3.465,271,3.151,320,3.465,368,2.513,431,3.886,515,4.274,627,3.99,652,3.886,653,3.886,654,3.886,655,5.748,656,3.741,1277,3.886,1278,4.524,1279,4.524,1280,4.524]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":459,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsRegSubCommand.html":{},"injectables/TwitterService.html":{},"coverage.html":{}}}],["0.0.3",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["0.26.1",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":46,"title":{"interfaces/Additional-1.html":{}},"body":{"injectables/DiscordApiService.html":{},"classes/StatsRegSubCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["1.0.0",{"_index":1182,"title":{},"body":{"index.html":{}}}],["1.0.2",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["1.6.5",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["13.6.0",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1279,"title":{},"body":{"overview.html":{}}}],["2",{"_index":431,"title":{},"body":{"injectables/DiscordApiService.html":{},"overview.html":{}}}],["2.0.16",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["2.1.12",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["2.26.0",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["2.3",{"_index":552,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["2/3",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":441,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["2021",{"_index":1213,"title":{},"body":{"license.html":{}}}],["2022",{"_index":1214,"title":{},"body":{"license.html":{}}}],["22",{"_index":1280,"title":{},"body":{"overview.html":{}}}],["24",{"_index":457,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["3",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"overview.html":{}}}],["3.0.2",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["3.8.1",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["5",{"_index":254,"title":{},"body":{"controllers/AppController.html":{}}}],["5/9",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1278,"title":{},"body":{"overview.html":{}}}],["6/7",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["9/15",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["_client",{"_index":906,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_configservice",{"_index":377,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["_discordapiservice",{"_index":197,"title":{},"body":{"controllers/AppController.html":{}}}],["_discordprovider",{"_index":919,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_halodotapi",{"_index":736,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["_halodotapiinfinitebaseurl",{"_index":521,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["_halosupporttweets",{"_index":907,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_headers",{"_index":522,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["_http",{"_index":528,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["_httpservice",{"_index":385,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["_logger",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["_prismaservice",{"_index":918,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_submap",{"_index":194,"title":{},"body":{"controllers/AppController.html":{}}}],["_submap.set",{"_index":206,"title":{},"body":{"controllers/AppController.html":{}}}],["_twitterallowedsearchauthorids",{"_index":908,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_twitterservice",{"_index":196,"title":{},"body":{"controllers/AppController.html":{}}}],["_twitterusers",{"_index":909,"title":{},"body":{"injectables/TwitterService.html":{}}}],["_userservice",{"_index":734,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["above",{"_index":1245,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":916,"title":{},"body":{"injectables/TwitterService.html":{}}}],["accuracy",{"_index":68,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["action",{"_index":1266,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1034,"title":{},"body":{"injectables/TwitterService.html":{}}}],["addfields",{"_index":776,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["additional",{"_index":1,"title":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["adds",{"_index":207,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["against",{"_index":804,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["age",{"_index":725,"title":{},"body":{"classes/StatsDto.html":{}}}],["alikomennoille",{"_index":827,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["all_time",{"_index":32,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["allexcepetionsfilter",{"_index":158,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["allexceptionsfilter",{"_index":93,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["allow",{"_index":454,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/RegisterDto.html":{}}}],["allow_stats_logging",{"_index":872,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["allowed",{"_index":952,"title":{},"body":{"injectables/TwitterService.html":{}}}],["allowfactory",{"_index":702,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowguilds",{"_index":697,"title":{},"body":{"modules/SharedModule.html":{}}}],["allowlogging",{"_index":453,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["allows",{"_index":859,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["alltime",{"_index":30,"title":{"interfaces/AllTime.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["alpha",{"_index":553,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["already",{"_index":953,"title":{},"body":{"injectables/TwitterService.html":{}}}],["amazing",{"_index":1205,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1236,"title":{},"body":{"license.html":{}}}],["anything",{"_index":707,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["api",{"_index":221,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["api.service",{"_index":189,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["api.service.ts",{"_index":370,"title":{},"body":{"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["api.service.ts:10",{"_index":415,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:12",{"_index":416,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:13",{"_index":378,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:192",{"_index":399,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:222",{"_index":394,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:44",{"_index":404,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["api.service.ts:99",{"_index":387,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["app",{"_index":638,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":646,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["app_filter",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["appcontroller",{"_index":162,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":383,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/PrismaService.html":{}}}],["application/json",{"_index":551,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["application_command",{"_index":901,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["application_command_autocomplete",{"_index":904,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["applicationid",{"_index":427,"title":{},"body":{"injectables/DiscordApiService.html":{},"interfaces/ToJsonResponse.html":{}}}],["appmodule",{"_index":261,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":409,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["argument",{"_index":238,"title":{},"body":{"controllers/AppController.html":{},"classes/MessageToUpperPipe.html":{}}}],["argumentshost",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["arising",{"_index":1270,"title":{},"body":{"license.html":{}}}],["around",{"_index":666,"title":{},"body":{"modules/SharedModule.html":{}}}],["array",{"_index":390,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["assigns",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{}}}],["assists",{"_index":56,"title":{"interfaces/Assists.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["associated",{"_index":1223,"title":{},"body":{"license.html":{}}}],["async",{"_index":167,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["authentication",{"_index":602,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["author",{"_index":1041,"title":{},"body":{"injectables/TwitterService.html":{}}}],["author_id",{"_index":1051,"title":{},"body":{"injectables/TwitterService.html":{}}}],["authorization",{"_index":437,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["authors",{"_index":1260,"title":{},"body":{"license.html":{}}}],["autoregisterglobalcommands",{"_index":680,"title":{},"body":{"modules/SharedModule.html":{}}}],["available",{"_index":137,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules.html":{}}}],["average",{"_index":63,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["await",{"_index":201,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["axios",{"_index":421,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["axiosresponse",{"_index":420,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["b",{"_index":1057,"title":{},"body":{"injectables/TwitterService.html":{}}}],["backers",{"_index":1206,"title":{},"body":{"index.html":{}}}],["base",{"_index":706,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["behaviorsubject",{"_index":967,"title":{},"body":{"injectables/TwitterService.html":{}}}],["below",{"_index":198,"title":{},"body":{"controllers/AppController.html":{}}}],["betrayals",{"_index":57,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["body",{"_index":500,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"controllers/Oauth2DiscordController.html":{}}}],["body.json",{"_index":622,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["bodyjson",{"_index":621,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["boolean",{"_index":331,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"classes/MessageFromUserGuard.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["bootstrap",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bot",{"_index":380,"title":{},"body":{"injectables/DiscordApiService.html":{},"controllers/Oauth2DiscordController.html":{},"modules/SharedModule.html":{},"classes/StatsHelpSubCommand.html":{},"index.html":{}}}],["bottoken",{"_index":371,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["botuser",{"_index":800,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"injectables/UserService.html":{}}}],["botuser.gamertag",{"_index":803,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["breakdowns",{"_index":81,"title":{"interfaces/Breakdowns.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["browse",{"_index":1275,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1273,"title":{},"body":{"modules.html":{}}}],["built",{"_index":1172,"title":{},"body":{"index.html":{}}}],["c",{"_index":1212,"title":{},"body":{"license.html":{}}}],["callback",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{}}}],["callbackfordiscordoauth2",{"_index":607,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["callbackfordiscordoauth2(request",{"_index":608,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["called",{"_index":1176,"title":{},"body":{"index.html":{}}}],["callouts",{"_index":75,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["canactive",{"_index":577,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["canactive(event",{"_index":578,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["catch",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["catch((error",{"_index":204,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["catch(exception",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exceptionlist",{"_index":339,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["catch(validationerror",{"_index":355,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["certain",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["changes",{"_index":233,"title":{},"body":{"controllers/AppController.html":{}}}],["channel",{"_index":962,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channel.name",{"_index":1021,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channel.send",{"_index":1019,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channelid",{"_index":894,"title":{},"body":{"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["channels",{"_index":954,"title":{},"body":{"injectables/TwitterService.html":{}}}],["channels.fetch(channelid",{"_index":1016,"title":{},"body":{"injectables/TwitterService.html":{}}}],["charge",{"_index":1218,"title":{},"body":{"license.html":{}}}],["checks",{"_index":950,"title":{},"body":{"injectables/TwitterService.html":{}}}],["choice",{"_index":325,"title":{"interfaces/Choice.html":{}},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["choice(city",{"_index":727,"title":{},"body":{"classes/StatsDto.html":{}}}],["choice(language",{"_index":812,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["choice(publicstats",{"_index":513,"title":{},"body":{"classes/GetDto.html":{}}}],["choices",{"_index":333,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{}}}],["chosen",{"_index":851,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["city",{"_index":728,"title":{},"body":{"classes/StatsDto.html":{}}}],["claim",{"_index":1263,"title":{},"body":{"license.html":{}}}],["class",{"_index":92,"title":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":94,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{},"overview.html":{}}}],["client",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{}}}],["close",{"_index":637,"title":{},"body":{"injectables/PrismaService.html":{}}}],["cluster_appmodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":652,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":653,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":654,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":199,"title":{},"body":{"controllers/AppController.html":{}}}],["command",{"_index":220,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"coverage.html":{}}}],["command.js",{"_index":679,"title":{},"body":{"modules/SharedModule.html":{}}}],["commandid",{"_index":396,"title":{},"body":{"injectables/DiscordApiService.html":{},"interfaces/ToJsonResponse.html":{}}}],["commandinteraction",{"_index":739,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["commandline",{"_index":237,"title":{},"body":{"controllers/AppController.html":{}}}],["commandname",{"_index":895,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["commands",{"_index":241,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["commandvalidationfilter",{"_index":334,"title":{"classes/CommandValidationFilter.html":{}},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["community",{"_index":1171,"title":{},"body":{"index.html":{},"license.html":{}}}],["conditions",{"_index":1244,"title":{},"body":{"license.html":{}}}],["config",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{}}}],["configmodule",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["configmodule.forroot",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{}}}],["configservice.get('guildid",{"_index":701,"title":{},"body":{"modules/SharedModule.html":{}}}],["configservice.get('token",{"_index":678,"title":{},"body":{"modules/SharedModule.html":{}}}],["configuration",{"_index":1043,"title":{},"body":{"injectables/TwitterService.html":{}}}],["configure",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["configured",{"_index":955,"title":{},"body":{"injectables/TwitterService.html":{}}}],["connect",{"_index":643,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":1271,"title":{},"body":{"license.html":{}}}],["connects",{"_index":640,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.debug('twitterallowedsearchauthorids",{"_index":992,"title":{},"body":{"injectables/TwitterService.html":{}}}],["console.log('5",{"_index":807,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["console.log('discordapi",{"_index":429,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["const",{"_index":142,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["construct",{"_index":228,"title":{},"body":{"controllers/AppController.html":{}}}],["constructembedtweetmessage",{"_index":910,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructembedtweetmessage(tweet",{"_index":925,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["constructor(_configservice",{"_index":917,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructor(_halodotapi",{"_index":733,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["constructor(_http",{"_index":526,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["constructor(_httpservice",{"_index":375,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["constructor(_logger",{"_index":488,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["constructor(_userservice",{"_index":855,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["constructor(httpadapterhost",{"_index":104,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(prisma",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ExampleMiddleWare.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/UserService.html":{}}}],["constructs",{"_index":928,"title":{},"body":{"injectables/TwitterService.html":{}}}],["constructstatscommand",{"_index":227,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{}}}],["contain",{"_index":944,"title":{},"body":{"injectables/TwitterService.html":{}}}],["contains",{"_index":674,"title":{},"body":{"modules/SharedModule.html":{}}}],["content",{"_index":544,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/MessageToUpperPipe.html":{}}}],["contract",{"_index":1267,"title":{},"body":{"license.html":{}}}],["controller",{"_index":40,"title":{"controllers/AppController.html":{},"controllers/Oauth2DiscordController.html":{}},"body":{"interfaces/Additional.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"controllers/Oauth2DiscordController.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["controller('oauth2",{"_index":610,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["controllers",{"_index":163,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"overview.html":{}}}],["controllers/oauth2",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["converted",{"_index":591,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["copies",{"_index":1238,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1221,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1211,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1108,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":958,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":173,"title":{},"body":{"controllers/AppController.html":{}}}],["created_at",{"_index":1050,"title":{},"body":{"injectables/TwitterService.html":{}}}],["createmessage",{"_index":1017,"title":{},"body":{"injectables/TwitterService.html":{}}}],["creates",{"_index":388,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["createuser",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(data",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["cron",{"_index":190,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/TwitterService.html":{}}}],["cron(cronexpression.every_5_minutes",{"_index":179,"title":{},"body":{"controllers/AppController.html":{}}}],["cronexpression",{"_index":191,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["crossplay",{"_index":39,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["cryptum",{"_index":545,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["csrs",{"_index":538,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["csrsmodels",{"_index":17,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["csrsmodels.csrsrootobject",{"_index":561,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["csrsrootobject",{"_index":42,"title":{"interfaces/CsrsRootObject.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["ctx",{"_index":144,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":160,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["current",{"_index":19,"title":{"interfaces/Current.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["currently",{"_index":975,"title":{},"body":{"injectables/TwitterService.html":{}}}],["cursor",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{}}}],["damage",{"_index":60,"title":{"interfaces/Damage.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["damages",{"_index":1264,"title":{},"body":{"license.html":{}}}],["data",{"_index":43,"title":{"interfaces/Data.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"injectables/DiscordApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["data.options",{"_index":433,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["data.type",{"_index":430,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["database",{"_index":456,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["date",{"_index":986,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["date().toisostring",{"_index":152,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["date(a.created_at).valueof",{"_index":1058,"title":{},"body":{"injectables/TwitterService.html":{}}}],["date(b.created_at).valueof",{"_index":1059,"title":{},"body":{"injectables/TwitterService.html":{}}}],["date(tweet.created_at",{"_index":1037,"title":{},"body":{"injectables/TwitterService.html":{}}}],["deal",{"_index":1225,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1272,"title":{},"body":{"license.html":{}}}],["dealt",{"_index":62,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["deaths",{"_index":55,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["declare",{"_index":15,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["decorator",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["decorators",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"classes/GetDto.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["default",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["default_permission",{"_index":332,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{}}}],["defer",{"_index":754,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["deferred",{"_index":896,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["define",{"_index":413,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["defined",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{}}}],["definediscordcommand",{"_index":328,"title":{"interfaces/DefineDiscordCommand.html":{}},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["delay",{"_index":911,"title":{},"body":{"injectables/TwitterService.html":{}}}],["delay(ms",{"_index":931,"title":{},"body":{"injectables/TwitterService.html":{}}}],["delete",{"_index":398,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand",{"_index":373,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand(commandid",{"_index":393,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deletecommand.status",{"_index":483,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["deleted",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{}}}],["deletes",{"_index":395,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/UserService.html":{}}}],["deleteuser",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(where",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":263,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":703,"title":{},"body":{"modules/SharedModule.html":{}}}],["description",{"_index":225,"title":{},"body":{"controllers/AppController.html":{},"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["destroys",{"_index":51,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["details",{"_index":354,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/TwitterService.html":{}}}],["determine",{"_index":676,"title":{},"body":{"modules/SharedModule.html":{}}}],["development",{"_index":1186,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":878,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["discord",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"dependencies.html":{},"index.html":{}}}],["discord.controller",{"_index":626,"title":{},"body":{"modules/Oauth2DiscordModule.html":{}}}],["discord.controller.ts",{"_index":598,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"coverage.html":{}}}],["discord.controller.ts:24",{"_index":609,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["discord.js",{"_index":348,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["discord.module",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["discord.module.ts",{"_index":625,"title":{},"body":{"modules/Oauth2DiscordModule.html":{}}}],["discord/oauth2",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["discord_user_id",{"_index":802,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["discordapiservice",{"_index":187,"title":{"injectables/DiscordApiService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"coverage.html":{},"overview.html":{}}}],["discordargumentmetadata",{"_index":342,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["discordclientoptions",{"_index":681,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordclientprovider",{"_index":920,"title":{},"body":{"injectables/TwitterService.html":{}}}],["discordcommand",{"_index":743,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["discordcommandprovider",{"_index":655,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["discordexceptionfilter",{"_index":337,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["discordguard",{"_index":576,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["discordjs/rest",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["discordmodule",{"_index":659,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordmodule.forrootasync",{"_index":671,"title":{},"body":{"modules/SharedModule.html":{}}}],["discordpipetransform",{"_index":586,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["discordtransformedcommand",{"_index":731,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["discordurl",{"_index":372,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["display",{"_index":820,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["distribute",{"_index":1234,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1109,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":230,"title":{},"body":{"controllers/AppController.html":{}}}],["down",{"_index":636,"title":{},"body":{"injectables/PrismaService.html":{}}}],["draws",{"_index":80,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["driver",{"_index":74,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["dto",{"_index":741,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["dto.allowlogging",{"_index":863,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["dto.gamertag",{"_index":760,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["dto.lang",{"_index":821,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["duo",{"_index":37,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["e2e",{"_index":1194,"title":{},"body":{"index.html":{}}}],["each",{"_index":590,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["editreply(replymessage",{"_index":792,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["embed",{"_index":929,"title":{},"body":{"injectables/TwitterService.html":{}}}],["embedhelpen",{"_index":847,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["embedhelpfi",{"_index":822,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["embedreply",{"_index":763,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["embeds",{"_index":358,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["embedtweet",{"_index":1027,"title":{},"body":{"injectables/TwitterService.html":{}}}],["emits",{"_index":942,"title":{},"body":{"injectables/TwitterService.html":{}}}],["emp",{"_index":73,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["en",{"_index":474,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpDto.html":{},"miscellaneous/enumerations.html":{}}}],["enabled",{"_index":877,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["enableshutdownhooks",{"_index":631,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":632,"title":{},"body":{"injectables/PrismaService.html":{}}}],["english",{"_index":473,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["enter",{"_index":452,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["enum",{"_index":511,"title":{},"body":{"classes/GetDto.html":{},"classes/StatsHelpDto.html":{}}}],["enumerations",{"_index":1162,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"injectables/TwitterService.html":{}}}],["envfilepath",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["environment/.env",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["environment/config",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["ephemeral",{"_index":846,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/ToJsonResponse.html":{}}}],["error",{"_index":155,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["error(error",{"_index":566,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["error.stack",{"_index":365,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["errorembed",{"_index":796,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["errors",{"_index":350,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["ett",{"_index":830,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["etwitterstreamevent",{"_index":977,"title":{},"body":{"injectables/TwitterService.html":{}}}],["event",{"_index":580,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"license.html":{}}}],["events",{"_index":670,"title":{},"body":{"modules/SharedModule.html":{}}}],["examplemiddleware",{"_index":486,"title":{"injectables/ExampleMiddleWare.html":{}},"body":{"injectables/ExampleMiddleWare.html":{},"coverage.html":{}}}],["exception",{"_index":119,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["exception.getstatus",{"_index":147,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.property",{"_index":362,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["exceptionfilter",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionlist",{"_index":344,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["exceptionlist.map((exception",{"_index":359,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["exceptions",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["export",{"_index":18,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["exports",{"_index":658,"title":{},"body":{"modules/SharedModule.html":{}}}],["express",{"_index":497,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"dependencies.html":{},"license.html":{}}}],["expression",{"_index":252,"title":{},"body":{"controllers/AppController.html":{}}}],["extends",{"_index":629,"title":{},"body":{"injectables/PrismaService.html":{}}}],["factory",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":465,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/StatsRegSubCommand.html":{},"injectables/TwitterService.html":{}}}],["fetchreply",{"_index":756,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["fi",{"_index":472,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["files",{"_index":1224,"title":{},"body":{"license.html":{}}}],["filters/discord",{"_index":335,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["filters/globalexceptions",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["filters/globalexceptions.ts",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["filters/globalexceptions.ts:14",{"_index":107,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["filters/globalexceptions.ts:18",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["finally",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["find",{"_index":1040,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["finland",{"_index":1170,"title":{},"body":{"index.html":{},"license.html":{}}}],["fired",{"_index":65,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["first",{"_index":222,"title":{},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["fitness",{"_index":1256,"title":{},"body":{"license.html":{}}}],["fns",{"_index":987,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["following",{"_index":1243,"title":{},"body":{"license.html":{}}}],["fom",{"_index":574,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["forever",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["forguild",{"_index":700,"title":{},"body":{"modules/SharedModule.html":{}}}],["format",{"_index":985,"title":{},"body":{"injectables/TwitterService.html":{}}}],["format(new",{"_index":1038,"title":{},"body":{"injectables/TwitterService.html":{}}}],["found",{"_index":214,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{}}}],["founderror",{"_index":999,"title":{},"body":{"injectables/TwitterService.html":{}}}],["framework",{"_index":1175,"title":{},"body":{"index.html":{}}}],["free",{"_index":1217,"title":{},"body":{"license.html":{}}}],["from:halosupport",{"_index":1048,"title":{},"body":{"injectables/TwitterService.html":{}}}],["function",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/TwitterService.html":{},"coverage.html":{}}}],["functions",{"_index":1164,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1241,"title":{},"body":{"license.html":{}}}],["gamer",{"_index":450,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["gamertag",{"_index":9,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["gamertagille",{"_index":843,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["gamertägisi",{"_index":837,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["gametag",{"_index":806,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["get('supporttweetchannelids",{"_index":1066,"title":{},"body":{"injectables/TwitterService.html":{}}}],["get('twitterallowedsearchauthorids",{"_index":990,"title":{},"body":{"injectables/TwitterService.html":{}}}],["get.dto",{"_index":750,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["get.status",{"_index":476,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["get/get.command",{"_index":716,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["getclient",{"_index":1015,"title":{},"body":{"injectables/TwitterService.html":{}}}],["getcommands",{"_index":374,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["getdto",{"_index":506,"title":{"classes/GetDto.html":{}},"body":{"classes/GetDto.html":{},"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["getmotd",{"_index":523,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["getnewtweets",{"_index":973,"title":{},"body":{"injectables/TwitterService.html":{}}}],["gets",{"_index":400,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["getting",{"_index":1169,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":937,"title":{},"body":{"injectables/TwitterService.html":{}}}],["granted",{"_index":1216,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1276,"title":{},"body":{"modules.html":{}}}],["grenades",{"_index":70,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["grow",{"_index":1201,"title":{},"body":{"index.html":{}}}],["guildid",{"_index":897,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["guilds/${this._configservice.get('guildid')}/commands",{"_index":428,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["hakee",{"_index":842,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["halo",{"_index":243,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsHelpSubCommand.html":{},"index.html":{},"license.html":{}}}],["halodotapi",{"_index":520,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{}}}],["halodotapibaseurl",{"_index":554,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["halodotapiservice",{"_index":515,"title":{"injectables/HaloDotApiService.html":{}},"body":{"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"coverage.html":{},"overview.html":{}}}],["halosupport",{"_index":217,"title":{},"body":{"controllers/AppController.html":{}}}],["handler",{"_index":732,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["handler(@payload",{"_index":862,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["handler(dto",{"_index":738,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["hasparam",{"_index":759,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["headers",{"_index":436,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["headshots",{"_index":71,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["help",{"_index":466,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{}}}],["help.dto",{"_index":816,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["help/help.command",{"_index":714,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["helpful",{"_index":818,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["here",{"_index":141,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"index.html":{}}}],["hereby",{"_index":1215,"title":{},"body":{"license.html":{}}}],["hh:mm",{"_index":1039,"title":{},"body":{"injectables/TwitterService.html":{}}}],["hijacks",{"_index":52,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["holders",{"_index":1261,"title":{},"body":{"license.html":{}}}],["host",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":145,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hours",{"_index":458,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["http",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{}}}],["httpadapter",{"_index":136,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":154,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":161,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":105,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpmodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["httpmodule.registerasync",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cryptum.halodotapi.com",{"_index":555,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["https://cryptum.halodotapi.com/games/hi",{"_index":548,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["https://discord.com/api/v8/applications/${this._configservice.get",{"_index":426,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["https://docs.nestjs.com/middleware",{"_index":501,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["https://github.com/discordjs/discord.js/issues/7005",{"_index":758,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["https://github.com/ex1tium/halofinland",{"_index":844,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["https://twitter.com/${tweetauthor.username",{"_index":1032,"title":{},"body":{"injectables/TwitterService.html":{}}}],["httpservice",{"_index":376,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{}}}],["httpstatus",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DiscordApiService.html":{},"controllers/Oauth2DiscordController.html":{}}}],["httpstatus.internal_server_error",{"_index":148,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.ok",{"_index":624,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["human",{"_index":84,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["iconurl",{"_index":1031,"title":{},"body":{"injectables/TwitterService.html":{}}}],["id",{"_index":384,"title":{},"body":{"injectables/DiscordApiService.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["ids",{"_index":938,"title":{},"body":{"injectables/TwitterService.html":{}}}],["implements",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/ExampleMiddleWare.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["implied",{"_index":1252,"title":{},"body":{"license.html":{}}}],["import",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["include",{"_index":710,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["included",{"_index":1042,"title":{},"body":{"injectables/TwitterService.html":{},"license.html":{}}}],["including",{"_index":1228,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":633,"title":{},"body":{"injectables/PrismaService.html":{}}}],["infinite",{"_index":464,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["information",{"_index":819,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["init",{"_index":203,"title":{},"body":{"controllers/AppController.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["initial_measurement_matches",{"_index":28,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["initializing",{"_index":200,"title":{},"body":{"controllers/AppController.html":{}}}],["inject",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["injectable",{"_index":367,"title":{"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}},"body":{"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":368,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injects",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["inline",{"_index":778,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["input",{"_index":38,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["installation",{"_index":1183,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1185,"title":{},"body":{"index.html":{}}}],["instance",{"_index":922,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":146,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["intents",{"_index":660,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_message_reactions",{"_index":695,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_message_typing",{"_index":696,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.direct_messages",{"_index":694,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_bans",{"_index":685,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_emojis_and_stickers",{"_index":686,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_integrations",{"_index":687,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_invites",{"_index":689,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_members",{"_index":684,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_message_reactions",{"_index":692,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_message_typing",{"_index":693,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_messages",{"_index":683,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_presences",{"_index":691,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_voice_states",{"_index":690,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guild_webhooks",{"_index":688,"title":{},"body":{"modules/SharedModule.html":{}}}],["intents.flags.guilds",{"_index":682,"title":{},"body":{"modules/SharedModule.html":{}}}],["interact",{"_index":924,"title":{},"body":{"injectables/TwitterService.html":{}}}],["interacting",{"_index":242,"title":{},"body":{"controllers/AppController.html":{}}}],["interaction",{"_index":356,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["interaction.deferred",{"_index":791,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.deferreply",{"_index":755,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.iscommand",{"_index":363,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["interaction.replied",{"_index":771,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["interaction.reply",{"_index":364,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["interaction.reply(reply).catch((error",{"_index":880,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["interaction.user.id",{"_index":762,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["interactionreplyoptions",{"_index":749,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageToUpperPipe.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"interfaces/Vehicles.html":{},"overview.html":{}}}],["inviting",{"_index":604,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["isglobal",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["ispublic",{"_index":514,"title":{},"body":{"classes/GetDto.html":{}}}],["issue",{"_index":949,"title":{},"body":{"injectables/TwitterService.html":{}}}],["jobs",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":605,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"index.html":{}}}],["json",{"_index":616,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.parse(configservice.get('allowguilds",{"_index":698,"title":{},"body":{"modules/SharedModule.html":{}}}],["json.stringify",{"_index":159,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["json.stringify(body.body",{"_index":623,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(deletecommand.data",{"_index":485,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["json.stringify(exception",{"_index":156,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["json.stringify(get.data",{"_index":478,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["json.stringify(request.body",{"_index":617,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(response.body",{"_index":620,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["json.stringify(search",{"_index":1054,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(this._client",{"_index":997,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(this._twitterusers",{"_index":1010,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(user",{"_index":1006,"title":{},"body":{"injectables/TwitterService.html":{}}}],["json.stringify(userexists",{"_index":869,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["json.stringify(value",{"_index":248,"title":{},"body":{"controllers/AppController.html":{}}}],["kda",{"_index":85,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["kdr",{"_index":86,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["kills",{"_index":54,"title":{"interfaces/Kills.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["kind",{"_index":1251,"title":{},"body":{"license.html":{}}}],["käyttäjän",{"_index":840,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["landed",{"_index":66,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["lang",{"_index":468,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{}}}],["language",{"_index":470,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"miscellaneous/enumerations.html":{}}}],["lastvaluefrom",{"_index":417,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["lastvaluefrom(post",{"_index":439,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["lastvaluefrom(this._http.get(url",{"_index":556,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["latest",{"_index":853,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["left",{"_index":79,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["liability",{"_index":1265,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1262,"title":{},"body":{"license.html":{}}}],["library",{"_index":667,"title":{},"body":{"modules/SharedModule.html":{}}}],["license",{"_index":1210,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":1200,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1229,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1253,"title":{},"body":{"license.html":{}}}],["list",{"_index":389,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/UserService.html":{}}}],["listen",{"_index":677,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":540,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/UserService.html":{}}}],["load",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["loaded",{"_index":1045,"title":{},"body":{"injectables/TwitterService.html":{}}}],["logged",{"_index":455,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsRegSubCommand.html":{}}}],["logger",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["logger('statsregsubcommand",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["logger(appcontroller.name",{"_index":193,"title":{},"body":{"controllers/AppController.html":{}}}],["logger(discordapiservice.name",{"_index":414,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["logger(examplemiddleware.name",{"_index":503,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["logger(halodotapiservice.name",{"_index":542,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["logger(oauth2discordcontroller.name",{"_index":611,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["logger(statsgetsubcommand.name",{"_index":737,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["logger(statsupdatesubcommand.name",{"_index":883,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["logger(twitterservice.name",{"_index":969,"title":{},"body":{"injectables/TwitterService.html":{}}}],["logging",{"_index":649,"title":{},"body":{"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{}}}],["logs",{"_index":499,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["losses",{"_index":78,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["made",{"_index":234,"title":{},"body":{"controllers/AppController.html":{}}}],["makes",{"_index":531,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["making",{"_index":518,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["map",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["matches",{"_index":76,"title":{"interfaces/Matches.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["matches_played",{"_index":88,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["matching",{"_index":45,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["max",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["maxredirects",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["means",{"_index":850,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["measurement_matches_remaining",{"_index":21,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["medals",{"_index":59,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["melee",{"_index":69,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["member",{"_index":898,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["memberpermissions",{"_index":899,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["merchantability",{"_index":1255,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1232,"title":{},"body":{"license.html":{}}}],["message",{"_index":352,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/SharedModule.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["message.author.bot",{"_index":582,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"modules/SharedModule.html":{}}}],["message.content",{"_index":594,"title":{},"body":{"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{}}}],["message.content.touppercase",{"_index":595,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["message_component",{"_index":903,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["messagecreate",{"_index":581,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["messageembed",{"_index":347,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["messageembed().addfields",{"_index":360,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["messageembed().setcolor('#40e0d0').addfields",{"_index":879,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["messageembed().setcolor('#dfff00').addfields",{"_index":874,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["messageembed().setcolor('#ff7f50').addfields",{"_index":805,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["messagefromuserguard",{"_index":572,"title":{"classes/MessageFromUserGuard.html":{}},"body":{"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["messagetoupperpipe",{"_index":583,"title":{"classes/MessageToUpperPipe.html":{}},"body":{"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["metadata",{"_index":341,"title":{},"body":{"classes/CommandValidationFilter.html":{},"dependencies.html":{}}}],["metadata.context",{"_index":357,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["method",{"_index":138,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{}}}],["methods",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":498,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["minutes",{"_index":255,"title":{},"body":{"controllers/AppController.html":{}}}],["miscellaneous",{"_index":1161,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missed",{"_index":67,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["mit",{"_index":1199,"title":{},"body":{"index.html":{},"license.html":{}}}],["mnk",{"_index":41,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["mode",{"_index":1188,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1231,"title":{},"body":{"license.html":{}}}],["module",{"_index":16,"title":{"modules/AppModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules/SharedModule.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"modules/Oauth2DiscordModule.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["modules",{"_index":262,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1209,"title":{},"body":{"index.html":{}}}],["motd",{"_index":557,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["ms",{"_index":933,"title":{},"body":{"injectables/TwitterService.html":{}}}],["name",{"_index":109,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":1177,"title":{},"body":{"index.html":{}}}],["nestapplication",{"_index":1166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs/axios",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"classes/GetDto.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":192,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":496,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["new",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newtweets",{"_index":209,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["newtweets.length",{"_index":215,"title":{},"body":{"controllers/AppController.html":{}}}],["newtweets.push(tweet",{"_index":1064,"title":{},"body":{"injectables/TwitterService.html":{}}}],["next",{"_index":492,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"injectables/TwitterService.html":{}}}],["next(tweets",{"_index":940,"title":{},"body":{"injectables/TwitterService.html":{}}}],["next_sub_tier",{"_index":27,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["next_tier",{"_index":25,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["next_tier_start",{"_index":26,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["nextfunction",{"_index":493,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["nickname",{"_index":724,"title":{},"body":{"classes/StatsDto.html":{}}}],["node.js",{"_index":1174,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1259,"title":{},"body":{"license.html":{}}}],["notfounduserids",{"_index":1000,"title":{},"body":{"injectables/TwitterService.html":{}}}],["notfounduserids.push(user.errors[0].value",{"_index":1008,"title":{},"body":{"injectables/TwitterService.html":{}}}],["nothing",{"_index":934,"title":{},"body":{"injectables/TwitterService.html":{}}}],["notice",{"_index":1246,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1184,"title":{},"body":{"index.html":{}}}],["null",{"_index":366,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{}}}],["number",{"_index":14,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{}}}],["oauth2",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{}}}],["oauth2discordcontroller",{"_index":596,"title":{"controllers/Oauth2DiscordController.html":{}},"body":{"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["oauth2discordmodule",{"_index":267,"title":{"modules/Oauth2DiscordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/Oauth2DiscordModule.html":{},"modules.html":{},"overview.html":{}}}],["object",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{}}}],["object.values(exception.constraints).map((value",{"_index":361,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["objects",{"_index":391,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/MessageToUpperPipe.html":{},"injectables/UserService.html":{}}}],["observable",{"_index":211,"title":{},"body":{"controllers/AppController.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["obtaining",{"_index":1220,"title":{},"body":{"license.html":{}}}],["ohjeistus",{"_index":826,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["ok",{"_index":601,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["old",{"_index":875,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["once",{"_index":181,"title":{},"body":{"controllers/AppController.html":{}}}],["once('ready",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["onmoduledestroy",{"_index":165,"title":{},"body":{"controllers/AppController.html":{}}}],["onmoduleinit",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{}}}],["onready",{"_index":168,"title":{},"body":{"controllers/AppController.html":{}}}],["open",{"_index":35,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{},"index.html":{}}}],["option",{"_index":672,"title":{},"body":{"modules/SharedModule.html":{}}}],["optional",{"_index":110,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["options",{"_index":329,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{}}}],["options.model",{"_index":419,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["options.model.ts",{"_index":327,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"coverage.html":{}}}],["orderby",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{}}}],["otherwise",{"_index":1269,"title":{},"body":{"license.html":{}}}],["out",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1277,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1137,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":422,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{}}}],["param({description",{"_index":508,"title":{},"body":{"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["parameter",{"_index":223,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["parametri",{"_index":828,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["params",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["paramtype",{"_index":510,"title":{},"body":{"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/UpdateDto.html":{}}}],["paramtype.integer",{"_index":726,"title":{},"body":{"classes/StatsDto.html":{}}}],["particular",{"_index":1257,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":612,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["patch",{"_index":946,"title":{},"body":{"injectables/TwitterService.html":{}}}],["path",{"_index":153,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["paths",{"_index":673,"title":{},"body":{"modules/SharedModule.html":{}}}],["payload",{"_index":744,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["permission",{"_index":411,"title":{},"body":{"injectables/DiscordApiService.html":{},"license.html":{}}}],["permit",{"_index":1239,"title":{},"body":{"license.html":{}}}],["person",{"_index":1219,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1240,"title":{},"body":{"license.html":{}}}],["phone",{"_index":722,"title":{},"body":{"classes/StatsDto.html":{}}}],["phonenumber",{"_index":723,"title":{},"body":{"classes/StatsDto.html":{}}}],["ping",{"_index":902,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["played",{"_index":783,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["player",{"_index":535,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["please",{"_index":1208,"title":{},"body":{"index.html":{}}}],["pollhalosupporttweets",{"_index":912,"title":{},"body":{"injectables/TwitterService.html":{}}}],["polllatesttweetsfromhalosupport",{"_index":169,"title":{},"body":{"controllers/AppController.html":{}}}],["port",{"_index":1167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["portions",{"_index":1249,"title":{},"body":{"license.html":{}}}],["post",{"_index":407,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["power_weapons",{"_index":72,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["prefix",{"_index":599,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["prints",{"_index":753,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{}}}],["prisma",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botusercreateinput",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserorderbywithrelationinput",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserupdateinput",{"_index":1105,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserwhereinput",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.botuserwhereuniqueinput",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma.service",{"_index":983,"title":{},"body":{"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["prisma/client",{"_index":641,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":630,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":627,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/PrismaService.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":99,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["problem",{"_index":948,"title":{},"body":{"injectables/TwitterService.html":{}}}],["production",{"_index":1178,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1173,"title":{},"body":{"index.html":{}}}],["project",{"_index":1197,"title":{},"body":{"index.html":{}}}],["promise",{"_index":345,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["promise((resolve",{"_index":1067,"title":{},"body":{"injectables/TwitterService.html":{}}}],["promise.reject",{"_index":443,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/TwitterService.html":{}}}],["promise.reject('check",{"_index":432,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["promise.reject(`api",{"_index":479,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["promise.reject(error",{"_index":795,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["promise.reject(this._logger.error(error",{"_index":446,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["promise.reject(this._logger.error(error.stack",{"_index":445,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["property",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["provide",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["provided",{"_index":719,"title":{},"body":{"classes/StatsBaseCommand.html":{},"license.html":{}}}],["providers",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["provides",{"_index":668,"title":{},"body":{"modules/SharedModule.html":{}}}],["publicstats",{"_index":512,"title":{},"body":{"classes/GetDto.html":{}}}],["publish",{"_index":1233,"title":{},"body":{"license.html":{}}}],["pull",{"_index":463,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["purpose",{"_index":1258,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":603,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["päivit",{"_index":838,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["query",{"_index":461,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsGetSubCommand.html":{}}}],["queue",{"_index":34,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["queuegroups",{"_index":33,"title":{"interfaces/QueueGroups.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["ran",{"_index":231,"title":{},"body":{"controllers/AppController.html":{}}}],["read",{"_index":467,"title":{},"body":{"injectables/DiscordApiService.html":{},"index.html":{}}}],["readonly",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["ready",{"_index":1179,"title":{},"body":{"index.html":{}}}],["record",{"_index":534,"title":{},"body":{"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["record.models.ts",{"_index":48,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["record/global",{"_index":570,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["recordtweet",{"_index":913,"title":{},"body":{"injectables/TwitterService.html":{}}}],["recordtweet(tweetdata",{"_index":956,"title":{},"body":{"injectables/TwitterService.html":{}}}],["redirects",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["reg",{"_index":448,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["register",{"_index":219,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"modules/SharedModule.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"miscellaneous/functions.html":{}}}],["register.dto",{"_index":858,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["register/register.command",{"_index":712,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["registercommandoptions",{"_index":699,"title":{},"body":{"modules/SharedModule.html":{}}}],["registerdto",{"_index":647,"title":{"classes/RegisterDto.html":{}},"body":{"classes/RegisterDto.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["registered",{"_index":401,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["registering",{"_index":444,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["registernewcommand",{"_index":218,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{}}}],["registernewcommand(name",{"_index":402,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["registers",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"classes/StatsHelpSubCommand.html":{}}}],["rekisteröi",{"_index":836,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["release",{"_index":947,"title":{},"body":{"injectables/TwitterService.html":{}}}],["replied",{"_index":900,"title":{},"body":{"interfaces/ToJsonResponse.html":{}}}],["reply",{"_index":845,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["replymessage",{"_index":764,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["represent",{"_index":392,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["req",{"_index":495,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{}}}],["req.body",{"_index":505,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["request",{"_index":408,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{}}}],["request.data",{"_index":564,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["request.json",{"_index":614,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["request.status",{"_index":563,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestjson",{"_index":613,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["requestplayerservicerecord",{"_index":524,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestplayerservicerecord(gamertag",{"_index":532,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{}}}],["requestplayerstatscsr",{"_index":525,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["requestplayerstatscsr(gamertag",{"_index":536,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{}}}],["requests",{"_index":519,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["required",{"_index":330,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsDto.html":{},"classes/StatsHelpDto.html":{},"classes/UpdateDto.html":{}}}],["res",{"_index":491,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"controllers/Oauth2DiscordController.html":{}}}],["reset",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["residence",{"_index":729,"title":{},"body":{"classes/StatsDto.html":{}}}],["resolve",{"_index":140,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responded",{"_index":480,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["response",{"_index":31,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Additional.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["response.json",{"_index":619,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["responsebody",{"_index":149,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responsejson",{"_index":618,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["responsible",{"_index":517,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["restriction",{"_index":1227,"title":{},"body":{"license.html":{}}}],["result",{"_index":438,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["result.data",{"_index":442,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["result.status",{"_index":440,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["results",{"_index":44,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":257,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":120,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CommandValidationFilter.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["returnvalue",{"_index":560,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["rights",{"_index":1230,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":253,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["running",{"_index":239,"title":{},"body":{"controllers/AppController.html":{}}}],["rxjs",{"_index":186,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{},"dependencies.html":{}}}],["schedulemodule",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["scope",{"_index":410,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["se",{"_index":831,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["search",{"_index":1046,"title":{},"body":{"injectables/TwitterService.html":{}}}],["search.data.data.sort((a",{"_index":1056,"title":{},"body":{"injectables/TwitterService.html":{}}}],["searches",{"_index":936,"title":{},"body":{"injectables/TwitterService.html":{}}}],["season",{"_index":10,"title":{"interfaces/Season.html":{}},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["second",{"_index":224,"title":{},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{}}}],["seconds",{"_index":83,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["see",{"_index":951,"title":{},"body":{"injectables/TwitterService.html":{}}}],["select",{"_index":469,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpDto.html":{}}}],["sell",{"_index":1237,"title":{},"body":{"license.html":{}}}],["send",{"_index":351,"title":{},"body":{"classes/CommandValidationFilter.html":{},"injectables/TwitterService.html":{}}}],["sendchannel",{"_index":914,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sendchannel(channelid",{"_index":960,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sending",{"_index":1020,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sends",{"_index":406,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/TwitterService.html":{}}}],["server",{"_index":606,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{}}}],["service",{"_index":386,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["servicerecord",{"_index":91,"title":{"interfaces/ServiceRecord.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["servicerecordsmodels",{"_index":49,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["servicerecordsmodels.servicerecord",{"_index":567,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["services",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["services/discord",{"_index":188,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["services/twitter.service",{"_index":184,"title":{},"body":{"controllers/AppController.html":{}}}],["set",{"_index":675,"title":{},"body":{"modules/SharedModule.html":{}}}],["setauthor",{"_index":1029,"title":{},"body":{"injectables/TwitterService.html":{}}}],["setcolor('#0099ff",{"_index":823,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setcolor('#ccccff",{"_index":772,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setcolor('#dfff00",{"_index":888,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["setcolor('#ff0000",{"_index":797,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setdescription",{"_index":825,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["setdescription(`stats",{"_index":799,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setdescription(statscsr.data[0].response.current.tier",{"_index":775,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["setfooter",{"_index":785,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["sets",{"_index":379,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["setthumbnail(statscsr.data[0].response.current.tier_image_url",{"_index":773,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["settimeout(resolve",{"_index":1068,"title":{},"body":{"injectables/TwitterService.html":{}}}],["settimestamp",{"_index":790,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["settimestamp(new",{"_index":1036,"title":{},"body":{"injectables/TwitterService.html":{}}}],["settitle('error",{"_index":798,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["settitle('help",{"_index":848,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["settitle('ohjeet",{"_index":824,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["settitle(gamertag",{"_index":774,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["seturl(`https://twitter.com/i/web/status/${tweet.id",{"_index":1028,"title":{},"body":{"injectables/TwitterService.html":{}}}],["shall",{"_index":1247,"title":{},"body":{"license.html":{}}}],["shared",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/shared.module",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":268,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shots",{"_index":64,"title":{"interfaces/Shots.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["shows",{"_index":817,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["shutting",{"_index":635,"title":{},"body":{"injectables/PrismaService.html":{}}}],["simple",{"_index":600,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["situations",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["skip",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{}}}],["software",{"_index":1222,"title":{},"body":{"license.html":{}}}],["solo",{"_index":36,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["sortdata",{"_index":1055,"title":{},"body":{"injectables/TwitterService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"modules/SharedModule.html":{},"interfaces/Shots.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"index.html":{}}}],["split",{"_index":991,"title":{},"body":{"injectables/TwitterService.html":{}}}],["sponsors",{"_index":1203,"title":{},"body":{"index.html":{}}}],["src/.../help.dto.ts",{"_index":1163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:23",{"_index":175,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:26",{"_index":178,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:79",{"_index":180,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:90",{"_index":170,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["src/commands/stats/get/get.command.ts",{"_index":730,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/get/get.command.ts:24",{"_index":735,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["src/commands/stats/get/get.command.ts:31",{"_index":740,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["src/commands/stats/get/get.dto.ts",{"_index":507,"title":{},"body":{"classes/GetDto.html":{},"coverage.html":{}}}],["src/commands/stats/get/get.dto.ts:10",{"_index":509,"title":{},"body":{"classes/GetDto.html":{}}}],["src/commands/stats/help/help.command.ts",{"_index":813,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/help/help.command.ts:23",{"_index":814,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["src/commands/stats/help/help.command.ts:27",{"_index":815,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["src/commands/stats/help/help.dto.ts",{"_index":809,"title":{},"body":{"classes/StatsHelpDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/commands/stats/help/help.dto.ts:11",{"_index":811,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["src/commands/stats/register/register.command.ts",{"_index":854,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/register/register.command.ts:26",{"_index":856,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["src/commands/stats/register/register.command.ts:30",{"_index":857,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["src/commands/stats/register/register.dto.ts",{"_index":648,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/commands/stats/register/register.dto.ts:5",{"_index":651,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/commands/stats/register/register.dto.ts:7",{"_index":650,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/commands/stats/stats.command.ts",{"_index":705,"title":{},"body":{"classes/StatsBaseCommand.html":{},"coverage.html":{}}}],["src/commands/stats/stats.dto.ts",{"_index":721,"title":{},"body":{"classes/StatsDto.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.command.ts",{"_index":881,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.command.ts:27",{"_index":882,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["src/commands/stats/update/update.command.ts:31",{"_index":885,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["src/commands/stats/update/update.dto.ts",{"_index":1069,"title":{},"body":{"classes/UpdateDto.html":{},"coverage.html":{}}}],["src/commands/stats/update/update.dto.ts:5",{"_index":1070,"title":{},"body":{"classes/UpdateDto.html":{}}}],["src/controllers/oauth2",{"_index":597,"title":{},"body":{"controllers/Oauth2DiscordController.html":{},"modules/Oauth2DiscordModule.html":{},"coverage.html":{}}}],["src/exception",{"_index":95,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CommandValidationFilter.html":{},"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["src/guards/message",{"_index":573,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/example.middleware.ts",{"_index":487,"title":{},"body":{"injectables/ExampleMiddleWare.html":{},"coverage.html":{}}}],["src/middleware/example.middleware.ts:12",{"_index":494,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["src/middleware/example.middleware.ts:7",{"_index":489,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["src/models/interaction",{"_index":892,"title":{},"body":{"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["src/models/sub",{"_index":326,"title":{},"body":{"interfaces/Choice.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["src/pipes/message",{"_index":584,"title":{},"body":{"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["src/services/discord",{"_index":369,"title":{},"body":{"injectables/DiscordApiService.html":{},"coverage.html":{}}}],["src/services/halodotapi/csrs.models.ts",{"_index":6,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"coverage.html":{}}}],["src/services/halodotapi/halodotapi.service",{"_index":661,"title":{},"body":{"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{}}}],["src/services/halodotapi/halodotapi.service.ts",{"_index":516,"title":{},"body":{"injectables/HaloDotApiService.html":{},"coverage.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:101",{"_index":533,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:15",{"_index":543,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:17",{"_index":539,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:18",{"_index":541,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:22",{"_index":527,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:39",{"_index":530,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:60",{"_index":529,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/halodotapi.service.ts:72",{"_index":537,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["src/services/halodotapi/service",{"_index":47,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["src/services/prisma.service",{"_index":662,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/services/prisma.service.ts",{"_index":628,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/services/prisma.service.ts:10",{"_index":639,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/prisma.service.ts:18",{"_index":634,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/twitter.service",{"_index":663,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/services/twitter.service.ts",{"_index":905,"title":{},"body":{"injectables/TwitterService.html":{},"coverage.html":{}}}],["src/services/twitter.service.ts:105",{"_index":974,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:113",{"_index":941,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:123",{"_index":961,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:155",{"_index":927,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:205",{"_index":943,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:23",{"_index":970,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:24",{"_index":966,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:26",{"_index":968,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:273",{"_index":957,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:298",{"_index":964,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:30",{"_index":971,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:31",{"_index":921,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:329",{"_index":932,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/twitter.service.ts:61",{"_index":935,"title":{},"body":{"injectables/TwitterService.html":{}}}],["src/services/user.service",{"_index":664,"title":{},"body":{"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["src/services/user.service.ts",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:18",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:31",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:53",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:6",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:64",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:80",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["src/shared/shared.module.ts",{"_index":657,"title":{},"body":{"modules/SharedModule.html":{}}}],["start",{"_index":1181,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1189,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1190,"title":{},"body":{"index.html":{}}}],["started",{"_index":251,"title":{"index.html":{},"license.html":{}},"body":{"controllers/AppController.html":{}}}],["starts",{"_index":642,"title":{},"body":{"injectables/PrismaService.html":{}}}],["startup",{"_index":232,"title":{},"body":{"controllers/AppController.html":{}}}],["statements",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":229,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["stats/players/${gamertag}/csrs",{"_index":562,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["stats/players/${gamertag}/service",{"_index":569,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["statsbasecommand",{"_index":704,"title":{"classes/StatsBaseCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"coverage.html":{}}}],["statscsr",{"_index":766,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statscsr.data",{"_index":769,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsdto",{"_index":720,"title":{"classes/StatsDto.html":{}},"body":{"classes/StatsDto.html":{},"coverage.html":{}}}],["statsgetsubcommand",{"_index":715,"title":{"classes/StatsGetSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsGetSubCommand.html":{},"coverage.html":{}}}],["statshelpdto",{"_index":808,"title":{"classes/StatsHelpDto.html":{}},"body":{"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["statshelpsubcommand",{"_index":713,"title":{"classes/StatsHelpSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsHelpSubCommand.html":{},"coverage.html":{}}}],["statsrecord",{"_index":768,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data",{"_index":770,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.kda.tofixed(1",{"_index":781,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.kdr.tofixed(1",{"_index":782,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.matches_played",{"_index":784,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.assists",{"_index":780,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.deaths",{"_index":779,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.summary.kills",{"_index":777,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.time_played.human",{"_index":788,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsrecord.data.win_rate.tofixed(1",{"_index":789,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["statsregsubcommand",{"_index":711,"title":{"classes/StatsRegSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsRegSubCommand.html":{},"coverage.html":{}}}],["statssubcommands",{"_index":447,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["statsupdatesubcommand",{"_index":717,"title":{"classes/StatsUpdateSubCommand.html":{}},"body":{"classes/StatsBaseCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"coverage.html":{}}}],["status",{"_index":481,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["statuscode",{"_index":150,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["store",{"_index":976,"title":{},"body":{"injectables/TwitterService.html":{}}}],["string",{"_index":11,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"interfaces/AllTime.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"interfaces/Vehicles.html":{}}}],["sub",{"_index":709,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["sub.unsubscribe",{"_index":260,"title":{},"body":{"controllers/AppController.html":{}}}],["sub_command",{"_index":244,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{}}}],["sub_command_group",{"_index":403,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["sub_tier",{"_index":24,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["subcommand",{"_index":745,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["subcommands",{"_index":849,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["subject",{"_index":1242,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1235,"title":{},"body":{"license.html":{}}}],["subscribing",{"_index":210,"title":{},"body":{"controllers/AppController.html":{}}}],["subscription",{"_index":185,"title":{},"body":{"controllers/AppController.html":{}}}],["subscriptions",{"_index":172,"title":{},"body":{"controllers/AppController.html":{}}}],["substantial",{"_index":1248,"title":{},"body":{"license.html":{}}}],["suicides",{"_index":58,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["summary",{"_index":53,"title":{"interfaces/Summary.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["suomeksi",{"_index":471,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["support",{"_index":1204,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporttweetchannelids",{"_index":1065,"title":{},"body":{"injectables/TwitterService.html":{}}}],["svg",{"_index":1274,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":451,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["tai",{"_index":841,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["take",{"_index":418,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/UserService.html":{}}}],["taken",{"_index":61,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["takes",{"_index":405,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/MessageToUpperPipe.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{}}}],["tarkoittaa",{"_index":829,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["test",{"_index":1193,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1196,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1195,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1192,"title":{},"body":{"index.html":{}}}],["text",{"_index":786,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"injectables/TwitterService.html":{}}}],["textchannel",{"_index":984,"title":{},"body":{"injectables/TwitterService.html":{}}}],["thanks",{"_index":1202,"title":{},"body":{"index.html":{}}}],["themselves",{"_index":708,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["then((reply",{"_index":793,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["then((value",{"_index":246,"title":{},"body":{"controllers/AppController.html":{}}}],["third",{"_index":226,"title":{},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{}}}],["this.$connect",{"_index":644,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":645,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._client",{"_index":994,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._client.v2.search",{"_index":1047,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._client.v2.user(twitteruserid",{"_index":1002,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._configservice",{"_index":989,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._configservice.get('halodottoken",{"_index":550,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._configservice.get('token",{"_index":424,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._configservice.get('twitterbearertoken",{"_index":995,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._discordapiservice",{"_index":240,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.constructstatscommand",{"_index":245,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordapiservice.getcommands().catch((error",{"_index":249,"title":{},"body":{"controllers/AppController.html":{}}}],["this._discordprovider",{"_index":1014,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._halodotapi",{"_index":767,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._halodotapiinfinitebaseurl",{"_index":547,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._halosupporttweets.asobservable",{"_index":1012,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._halosupporttweets.next([...tweets",{"_index":1013,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._headers",{"_index":549,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._http.get(url",{"_index":559,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._httpservice.delete(this.discordurl",{"_index":482,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._httpservice.get(this.discordurl",{"_index":475,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._httpservice.post(this.discordurl",{"_index":435,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._logger",{"_index":502,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["this._logger.debug",{"_index":484,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{}}}],["this._logger.debug('search",{"_index":1053,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug('searching",{"_index":1052,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug(`gamertag",{"_index":765,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.debug(`registered",{"_index":477,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._logger.debug(`twitter",{"_index":996,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.debug(`url",{"_index":558,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.error",{"_index":157,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this._logger.error(error",{"_index":205,"title":{},"body":{"controllers/AppController.html":{},"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"injectables/TwitterService.html":{}}}],["this._logger.log('bot",{"_index":250,"title":{},"body":{"controllers/AppController.html":{}}}],["this._logger.verbose",{"_index":213,"title":{},"body":{"controllers/AppController.html":{}}}],["this._logger.verbose(`registered",{"_index":247,"title":{},"body":{"controllers/AppController.html":{}}}],["this._logger.verbose(`request",{"_index":615,"title":{},"body":{"controllers/Oauth2DiscordController.html":{}}}],["this._logger.verbose(`twitter",{"_index":1005,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._logger.verbose(interaction",{"_index":890,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["this._logger.verbose(json.stringify(defer",{"_index":757,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.verbose(json.stringify(dto",{"_index":889,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["this._logger.verbose(reply",{"_index":794,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._logger.warn('examplemiddleware",{"_index":504,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["this._logger.warn(`allowlogging",{"_index":864,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.warn(`url",{"_index":571,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["this._logger.warn(`userexists",{"_index":868,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._logger.warn(data",{"_index":434,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this._prismaservice.tweet.findunique",{"_index":1060,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._submap.foreach((sub",{"_index":259,"title":{},"body":{"controllers/AppController.html":{}}}],["this._submap.set",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterallowedsearchauthorids",{"_index":988,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._twitterservice",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterservice.newtweets$.subscribe((newtweets",{"_index":212,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterservice.pollhalosupporttweets",{"_index":258,"title":{},"body":{"controllers/AppController.html":{}}}],["this._twitterusers",{"_index":998,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._twitterusers.filter",{"_index":1026,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._twitterusers.push(user.data",{"_index":1007,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._twitterusers.some((user",{"_index":1022,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this._userservice",{"_index":801,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["this._userservice.createuser",{"_index":873,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["this._userservice.updateuser",{"_index":871,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["this._userservice.user",{"_index":866,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["this.bottoken",{"_index":423,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this.constructembedtweetmessage(tweet).catch",{"_index":1018,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.discordurl",{"_index":425,"title":{},"body":{"injectables/DiscordApiService.html":{}}}],["this.httpadapterhost",{"_index":143,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.pollhalosupporttweets().catch((error",{"_index":1009,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.prisma.botuser.create",{"_index":1104,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.delete",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.findmany",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.findunique",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.botuser.update",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{}}}],["this.recordtweet(tweet",{"_index":1063,"title":{},"body":{"injectables/TwitterService.html":{}}}],["this.twitterallowedsearchauthorids",{"_index":993,"title":{},"body":{"injectables/TwitterService.html":{}}}],["throw",{"_index":565,"title":{},"body":{"injectables/HaloDotApiService.html":{}}}],["thrown",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["thus",{"_index":139,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["tier",{"_index":22,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tier_image_url",{"_index":29,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tier_start",{"_index":23,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/AllTime.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{}}}],["tilastot",{"_index":839,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["time",{"_index":787,"title":{},"body":{"classes/StatsGetSubCommand.html":{}}}],["time_played",{"_index":89,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["timeout",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["timeplayed",{"_index":82,"title":{"interfaces/TimePlayed.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["timestamp",{"_index":151,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["todo",{"_index":235,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{}}}],["tojson.model.ts",{"_index":893,"title":{},"body":{"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["tojsonresponse",{"_index":891,"title":{"interfaces/ToJsonResponse.html":{}},"body":{"interfaces/ToJsonResponse.html":{},"coverage.html":{}}}],["token",{"_index":381,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"modules/SharedModule.html":{}}}],["tort",{"_index":1268,"title":{},"body":{"license.html":{}}}],["total_score",{"_index":87,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["transform",{"_index":587,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transform([message",{"_index":593,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transform(undefined",{"_index":588,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["transformpipe",{"_index":742,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["true",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"controllers/Oauth2DiscordController.html":{},"classes/RegisterDto.html":{},"modules/SharedModule.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{}}}],["true})@choice(language",{"_index":810,"title":{},"body":{"classes/StatsHelpDto.html":{}}}],["try",{"_index":256,"title":{},"body":{"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["tulostaa",{"_index":833,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["tweet",{"_index":930,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.author_id",{"_index":1024,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.fields",{"_index":1049,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.id",{"_index":1062,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet.text",{"_index":1033,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet](https://twitter.com/i/web/status/${tweet.id",{"_index":1035,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweet_id",{"_index":1061,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetauthor",{"_index":1025,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetauthor.username",{"_index":1030,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetdata",{"_index":959,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweets",{"_index":216,"title":{},"body":{"controllers/AppController.html":{},"injectables/TwitterService.html":{}}}],["tweetstream",{"_index":978,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetv2",{"_index":926,"title":{},"body":{"injectables/TwitterService.html":{}}}],["tweetv2singleresult",{"_index":979,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitter",{"_index":939,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["twitter_allowed_search_author_ids",{"_index":1044,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitterapi",{"_index":923,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitterapiv2",{"_index":980,"title":{},"body":{"injectables/TwitterService.html":{}}}],["twitterservice",{"_index":183,"title":{"injectables/TwitterService.html":{}},"body":{"controllers/AppController.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"coverage.html":{},"overview.html":{}}}],["twitteruserid",{"_index":1001,"title":{},"body":{"injectables/TwitterService.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/Additional.html":{},"interfaces/Additional-1.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"controllers/AppController.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/GetDto.html":{},"injectables/HaloDotApiService.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"classes/MessageFromUserGuard.html":{},"classes/MessageToUpperPipe.html":{},"controllers/Oauth2DiscordController.html":{},"injectables/PrismaService.html":{},"interfaces/QueueGroups.html":{},"classes/RegisterDto.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpDto.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"classes/UpdateDto.html":{},"injectables/UserService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["types",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["tämän",{"_index":834,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["undefined",{"_index":568,"title":{},"body":{"injectables/HaloDotApiService.html":{},"classes/MessageFromUserGuard.html":{}}}],["unique",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["unit",{"_index":1191,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"controllers/Oauth2DiscordController.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["unsubscribes",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["update",{"_index":460,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{}}}],["update.dto",{"_index":886,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["update/update.command",{"_index":718,"title":{},"body":{"classes/StatsBaseCommand.html":{}}}],["updated",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedto",{"_index":884,"title":{"classes/UpdateDto.html":{}},"body":{"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["updates",{"_index":852,"title":{},"body":{"classes/StatsHelpSubCommand.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(params",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{}}}],["upper.pipe.ts",{"_index":585,"title":{},"body":{"classes/MessageToUpperPipe.html":{},"coverage.html":{}}}],["upper.pipe.ts:9",{"_index":589,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["uppercase",{"_index":592,"title":{},"body":{"classes/MessageToUpperPipe.html":{}}}],["upsert",{"_index":965,"title":{},"body":{"injectables/TwitterService.html":{}}}],["upserttweet",{"_index":915,"title":{},"body":{"injectables/TwitterService.html":{}}}],["upserttweet(tweetdata",{"_index":963,"title":{},"body":{"injectables/TwitterService.html":{}}}],["url",{"_index":382,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"injectables/TwitterService.html":{}}}],["use",{"_index":462,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/ExampleMiddleWare.html":{},"classes/StatsUpdateSubCommand.html":{},"license.html":{}}}],["use(req",{"_index":490,"title":{},"body":{"injectables/ExampleMiddleWare.html":{}}}],["useclass",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["used",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/DiscordApiService.html":{},"controllers/Oauth2DiscordController.html":{},"modules/SharedModule.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["usefactory",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["usefilters",{"_index":747,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["usefilters(commandvalidationfilter",{"_index":751,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["usepipes",{"_index":746,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["usepipes(transformpipe",{"_index":752,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["user",{"_index":353,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsDto.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/ToJsonResponse.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":887,"title":{},"body":{"classes/StatsUpdateSubCommand.html":{}}}],["user(userwhereuniqueinput",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["user.data",{"_index":1003,"title":{},"body":{"injectables/TwitterService.html":{}}}],["user.errors",{"_index":1004,"title":{},"body":{"injectables/TwitterService.html":{}}}],["user.guard.ts",{"_index":575,"title":{},"body":{"classes/MessageFromUserGuard.html":{},"coverage.html":{}}}],["user.guard.ts:5",{"_index":579,"title":{},"body":{"classes/MessageFromUserGuard.html":{}}}],["user.id",{"_index":1023,"title":{},"body":{"injectables/TwitterService.html":{}}}],["userexists",{"_index":865,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["userexists.discord_user_id",{"_index":870,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["userexists.gamertag",{"_index":876,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["userid",{"_index":761,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{}}}],["users",{"_index":860,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"injectables/TwitterService.html":{},"injectables/UserService.html":{}}}],["users(params",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":656,"title":{"injectables/UserService.html":{}},"body":{"modules/SharedModule.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userv2",{"_index":972,"title":{},"body":{"injectables/TwitterService.html":{}}}],["userv2result",{"_index":981,"title":{},"body":{"injectables/TwitterService.html":{}}}],["userwhereuniqueinput",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1198,"title":{},"body":{"index.html":{}}}],["v2",{"_index":982,"title":{},"body":{"injectables/TwitterService.html":{},"dependencies.html":{}}}],["valid",{"_index":1011,"title":{},"body":{"injectables/TwitterService.html":{}}}],["validation",{"_index":349,"title":{},"body":{"classes/CommandValidationFilter.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["validation.ts",{"_index":336,"title":{},"body":{"classes/CommandValidationFilter.html":{},"coverage.html":{}}}],["validation.ts:13",{"_index":338,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validation.ts:15",{"_index":343,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validationerror",{"_index":340,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["validationpipe",{"_index":748,"title":{},"body":{"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{}}}],["validator",{"_index":346,"title":{},"body":{"classes/CommandValidationFilter.html":{}}}],["valinnainen",{"_index":832,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["value",{"_index":20,"title":{},"body":{"interfaces/Additional.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/AllTime.html":{},"interfaces/Choice.html":{},"classes/CommandValidationFilter.html":{},"interfaces/CsrsRootObject.html":{},"interfaces/Current.html":{},"interfaces/DefineDiscordCommand.html":{},"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"interfaces/QueueGroups.html":{},"interfaces/Response.html":{},"interfaces/Season.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"injectables/TwitterService.html":{},"miscellaneous/enumerations.html":{}}}],["variables",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["vehicles",{"_index":50,"title":{"interfaces/Vehicles.html":{}},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["version",{"_index":546,"title":{},"body":{"injectables/HaloDotApiService.html":{},"interfaces/ToJsonResponse.html":{}}}],["versions",{"_index":1180,"title":{},"body":{"index.html":{}}}],["viestin",{"_index":835,"title":{},"body":{"classes/StatsHelpSubCommand.html":{}}}],["void",{"_index":121,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/ExampleMiddleWare.html":{},"injectables/TwitterService.html":{}}}],["want",{"_index":397,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsRegSubCommand.html":{}}}],["warranties",{"_index":1254,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1250,"title":{},"body":{"license.html":{}}}],["wasupdated",{"_index":867,"title":{},"body":{"classes/StatsRegSubCommand.html":{}}}],["watch",{"_index":1187,"title":{},"body":{"index.html":{}}}],["way",{"_index":669,"title":{},"body":{"modules/SharedModule.html":{}}}],["whether",{"_index":861,"title":{},"body":{"classes/StatsRegSubCommand.html":{},"license.html":{}}}],["win_rate",{"_index":90,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["wins",{"_index":77,"title":{},"body":{"interfaces/Additional-1.html":{},"interfaces/Assists.html":{},"interfaces/Breakdowns.html":{},"interfaces/Damage.html":{},"interfaces/Data.html":{},"interfaces/Kills.html":{},"interfaces/Matches.html":{},"interfaces/ServiceRecord.html":{},"interfaces/Shots.html":{},"classes/StatsGetSubCommand.html":{},"interfaces/Summary.html":{},"interfaces/TimePlayed.html":{},"interfaces/Vehicles.html":{}}}],["without",{"_index":1226,"title":{},"body":{"license.html":{}}}],["words",{"_index":945,"title":{},"body":{"injectables/TwitterService.html":{}}}],["wrapper",{"_index":665,"title":{},"body":{"modules/SharedModule.html":{}}}],["write",{"_index":236,"title":{},"body":{"controllers/AppController.html":{},"classes/StatsGetSubCommand.html":{}}}],["xbox",{"_index":449,"title":{},"body":{"injectables/DiscordApiService.html":{},"classes/GetDto.html":{},"classes/RegisterDto.html":{},"classes/StatsGetSubCommand.html":{},"classes/StatsHelpSubCommand.html":{},"classes/StatsRegSubCommand.html":{},"classes/StatsUpdateSubCommand.html":{},"classes/UpdateDto.html":{}}}],["yes",{"_index":412,"title":{},"body":{"injectables/DiscordApiService.html":{},"injectables/HaloDotApiService.html":{},"classes/StatsHelpSubCommand.html":{}}}],["you'd",{"_index":1207,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Additional.html":{"url":"interfaces/Additional.html","title":"interface - Additional","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Additional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gamertag\n                                        \n                                \n                                \n                                        \n                                            season\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gamertag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gamertag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        season:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Additional-1.html":{"url":"interfaces/Additional-1.html","title":"interface - Additional-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Additional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gamertag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gamertag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gamertag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exception-filters/globalExceptions.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/exception-filters/globalExceptions.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/exception-filters/globalExceptions.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exception-filters/globalExceptions.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n/* The @Catch() decorator is used to catch all exceptions thrown by the controller methods. */\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  catch(exception: unknown, host: ArgumentsHost): void {\n    // In certain situations `httpAdapter` might not be available in the\n    // constructor method, thus we should resolve it here.\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const ctx = host.switchToHttp();\n\n    const httpStatus =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const responseBody = {\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n      error: JSON.stringify(exception),\n    };\n\n    this._logger.error(\n      `AllExcepetionsFilter error response: ${JSON.stringify(\n        ctx.getResponse(),\n      )}`,\n    );\n\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AllTime.html":{"url":"interfaces/AllTime.html","title":"interface - AllTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AllTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onModuleDestroy\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    Async\n                                onReady\n                            \n                            \n                                    Async\n                                pollLatestTweetsFromHaloSupport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \nonModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:90\n                \n            \n\n\n            \n                \n                    It unsubscribes from all the subscriptions that were created in the onModuleInit function.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onReady\n                        \n                    \n                \n            \n            \n                \n                    \n                    onReady()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Once('ready')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        pollLatestTweetsFromHaloSupport\n                        \n                    \n                \n            \n            \n                \n                    \n                    pollLatestTweetsFromHaloSupport()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_5_MINUTES)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Logger,\n  OnModuleDestroy,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { Once } from '@discord-nestjs/core';\nimport { TwitterService } from './services/twitter.service';\nimport { Subscription } from 'rxjs';\nimport { DiscordApiService } from './services/discord-api.service';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\n@Controller()\nexport class AppController implements OnModuleInit, OnModuleDestroy {\n  private readonly _logger = new Logger(AppController.name);\n  private _subMap = new Map();\n\n  constructor(\n    private _twitterService: TwitterService,\n    private _discordApiService: DiscordApiService,\n  ) { }\n\n  onModuleInit() { }\n\n  @Once('ready')\n  async onReady() {\n    /* The below code is initializing the TwitterService. */\n    await this._twitterService\n      .init()\n      .catch((error) => {\n        this._logger.error(error);\n      })\n      .then(() => { });\n\n    /* The _subMap is a map of the\n    subscriptions. The _subMap.set() method adds a subscription to the map. */\n    this._subMap.set(\n      'newTweets',\n      /* Subscribing to the newTweets$ observable. */\n      this._twitterService.newTweets$.subscribe((newTweets) => {\n        if (newTweets) {\n          this._logger.verbose(\n            `Found ${newTweets.length} new tweets from @HaloSupport`,\n          );\n        }\n      }),\n    );\n\n    /* The `registerNewCommand` method is used to register a new command with the Discord API. The first\n    parameter is the name of the command, the second parameter is a description of the command, and\n    the third parameter is the type of the command. The `constructStatsCommand` method is used\n    to construct stats the command. */\n\n    // Doesn't have to be ran every startup. Only if changes are made\n    // TODO write commandline argument for running this command?\n    await this._discordApiService\n      .registerNewCommand(\n        'stats',\n        'Commands for interacting with Halo Stats API',\n        'sub_command',\n        await this._discordApiService.constructStatsCommand(),\n      )\n      .then((value) => {\n        // this._logger.verbose(`Registered command: ${JSON.stringify(value)}`)\n      })\n      .catch((error) => {\n        this._logger.error(error);\n      });\n\n    await this._discordApiService.getCommands().catch((error) => {\n      this._logger.error(error);\n    });\n\n    this._logger.log('Bot was started!');\n  }\n\n  /* This is a cron expression that will run every 5 minutes. */\n  @Cron(CronExpression.EVERY_5_MINUTES)\n  async pollLatestTweetsFromHaloSupport() {\n    try {\n      return await this._twitterService.pollHaloSupportTweets();\n    } catch (error) {\n      this._logger.error(error);\n    }\n  }\n\n  /**\n   * It unsubscribes from all the subscriptions that were created in the onModuleInit function.\n   */\n  onModuleDestroy() {\n    this._subMap.forEach((sub) => sub.unsubscribe());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nOauth2DiscordModule\n\nOauth2DiscordModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nOauth2DiscordModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDiscordApiService\n\nDiscordApiService\n\nAppModule -->\n\nDiscordApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiscordApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            Oauth2DiscordModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport config from '../environment/config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { HttpModule } from '@nestjs/axios';\nimport { SharedModule } from './shared/shared.module';\nimport { DiscordApiService } from './services/discord-api.service';\nimport { AllExceptionsFilter } from './exception-filters/globalExceptions';\nimport { APP_FILTER } from '@nestjs/core';\nimport { Oauth2DiscordModule } from './controllers/oauth2-discord/oauth2-discord.module';\n\n/* We import the ConfigModule, which will load the environment variables from the .env file. We then\nimport the HttpModule, which will configure the timeout and max redirects for the HTTP client. We\nthen import the ScheduleModule, which will configure the cron jobs. We then import the\nOauth2DiscordModule, which will configure the Discord OAuth2 callback. Finally, we import the\nSharedModule, which will configure the shared services. */\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: ['./environment/.env'],\n      isGlobal: true,\n      load: [config],\n    }),\n    /* The HttpModule is a class that registers an async factory function that returns an object with a\n    timeout property and a maxRedirects property. The ConfigModule is a class that registers an async\n    factory function that returns an object with a timeout property and a maxRedirects property. The\n    ConfigService is a class that injects the ConfigModule and returns the object with a timeout\n    property and a maxRedirects property. */\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async () => ({\n        timeout: 10000,\n        maxRedirects: 3,\n      }),\n      inject: [ConfigService],\n    }),\n    ScheduleModule.forRoot(),\n    Oauth2DiscordModule,\n    SharedModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    DiscordApiService,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Assists.html":{"url":"interfaces/Assists.html","title":"interface - Assists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Assists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callouts\n                                        \n                                \n                                \n                                        \n                                            driver\n                                        \n                                \n                                \n                                        \n                                            emp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callouts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callouts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        driver\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        driver:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Breakdowns.html":{"url":"interfaces/Breakdowns.html","title":"interface - Breakdowns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Breakdowns\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assists\n                                        \n                                \n                                \n                                        \n                                            kills\n                                        \n                                \n                                \n                                        \n                                            matches\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assists:         Assists\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Assists\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kills\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kills:         Kills\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Kills\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matches:         Matches\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Matches\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Choice.html":{"url":"interfaces/Choice.html","title":"interface - Choice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Choice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sub-command-options.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefineDiscordCommand {\n  name: string;\n  description: string;\n  type?: number;\n  options?: DefineDiscordCommand[];\n  required?: boolean;\n  default_permission?: boolean;\n  choices?: Choice[];\n}\n\nexport interface Choice {\n  name: string;\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommandValidationFilter.html":{"url":"classes/CommandValidationFilter.html","title":"class - CommandValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommandValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exception-filters/discord-command-validation.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/exception-filters/discord-command-validation.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exceptionList: ValidationError[], metadata: DiscordArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/exception-filters/discord-command-validation.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exceptionList\n                                    \n                                            ValidationError[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            DiscordArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  DiscordArgumentMetadata,\n  DiscordExceptionFilter,\n  Catch,\n} from '@discord-nestjs/core';\nimport { Logger } from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { MessageEmbed } from 'discord.js';\n\n/* We catch all validation errors and send a message to the user with the error details. */\n@Catch(ValidationError)\nexport class CommandValidationFilter implements DiscordExceptionFilter {\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  async catch(\n    exceptionList: ValidationError[],\n    metadata: DiscordArgumentMetadata,\n  ): Promise {\n    const [interaction] = metadata.context;\n\n    const embeds = exceptionList.map((exception) =>\n      new MessageEmbed().addFields(\n        Object.values(exception.constraints).map((value) => ({\n          name: exception.property,\n          value,\n        })),\n      ),\n    );\n\n    if (interaction.isCommand())\n      await interaction.reply({ embeds }).catch((error) => {\n        this._logger.error(error, error && error.stack ? error.stack : null);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CsrsRootObject.html":{"url":"interfaces/CsrsRootObject.html","title":"interface - CsrsRootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CsrsRootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            additional\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additional:         Additional\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Additional\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         QueueGroups[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QueueGroups[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Current.html":{"url":"interfaces/Current.html","title":"interface - Current","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Current\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Damage.html":{"url":"interfaces/Damage.html","title":"interface - Damage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Damage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            average\n                                        \n                                \n                                \n                                        \n                                            dealt\n                                        \n                                \n                                \n                                        \n                                            taken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        average\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        average:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dealt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dealt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taken:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            breakdowns\n                                        \n                                \n                                \n                                        \n                                            damage\n                                        \n                                \n                                \n                                        \n                                            kda\n                                        \n                                \n                                \n                                        \n                                            kdr\n                                        \n                                \n                                \n                                        \n                                            matches_played\n                                        \n                                \n                                \n                                        \n                                            shots\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            time_played\n                                        \n                                \n                                \n                                        \n                                            total_score\n                                        \n                                \n                                \n                                        \n                                            win_rate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        breakdowns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        breakdowns:         Breakdowns\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Breakdowns\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        damage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        damage:         Damage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Damage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kda\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kda:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kdr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kdr:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matches_played\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matches_played:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shots\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shots:         Shots\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Shots\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         Summary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Summary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time_played\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time_played:         TimePlayed\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimePlayed\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        win_rate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        win_rate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefineDiscordCommand.html":{"url":"interfaces/DefineDiscordCommand.html","title":"interface - DefineDiscordCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefineDiscordCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sub-command-options.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            choices\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default_permission\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        choices:         Choice[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Choice[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default_permission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default_permission:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         DefineDiscordCommand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefineDiscordCommand[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefineDiscordCommand {\n  name: string;\n  description: string;\n  type?: number;\n  options?: DefineDiscordCommand[];\n  required?: boolean;\n  default_permission?: boolean;\n  choices?: Choice[];\n}\n\nexport interface Choice {\n  name: string;\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscordApiService.html":{"url":"injectables/DiscordApiService.html","title":"injectable - DiscordApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscordApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/discord-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                            \n                                botToken\n                            \n                            \n                                discordUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                constructStatsCommand\n                            \n                            \n                                    Async\n                                deleteCommand\n                            \n                            \n                                    Async\n                                getCommands\n                            \n                            \n                                    Async\n                                registerNewCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_httpService: HttpService, _configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/services/discord-api.service.ts:13\n                            \n                        \n\n                \n                    \n                            It sets the bot token and the discord url.\napplication ID.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpService\n\n\n                                                        \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe config service is used to get the bot token and\napplication ID.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        constructStatsCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    constructStatsCommand()\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:99\n                \n            \n\n\n            \n                \n                    It creates a list of commands that can be used in the bot.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An array of objects that represent the commands.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCommand(commandId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:222\n                \n            \n\n\n            \n                \n                    It deletes a command from the bot.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    commandId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the command you want to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The response from the API.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCommands\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommands()\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:192\n                \n            \n\n\n            \n                \n                    It gets the commands that are registered with the bot.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The response from the API.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerNewCommand\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNewCommand(name: string, description: string, type?: \"sub_command\" | \"sub_command_group\", options?: DefineDiscordCommand[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/discord-api.service.ts:44\n                \n            \n\n\n            \n                \n                    It takes in a name, description, and type, and then sends a post request to the Discord API with\nthe data to register a new command for the bot. Required appropriate scope and permission.\ncommand.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe name of the command.\n\n\n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe description of the command.\n\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                            \"sub_command\" | \"sub_command_group\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe type of command.\n\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                DefineDiscordCommand[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nAn array of objects that define the options for the\ncommand.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The response from the post request.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(DiscordApiService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        botToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discordUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/services/discord-api.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { lastValueFrom, take } from 'rxjs';\nimport { DefineDiscordCommand } from 'src/models/sub-command-options.model';\nimport { AxiosResponse } from 'axios';\n\n@Injectable()\nexport class DiscordApiService {\n  private _logger: Logger = new Logger(DiscordApiService.name);\n\n  discordUrl: string;\n  botToken: string;\n\n  /**\n   * It sets the bot token and the discord url.\n   * @param {HttpService} _httpService - HttpService\n   * @param {ConfigService} _configService - The config service is used to get the bot token and\n   * application ID.\n   */\n  constructor(\n    private _httpService: HttpService,\n    private _configService: ConfigService,\n  ) {\n    this.botToken = this._configService.get('token');\n    this.discordUrl = `https://discord.com/api/v8/applications/${this._configService.get(\n      'applicationId',\n    )}/guilds/${this._configService.get('guildID')}/commands`;\n\n    // console.log('discordAPI url for commands:', this.discordUrl);\n    // console.log('discordAPI token:', this.botToken);\n  }\n\n  /**\n   * It takes in a name, description, and type, and then sends a post request to the Discord API with\n   * the data to register a new command for the bot. Required appropriate scope and permission.\n   * @param {string} name - The name of the command.\n   * @param {string} description - The description of the command.\n   * @param {'sub_command' | 'sub_command_group'} [type] - The type of command.\n   * @param {DefineDiscordCommand[]} [options] - An array of objects that define the options for the\n   * command.\n   * @returns The response from the post request.\n   */\n  async registerNewCommand(\n    name: string,\n    description: string,\n    type?: 'sub_command' | 'sub_command_group',\n    options?: DefineDiscordCommand[],\n  ): Promise {\n    try {\n      const data: DefineDiscordCommand = {\n        name: name,\n        description: description,\n      };\n\n      if (type) {\n        data.type =\n          type === 'sub_command' ? 1 : type === 'sub_command_group' ? 2 : null;\n\n        if (data.type === null) {\n          return Promise.reject('Check type parameter');\n        }\n      }\n\n      if (options) {\n        data.options = options;\n      }\n\n      // this._logger.warn(data);\n\n      const post = this._httpService.post(this.discordUrl, data, {\n        headers: {\n          Authorization: `Bot ${this.botToken}`,\n        },\n      });\n\n      const result = await lastValueFrom(post);\n\n      if (result.status === 200) {\n        return result.data;\n      } else {\n        return Promise.reject(\n          `Error registering new command. HttpStatus: ${result.status}`,\n        );\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It creates a list of commands that can be used in the bot.\n   * @returns An array of objects that represent the commands.\n   */\n  async constructStatsCommand() {\n    // 1 is type SUB_COMMAND'\n    // 2 is type SUB_COMMAND_GROUP\n    const statsSubCommands: DefineDiscordCommand[] = [\n      {\n        name: 'reg',\n        description: 'Register your Xbox Gamer tag',\n        type: 1,\n        options: [\n          {\n            name: 'gamertag',\n            description: 'Enter Xbox Gamertag',\n            type: 3,\n            required: true,\n          },\n          {\n            name: 'allowlogging',\n            description:\n              'Allow your stats to be logged in a database every 24 hours.',\n            type: 3,\n            required: true,\n            choices: [\n              {\n                name: 'Yes',\n                value: '1',\n              },\n              {\n                name: 'No',\n                value: '0',\n              },\n            ],\n          },\n        ],\n      },\n      {\n        name: 'update',\n        description: 'Update your registered Xbox Gamer Tag',\n        type: 1,\n        options: [\n          {\n            name: 'gamertag',\n            description: 'Enter Xbox Gamertag',\n            type: 3,\n            required: true,\n          },\n        ],\n      },\n      {\n        name: 'get',\n        description: 'Query your stats or use :gamertag: to query',\n        type: 1,\n        options: [\n          {\n            name: 'gamertag',\n            description:\n              '(Optional) Enter Xbox Gamertag to pull stats for Halo Infinite',\n            type: 3,\n            required: false,\n          },\n        ],\n      },\n      {\n        name: 'help',\n        description: 'READ ME',\n        type: 1,\n        options: [\n          {\n            name: 'lang',\n            description: 'Select language',\n            type: 3,\n            required: true,\n            choices: [\n              {\n                name: 'Suomeksi',\n                value: 'fi',\n              },\n              {\n                name: 'In English',\n                value: 'en',\n              },\n            ],\n          },\n        ],\n      },\n    ];\n\n    return statsSubCommands;\n  }\n\n  /**\n   * It gets the commands that are registered with the bot.\n   * @returns The response from the API.\n   */\n  async getCommands(): Promise> {\n    try {\n      const get = await lastValueFrom(\n        this._httpService.get(this.discordUrl, {\n          headers: {\n            Authorization: `Bot ${this.botToken}`,\n          },\n        }),\n      );\n\n      if (get.status == 200) {\n        this._logger.debug(`REGISTERED COMMANDS: `, JSON.stringify(get.data));\n        return get;\n      } else {\n        Promise.reject(`API responded with status ${get.status}`);\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It deletes a command from the bot.\n   * @param {string} commandId - The ID of the command you want to delete.\n   * @returns The response from the API.\n   */\n  async deleteCommand(\n    commandId: string,\n  ): Promise> {\n    try {\n      const deleteCommand = await lastValueFrom(\n        this._httpService.delete(this.discordUrl + `/${commandId}`, {\n          headers: {\n            Authorization: `Bot ${this.botToken}`,\n          },\n        }),\n      );\n\n      if (deleteCommand.status == 200) {\n        this._logger.debug(\n          `DELETE COMMAND: `,\n          JSON.stringify(deleteCommand.data),\n        );\n\n        return deleteCommand;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExampleMiddleWare.html":{"url":"injectables/ExampleMiddleWare.html","title":"injectable - ExampleMiddleWare","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExampleMiddleWare\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/example.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/example.middleware.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/example.middleware.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\n/* This middleware logs the request body. */\n// https://docs.nestjs.com/middleware\nexport class ExampleMiddleWare implements NestMiddleware {\n  constructor(private _logger: Logger) {\n    this._logger = new Logger(ExampleMiddleWare.name);\n  }\n\n  use(req: Request, res: Response, next: NextFunction) {\n    this._logger.warn('ExampleMiddleWare request body: ', req.body);\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetDto.html":{"url":"classes/GetDto.html","title":"class - GetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/get/get.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/get/get.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\n// enum PublicStats {\n//   true,\n//   false,\n// }\n\nexport class GetDto {\n  @Param({ description: 'Xbox Gamer Tag', required: false })\n  gamertag: string;\n  // @Choice(PublicStats)\n  // isPublic: PublicStats;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HaloDotApiService.html":{"url":"injectables/HaloDotApiService.html","title":"injectable - HaloDotApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HaloDotApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/halodotapi.service.ts\n        \n\n\n            \n                Description\n            \n            \n                 The HaloDotApiService class is a class that is responsible for making requests to the HaloDotApi.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _haloDotApiInfiniteBaseUrl\n                            \n                            \n                                    Private\n                                _headers\n                            \n                            \n                                    Private\n                                    Readonly\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMotd\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                requestPlayerServiceRecord\n                            \n                            \n                                    Async\n                                requestPlayerStatsCSR\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpService, _configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMotd\n                        \n                    \n                \n            \n            \n                \ngetMotd()\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:60\n                \n            \n\n\n            \n                \n                    It returns an Observable of an AxiosResponse.\n\n\n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        An Observable of type AxiosResponse\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:39\n                \n            \n\n\n            \n                \n                    It makes a request to the HaloDotApi and returns the response.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestPlayerServiceRecord\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestPlayerServiceRecord(gamertag: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:101\n                \n            \n\n\n            \n                \n                    It makes a request to the Halo API to get the Service Record for a player.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gamertag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe gamertag of the player you want to get the service record for.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestPlayerStatsCSR\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestPlayerStatsCSR(gamertag: string, queue?: \"open\" | \"solo-duo\")\n                \n            \n\n\n            \n                \n                    Defined in src/services/haloDotApi/halodotapi.service.ts:72\n                \n            \n\n\n            \n                \n                    It returns the CSRs for a player.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gamertag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe gamertag of the player you want to get the CSRs for.\n\n\n                                    \n                                \n                                \n                                    queue\n                                    \n                                            \"open\" | \"solo-duo\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe queue to get stats for.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _haloDotApiInfiniteBaseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HaloDotApiService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/haloDotApi/halodotapi.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosResponse } from 'axios';\nimport { lastValueFrom, Observable } from 'rxjs';\n\n/**\n *  The HaloDotApiService class is a class that is responsible for making requests to the HaloDotApi.\n *\n * @export\n * @class HaloDotApiService\n */\n@Injectable()\nexport class HaloDotApiService {\n  private readonly _logger = new Logger(HaloDotApiService.name);\n\n  private _haloDotApiInfiniteBaseUrl: string;\n  private _headers: {\n    Authorization: string;\n    'Content-Type': string;\n    'Cryptum-API-Version': string;\n  };\n\n  constructor(\n    private _http: HttpService,\n    private _configService: ConfigService,\n  ) {\n    this._haloDotApiInfiniteBaseUrl = `https://cryptum.halodotapi.com/games/hi/`;\n    this._headers = {\n      Authorization: `Cryptum-Token ${this._configService.get('haloDotToken')}`,\n      'Content-Type': 'application/json',\n      'Cryptum-API-Version': '2.3-alpha',\n    };\n  }\n\n  /**\n   * It makes a request to the HaloDotApi and returns the response.\n   */\n  async init(): Promise> {\n    try {\n      this._logger.debug(\n        `haloDotApiBaseUrl: ${this._haloDotApiInfiniteBaseUrl}`,\n      );\n      const url = 'https://cryptum.halodotapi.com/';\n      // const req =\n      return await lastValueFrom(this._http.get(url));\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It returns an Observable of an AxiosResponse.\n   * @returns An Observable of type AxiosResponse\n   */\n  getMotd(): Observable> {\n    const url = this._haloDotApiInfiniteBaseUrl + 'motd';\n    this._logger.debug(`url: ${url}`);\n    const request = this._http.get(url, {});\n    return request;\n  }\n\n  /**\n   * It returns the CSRs for a player.\n   * @param {string} gamertag - The gamertag of the player you want to get the CSRs for.\n   * @param {'open' | 'solo-duo'} [queue] - The queue to get stats for.\n   */\n  async requestPlayerStatsCSR(gamertag: string, queue?: 'open' | 'solo-duo') {\n    try {\n      let returnValue: CsrsModels.CsrsRootObject;\n\n      const url =\n        this._haloDotApiInfiniteBaseUrl + `stats/players/${gamertag}/csrs`;\n      const request = await lastValueFrom(\n        this._http.get(url, {\n          headers: this._headers,\n        }),\n      );\n      if (request && request.status === 200) {\n        returnValue = request.data as CsrsModels.CsrsRootObject;\n      }\n      return returnValue;\n    } catch (error) {\n      // throw new Error(error);\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It makes a request to the Halo API to get the Service Record for a player.\n   * @param {string} gamertag - The gamertag of the player you want to get the service record for.\n   */\n  async requestPlayerServiceRecord(gamertag: string) {\n    try {\n      let returnValue: ServiceRecordsModels.ServiceRecord | undefined;\n\n      const url =\n        this._haloDotApiInfiniteBaseUrl +\n        `stats/players/${gamertag}/service-record/global`;\n      // this._logger.warn(`url: ${url}`)\n      const request = await lastValueFrom(\n        this._http.get(url, {\n          headers: this._headers,\n        }),\n      );\n      if (request && request.status == 200) {\n        returnValue = request.data as ServiceRecordsModels.ServiceRecord;\n      }\n      return returnValue;\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Kills.html":{"url":"interfaces/Kills.html","title":"interface - Kills","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Kills\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            grenades\n                                        \n                                \n                                \n                                        \n                                            headshots\n                                        \n                                \n                                \n                                        \n                                            melee\n                                        \n                                \n                                \n                                        \n                                            power_weapons\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        grenades\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grenades:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headshots\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headshots:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        melee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        melee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        power_weapons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        power_weapons:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Matches.html":{"url":"interfaces/Matches.html","title":"interface - Matches","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Matches\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            draws\n                                        \n                                \n                                \n                                        \n                                            left\n                                        \n                                \n                                \n                                        \n                                            losses\n                                        \n                                \n                                \n                                        \n                                            wins\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        draws\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draws:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        losses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        losses:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wins:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageFromUserGuard.html":{"url":"classes/MessageFromUserGuard.html","title":"class - MessageFromUserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageFromUserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/message-fom-user.guard.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActive\n                        \n                    \n                \n            \n            \n                \ncanActive(event, undefined: [Message])\n                \n            \n\n\n            \n                \n                    Defined in src/guards/message-fom-user.guard.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            [Message]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DiscordGuard } from '@discord-nestjs/core';\nimport { Message } from 'discord.js';\n\nexport class MessageFromUserGuard implements DiscordGuard {\n  canActive(event: 'messageCreate', [message]: [Message]): boolean {\n    return !message.author.bot;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageToUpperPipe.html":{"url":"classes/MessageToUpperPipe.html","title":"class - MessageToUpperPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageToUpperPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/message-to-upper.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordPipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(undefined: [Message])\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/message-to-upper.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            [Message]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DiscordPipeTransform } from '@discord-nestjs/core';\nimport { Message } from 'discord.js';\n\n/* The MessageToUpperPipe class implements the DiscordPipeTransform interface. The transform method\ntakes an array of Message objects as an argument and returns an array of Message objects. The\ntransform method returns a new array of Message objects with the content of each Message object in\nthe array converted to uppercase. */\nexport class MessageToUpperPipe implements DiscordPipeTransform {\n  transform([message]: [Message]): [Message] {\n    message.content = message.content.toUpperCase();\n\n    return [message];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/Oauth2DiscordController.html":{"url":"controllers/Oauth2DiscordController.html","title":"controller - Oauth2DiscordController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  Oauth2DiscordController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/oauth2-discord/oauth2-discord.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                oauth2-discord\n            \n\n\n            \n                Description\n            \n            \n                 Used for Discord oAuth2 callback. Return simple HTTP OK message for authentication purposes when inviting bot to join server\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                callbackForDiscordOauth2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        callbackForDiscordOauth2\n                        \n                    \n                \n            \n            \n                \n                    \n                    callbackForDiscordOauth2(request: Request, response: Response, body: Body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/controllers/oauth2-discord/oauth2-discord.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                            Body\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Request,\n  Req,\n  Logger,\n  Body,\n  Res,\n  Response,\n  HttpStatus,\n} from '@nestjs/common';\n\n/**\n *  Used for Discord oAuth2 callback. Return simple HTTP OK message for authentication purposes when inviting bot to join server\n *\n * @export\n * @class Oauth2DiscordController\n */\n@Controller('oauth2-discord')\nexport class Oauth2DiscordController {\n  private _logger: Logger = new Logger(Oauth2DiscordController.name);\n\n  @Get()\n  async callbackForDiscordOauth2(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n    @Body() body: Body,\n  ) {\n    if (request) {\n      // const requestJson = await request.json();\n      this._logger.verbose(`request json: ${JSON.stringify(request.body)}`);\n    }\n\n    if (response) {\n      // const responseJson = await response.json();\n      this._logger.verbose(`request json: ${JSON.stringify(response.body)}`);\n    }\n\n    if (body) {\n      // const bodyJson = await body.json();\n      this._logger.verbose(`request json: ${JSON.stringify(body.body)}`);\n    }\n\n    return HttpStatus.OK;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Oauth2DiscordModule.html":{"url":"modules/Oauth2DiscordModule.html","title":"module - Oauth2DiscordModule","body":"\n                   \n\n\n\n\n    Modules\n    Oauth2DiscordModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/controllers/oauth2-discord/oauth2-discord.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            Oauth2DiscordController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Oauth2DiscordController } from './oauth2-discord.controller';\n\n@Module({\n  controllers: [Oauth2DiscordController],\n})\nexport class Oauth2DiscordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:18\n                \n            \n\n\n            \n                \n                    When the server is shutting down, close the application\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nINestApplication\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/services/prisma.service.ts:10\n                \n            \n\n\n            \n                \n                    It connects to the database.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\n/* When the server starts, connect to the database. */\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  /**\n   * It connects to the database.\n   */\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  /**\n   * When the server is shutting down, close the application\n   * @param {INestApplication} app - INestApplication\n   */\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueueGroups.html":{"url":"interfaces/QueueGroups.html","title":"interface - QueueGroups","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueueGroups\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            input\n                                        \n                                \n                                \n                                        \n                                            queue\n                                        \n                                \n                                \n                                        \n                                            response\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input:     \"crossplay\" | \"controller\" | \"mnk\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"crossplay\" | \"controller\" | \"mnk\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue:     \"open\" | \"solo-duo\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"open\" | \"solo-duo\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response:         Response\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Response\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/register/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowlogging\n                            \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allowlogging\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Allow logging to a database', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class RegisterDto {\n  @Param({ description: 'Xbox Gamer Tag', required: true })\n  gamertag: string;\n  @Param({ description: 'Allow logging to a database', required: true })\n  allowlogging: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            all_time\n                                        \n                                \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            season\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        all_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        all_time:         AllTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AllTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         Current\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Current\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        season:         Season\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Season\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Season.html":{"url":"interfaces/Season.html","title":"interface - Season","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Season\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/csrs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial_measurement_matches\n                                        \n                                \n                                \n                                        \n                                            measurement_matches_remaining\n                                        \n                                \n                                \n                                        \n                                            next_sub_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier\n                                        \n                                \n                                \n                                        \n                                            next_tier_start\n                                        \n                                \n                                \n                                        \n                                            sub_tier\n                                        \n                                \n                                \n                                        \n                                            tier\n                                        \n                                \n                                \n                                        \n                                            tier_image_url\n                                        \n                                \n                                \n                                        \n                                            tier_start\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial_measurement_matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial_measurement_matches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_matches_remaining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measurement_matches_remaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next_tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next_tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub_tier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_image_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_image_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tier_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tier_start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module CsrsModels {\n  export interface Current {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Season {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface AllTime {\n    value: number;\n    measurement_matches_remaining: number;\n    tier: string;\n    tier_start: number;\n    sub_tier: number;\n    next_tier: string;\n    next_tier_start: number;\n    next_sub_tier: number;\n    initial_measurement_matches: number;\n    tier_image_url: string;\n  }\n\n  export interface Response {\n    current: Current;\n    season: Season;\n    all_time: AllTime;\n  }\n\n  export interface QueueGroups {\n    queue: 'open' | 'solo-duo';\n    input: 'crossplay' | 'controller' | 'mnk';\n    response: Response;\n  }\n\n  export interface Additional {\n    gamertag: string;\n    season: number;\n  }\n\n  export interface CsrsRootObject {\n    data: QueueGroups[];\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceRecord.html":{"url":"interfaces/ServiceRecord.html","title":"interface - ServiceRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            additional\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additional:         Additional\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Additional\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nDiscordCommandProvider \n\nDiscordCommandProvider \n\n\n\nHaloDotApiService \n\nHaloDotApiService \n\n\n\nPrismaService \n\nPrismaService \n\n\n\nTwitterService \n\nTwitterService \n\n\n\nUserService \n\nUserService \n\n\n\nSharedModule\n\nSharedModule\n\nDiscordCommandProvider  -->\n\nSharedModule->DiscordCommandProvider \n\n\n\nHaloDotApiService  -->\n\nSharedModule->HaloDotApiService \n\n\n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\nTwitterService  -->\n\nSharedModule->TwitterService \n\n\n\nUserService  -->\n\nSharedModule->UserService \n\n\n\n\n\nHaloDotApiService\n\nHaloDotApiService\n\nSharedModule -->\n\nHaloDotApiService->SharedModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\nTwitterService\n\nTwitterService\n\nSharedModule -->\n\nTwitterService->SharedModule\n\n\n\n\n\nUserService\n\nUserService\n\nSharedModule -->\n\nUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HaloDotApiService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            TwitterService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiscordCommandProvider\n                        \n                        \n                            HaloDotApiService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            TwitterService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DiscordCommandProvider, DiscordModule } from '@discord-nestjs/core';\nimport { HttpModule, HttpService } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER } from '@nestjs/core';\nimport { Intents, Message } from 'discord.js';\nimport { AllExceptionsFilter } from 'src/exception-filters/globalExceptions';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { PrismaService } from 'src/services/prisma.service';\nimport { TwitterService } from 'src/services/twitter.service';\nimport { UserService } from 'src/services/user.service';\n\n/* The DiscordModule is a wrapper around the Discord.js library. It provides a way to register commands\nand events.\n\nThe DiscordModule.forRootAsync method is used to register the Discord.js client. It takes an array\nof options. The first option is the token for the Discord bot. The second option is an array of file\npaths to register commands from. The third option is an object that contains the Discord.js client\noptions. The Discord.js client options are used to set the intents for the bot. The intents are used\nto determine what events the bot will listen */\n\n@Module({\n  imports: [\n    HttpModule,\n    DiscordModule.forRootAsync({\n      imports: [ConfigModule, SharedModule],\n      useFactory: (configService: ConfigService) => ({\n        token: configService.get('token'),\n        commands: ['**/**/*.command.js'],\n        autoRegisterGlobalCommands: true,\n        discordClientOptions: {\n          intents: [\n            Intents.FLAGS.GUILDS,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MEMBERS,\n            Intents.FLAGS.GUILD_BANS,\n            Intents.FLAGS.GUILD_EMOJIS_AND_STICKERS,\n            Intents.FLAGS.GUILD_INTEGRATIONS,\n            Intents.FLAGS.GUILD_WEBHOOKS,\n            Intents.FLAGS.GUILD_INVITES,\n            Intents.FLAGS.GUILD_VOICE_STATES,\n            Intents.FLAGS.GUILD_PRESENCES,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MESSAGE_REACTIONS,\n            Intents.FLAGS.GUILD_MESSAGE_TYPING,\n            Intents.FLAGS.DIRECT_MESSAGES,\n            Intents.FLAGS.DIRECT_MESSAGE_REACTIONS,\n            Intents.FLAGS.DIRECT_MESSAGE_TYPING,\n          ],\n        },\n        allowGuilds: JSON.parse(configService.get('allowGuilds')),\n        registerCommandOptions: [\n          {\n            forGuild: configService.get('guildID'),\n            allowFactory: (message: Message) =>\n              !message.author.bot && message.content === '!deploy',\n          },\n        ],\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    TwitterService,\n    PrismaService,\n    UserService,\n    HaloDotApiService,\n    DiscordCommandProvider,\n  ],\n  exports: [\n    TwitterService,\n    PrismaService,\n    UserService,\n    HaloDotApiService,\n    DiscordCommandProvider,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Shots.html":{"url":"interfaces/Shots.html","title":"interface - Shots","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Shots\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accuracy\n                                        \n                                \n                                \n                                        \n                                            fired\n                                        \n                                \n                                \n                                        \n                                            landed\n                                        \n                                \n                                \n                                        \n                                            missed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accuracy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accuracy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fired\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fired:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        landed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        landed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        missed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsBaseCommand.html":{"url":"classes/StatsBaseCommand.html","title":"class - StatsBaseCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsBaseCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/stats.command.ts\n        \n\n\n            \n                Description\n            \n            \n                 Base /stats command. Base commands cannot do anything by themselves if they have sub commands in  include array.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\n\nimport { StatsRegSubCommand } from './register/register.command';\nimport { StatsHelpSubCommand } from './help/help.command';\nimport { StatsGetSubCommand } from './get/get.command';\nimport { StatsUpdateSubCommand } from './update/update.command';\n/**\n *  Base /stats command. Base commands cannot do anything by themselves if they have sub commands in  include array.\n *\n * @export\n * @class StatsBaseCommand\n */\n@Command({\n  name: 'stats',\n  description: 'Stats provided by HaloDotAPI',\n  include: [\n    StatsGetSubCommand,\n    StatsUpdateSubCommand,\n    StatsRegSubCommand,\n    StatsHelpSubCommand,\n  ],\n})\nexport class StatsBaseCommand {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsDto.html":{"url":"classes/StatsDto.html","title":"class - StatsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/stats.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class StatsDto {\n  // @Param({ description: 'User name', required: true })\n  // name: string;\n  // @Param({\n  //   name: 'phone-number',\n  //   description: 'Phone number',\n  //   required: true,\n  // })\n  // phoneNumber: string;\n  // @Param({ description: 'User nickname', required: true })\n  // name: string;\n  // @Param({ description: 'User age', required: true, type: ParamType.INTEGER })\n  // age: number;\n  // @Choice(City)\n  // @Param({ description: 'City of residence', type: ParamType.INTEGER })\n  // city: City;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsGetSubCommand.html":{"url":"classes/StatsGetSubCommand.html","title":"class - StatsGetSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsGetSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/get/get.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_haloDotApi: HaloDotApiService, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/get/get.command.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _haloDotApi\n                                                  \n                                                        \n                                                                        HaloDotApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(StatsGetSubCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/get/get.command.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: GetDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/get/get.command.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                GetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordCommand,\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { HaloDotApiService } from 'src/services/haloDotApi/halodotapi.service';\nimport { UserService } from 'src/services/user.service';\nimport { GetDto } from './get.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'get', description: 'Prints our your stats' })\nexport class StatsGetSubCommand implements DiscordTransformedCommand {\n  private _logger: Logger = new Logger(StatsGetSubCommand.name);\n\n  constructor(\n    private _haloDotApi: HaloDotApiService,\n    private _userService: UserService,\n  ) {}\n\n  async handler(\n    @Payload() dto: GetDto,\n    interaction: CommandInteraction,\n  ): Promise {\n    try {\n      const defer = await interaction.deferReply({ fetchReply: true });\n      // this._logger.verbose(JSON.stringify(defer));\n\n      // https://github.com/discordjs/discord.js/issues/7005\n      const hasParam = !!dto.gamertag;\n      const userId = interaction.user.id;\n\n      let gamerTag: string;\n      let embedReply: MessageEmbed;\n\n      let replyMessage: InteractionReplyOptions;\n\n      if (hasParam) {\n        gamerTag = dto.gamertag;\n        this._logger.debug(`gamerTag as param: ${gamerTag}`);\n\n        const statsCSR = await this._haloDotApi\n          .requestPlayerStatsCSR(gamerTag, 'open')\n          .catch((error) => {\n            this._logger.error(error);\n          });\n        const statsRecord = await this._haloDotApi\n          .requestPlayerServiceRecord(gamerTag)\n          .catch((error) => {\n            this._logger.error(error);\n          });\n\n        if (\n          statsCSR &&\n          statsCSR.data &&\n          statsRecord &&\n          statsRecord.data &&\n          !interaction.replied\n        ) {\n          embedReply = new MessageEmbed()\n            .setColor('#CCCCFF')\n            .setThumbnail(statsCSR.data[0].response.current.tier_image_url)\n            .setTitle(gamerTag)\n            .setDescription(statsCSR.data[0].response.current.tier)\n            .addFields(\n              {\n                name: `Kills`,\n                value: ` ${statsRecord.data.summary.kills}`,\n                inline: true,\n              },\n              {\n                name: `Deaths`,\n                value: ` ${statsRecord.data.summary.deaths}`,\n                inline: true,\n              },\n              {\n                name: `Assists`,\n                value: ` ${statsRecord.data.summary.assists}`,\n                inline: true,\n              },\n            )\n            .addFields(\n              {\n                name: `KDA`,\n                value: ` ${statsRecord.data.kda.toFixed(1)}`,\n                inline: true,\n              },\n              {\n                name: `KDR`,\n                value: ` ${statsRecord.data.kdr.toFixed(1)}`,\n                inline: true,\n              },\n              {\n                name: `Matches Played`,\n                value: ` ${statsRecord.data.matches_played}`,\n                inline: true,\n              },\n            )\n            .setFooter({\n              text: `Time played: ${\n                statsRecord.data.time_played.human\n              }. Wins: ${statsRecord.data.win_rate.toFixed(1)}%`,\n            });\n          // .setTimestamp()\n          replyMessage = {\n            embeds: [embedReply],\n            fetchReply: true,\n          };\n\n          if (interaction.deferred && !interaction.replied)\n            await interaction\n              .editReply(replyMessage)\n              .then((reply) => {\n                this._logger.verbose(reply);\n              })\n              .catch((error) => {\n                Promise.reject(error);\n              });\n        } else {\n          let errorEmbed = new MessageEmbed()\n            .setColor('#FF0000')\n            .setTitle('Error')\n            .setDescription(`Stats not found for ${gamerTag}`);\n          replyMessage = {\n            embeds: [errorEmbed],\n            fetchReply: true,\n          };\n\n          await interaction\n            .editReply(replyMessage)\n            .then((reply) => {\n              this._logger.verbose(reply);\n            })\n            .catch((error) => {\n              Promise.reject(error);\n            });\n        }\n      } else {\n        const botUser = await this._userService\n          .user({\n            discord_user_id: userId,\n          })\n          .catch((error) => {\n            this._logger.error(error);\n          });\n\n        if (botUser) {\n          gamerTag = botUser.gamertag;\n          this._logger.debug(`gamerTag from botuser: ${gamerTag}`);\n\n          // TODO write query against HaloDotApi\n          const statsCSR = await this._haloDotApi\n            .requestPlayerStatsCSR(gamerTag, 'open')\n            .catch((error) => {\n              this._logger.error(error);\n            });\n\n          const statsRecord = await this._haloDotApi\n            .requestPlayerServiceRecord(gamerTag)\n            .catch((error) => {\n              this._logger.error(error);\n            });\n\n          if (\n            statsCSR &&\n            statsCSR.data &&\n            statsRecord &&\n            statsRecord.data &&\n            !interaction.replied\n          ) {\n            embedReply = new MessageEmbed()\n              .setColor('#CCCCFF')\n              .setThumbnail(statsCSR.data[0].response.current.tier_image_url)\n              .setTitle(gamerTag)\n              .setDescription(statsCSR.data[0].response.current.tier)\n              .addFields(\n                {\n                  name: `Kills`,\n                  value: ` ${statsRecord.data.summary.kills}`,\n                  inline: true,\n                },\n                {\n                  name: `Deaths`,\n                  value: ` ${statsRecord.data.summary.deaths}`,\n                  inline: true,\n                },\n                {\n                  name: `Assists`,\n                  value: ` ${statsRecord.data.summary.assists}`,\n                  inline: true,\n                },\n              )\n              .addFields(\n                {\n                  name: `KDA`,\n                  value: ` ${statsRecord.data.kda.toFixed(1)}`,\n                  inline: true,\n                },\n                {\n                  name: `KDR`,\n                  value: ` ${statsRecord.data.kdr.toFixed(1)}`,\n                  inline: true,\n                },\n                {\n                  name: `Matches Played`,\n                  value: ` ${statsRecord.data.matches_played}`,\n                  inline: true,\n                },\n              )\n              .setFooter({\n                text: `Time played: ${\n                  statsRecord.data.time_played.human\n                }. Wins: ${statsRecord.data.win_rate.toFixed(1)}%`,\n              }); // .setTimestamp()\n\n            replyMessage = {\n              embeds: [embedReply],\n              fetchReply: true,\n            };\n\n            if (interaction.deferred && !interaction.replied)\n              await interaction\n                .editReply(replyMessage)\n                .then((reply) => {\n                  this._logger.verbose(reply);\n                })\n                .catch((error) => {\n                  Promise.reject(error);\n                });\n          } else {\n            let errorEmbed = new MessageEmbed()\n              .setColor('#FF0000')\n              .setTitle('Error')\n              .setDescription(`Stats not found for ${gamerTag}`);\n            replyMessage = {\n              embeds: [errorEmbed],\n              fetchReply: true,\n            };\n\n            if (interaction.deferred && !interaction.replied)\n              await interaction\n                .editReply(replyMessage)\n                .then((reply) => {\n                  this._logger.verbose(reply);\n                })\n                .catch((error) => {\n                  Promise.reject(error);\n                });\n          }\n        } else {\n          embedReply = new MessageEmbed().setColor('#FF7F50').addFields({\n            name: `Error`,\n            value: `No Xbox Gametag registered for user`,\n          });\n\n          replyMessage = {\n            embeds: [embedReply],\n            fetchReply: true,\n          };\n\n          console.log('5');\n\n          if (interaction.deferred && !interaction.replied)\n            await interaction\n              .editReply(replyMessage)\n              .then((reply) => {\n                this._logger.verbose(reply);\n              })\n              .catch((error) => {\n                Promise.reject(error);\n              });\n        }\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsHelpDto.html":{"url":"classes/StatsHelpDto.html","title":"class - StatsHelpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsHelpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/help/help.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lang\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Select language', required: true})@Choice(Language)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/help/help.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice } from '@discord-nestjs/core';\n\nenum Language {\n  FI = 'fi',\n  EN = 'en',\n}\n\nexport class StatsHelpDto {\n  @Param({ description: 'Select language', required: true })\n  @Choice(Language)\n  lang: Language;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsHelpSubCommand.html":{"url":"classes/StatsHelpSubCommand.html","title":"class - StatsHelpSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsHelpSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/help/help.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/help/help.command.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/help/help.command.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: StatsHelpDto, interaction?: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/help/help.command.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                StatsHelpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport { CommandInteraction, MessageEmbed } from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { StatsHelpDto } from './help.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({\n  name: 'help',\n  description: 'Shows bot commands and helpful information',\n})\n/* This is a command that will display helpful message! */\nexport class StatsHelpSubCommand\n  implements DiscordTransformedCommand\n{\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  constructor() {}\n\n  async handler(\n    @Payload() dto: StatsHelpDto,\n    interaction?: CommandInteraction,\n  ) {\n    try {\n      if (dto.lang == 'fi') {\n        const embedHelpFi = new MessageEmbed()\n          .setColor('#0099ff')\n          .setTitle('Ohjeet')\n          .setDescription(\n            'Ohjeistus alikomennoille /stats. ?:parametri: tarkoittaa että se on valinnainen.',\n          )\n          .addFields(\n            { name: 'help :lang:', value: 'Tulostaa tämän viestin' },\n            {\n              name: 'reg :gamertag: :allowlogging:',\n              value: 'Rekisteröi Xbox gamertägisi',\n            },\n            { name: 'update', value: 'Päivitä tilastot' },\n            {\n              name: 'get ?:gamertag:',\n              value:\n                'Tulostaa käyttäjän Halo Infinite tilastot tai hakee käyttäjän tilastot gamertagille',\n            },\n          )\n          .setFooter({\n            text: 'https://github.com/ex1tium/halofinland-discord-bot',\n          })\n          .setTimestamp();\n\n        return interaction\n          .reply({\n            embeds: [embedHelpFi],\n            ephemeral: true,\n          })\n          .catch((error) => {\n            Promise.reject(error);\n          });\n      } else {\n        const embedHelpEn = new MessageEmbed()\n          .setColor('#0099ff')\n          .setTitle('Help')\n          .setDescription(\n            'Help for subcommands of /stats. ?:param: means its optional.',\n          )\n          .addFields(\n            {\n              name: 'help :lang:',\n              value: 'Prints this message in chosen language',\n            },\n            {\n              name: 'reg :tag: :allowlogging:',\n              value: 'Registers your Xbox gamertag for stats',\n            },\n            { name: 'update', value: 'Updates latest stats from API' },\n            { name: 'get', value: 'Prints your stats or stats for gamertag' },\n          )\n          .setFooter({\n            text: 'https://github.com/ex1tium/halofinland-discord-bot',\n          })\n          .setTimestamp();\n\n        return interaction\n          .reply({\n            embeds: [embedHelpEn],\n            ephemeral: true,\n          })\n          .catch((error) => {\n            Promise.reject(error);\n          });\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsRegSubCommand.html":{"url":"classes/StatsRegSubCommand.html","title":"class - StatsRegSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsRegSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/register/register.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/register/register.command.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('StatsRegSubCommand')\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/register/register.command.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: RegisterDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/register/register.command.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger, UseFilters, ValidationPipe } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { CommandValidationFilter } from 'src/exception-filters/discord-command-validation';\nimport { UserService } from 'src/services/user.service';\nimport { RegisterDto } from './register.dto';\n\n@UseFilters(CommandValidationFilter)\n@UsePipes(TransformPipe, ValidationPipe)\n@SubCommand({ name: 'reg', description: 'Register your Xbox Gamer tag' })\n/* This is a command that allows users to register their gamertag and whether or not they want to be\nlogged. */\nexport class StatsRegSubCommand\n  implements DiscordTransformedCommand\n{\n  private _logger: Logger = new Logger('StatsRegSubCommand');\n\n  constructor(private _userService: UserService) {}\n\n  async handler(@Payload() dto: RegisterDto, interaction: CommandInteraction) {\n    try {\n      const gamerTag = dto.gamertag;\n      const allowLogging = dto.allowlogging;\n      this._logger.warn(`allowLogging: ${allowLogging}`);\n\n      const userId = interaction.user.id;\n      const userExists = await this._userService.user({\n        discord_user_id: userId,\n      });\n\n      let wasUpdated = false;\n\n      // this._logger.warn(`userExists: ${JSON.stringify(userExists)}`);\n\n      if (userExists && userExists.discord_user_id) {\n        this._userService.updateUser({\n          where: {\n            discord_user_id: userId,\n          },\n          data: {\n            gamertag: gamerTag,\n            allow_stats_logging: allowLogging ? 1 : 0,\n          },\n        });\n\n        wasUpdated = true;\n      } else {\n        this._userService.createUser({\n          discord_user_id: userId,\n          gamertag: gamerTag,\n          allow_stats_logging: allowLogging ? 1 : 0,\n        });\n      }\n\n      let embedReply: MessageEmbed;\n\n      if (wasUpdated) {\n        embedReply = new MessageEmbed().setColor('#DFFF00').addFields(\n          { name: `Old Gamertag`, value: `${userExists.gamertag}` },\n          { name: `New Gamertag`, value: `${gamerTag}` },\n          {\n            name: `Logging`,\n            value: `${allowLogging ? 'enabled' : 'disabled'}`,\n          },\n        );\n      } else {\n        embedReply = new MessageEmbed().setColor('#40E0D0').addFields(\n          { name: `Registered Xbox Gamertag`, value: `${gamerTag}` },\n          {\n            name: `Logging`,\n            value: `${allowLogging ? 'enabled' : 'disabled'}`,\n          },\n        );\n      }\n\n      const reply: InteractionReplyOptions = {\n        embeds: [embedReply],\n        ephemeral: true,\n      };\n\n      return interaction.reply(reply).catch((error) => {\n        Promise.reject(error);\n      });\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsUpdateSubCommand.html":{"url":"classes/StatsUpdateSubCommand.html","title":"class - StatsUpdateSubCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsUpdateSubCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/update/update.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DiscordTransformedCommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/stats/update/update.command.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(StatsUpdateSubCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/update/update.command.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: UpdateDto, interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/stats/update/update.command.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordCommand,\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Logger } from '@nestjs/common';\nimport {\n  CommandInteraction,\n  InteractionReplyOptions,\n  MessageEmbed,\n} from 'discord.js';\nimport { UserService } from 'src/services/user.service';\nimport { UpdateDto } from './update.dto';\n\n@UsePipes(TransformPipe)\n@SubCommand({\n  name: 'update',\n  description: 'Update your registered Xbox Gamer Tag',\n})\n/* This is a command that will update a user's gamertag. */\nexport class StatsUpdateSubCommand\n  implements DiscordTransformedCommand\n{\n  private _logger: Logger = new Logger(StatsUpdateSubCommand.name);\n\n  constructor(private _userService: UserService) {}\n\n  async handler(@Payload() dto: UpdateDto, interaction: CommandInteraction) {\n    try {\n      const gamerTag = dto.gamertag;\n      const userId = interaction.user.id;\n      const userExists = await this._userService.user({\n        discord_user_id: userId,\n      });\n      let embedReply: MessageEmbed;\n\n      if (userExists) {\n        this._userService.updateUser({\n          where: {\n            discord_user_id: userId,\n          },\n          data: {\n            gamertag: gamerTag,\n          },\n        });\n\n        embedReply = new MessageEmbed()\n          .setColor('#DFFF00')\n          .addFields(\n            { name: `Old Gamertag`, value: `${userExists.gamertag}` },\n            { name: `New Gamertag`, value: `${gamerTag}` },\n          )\n          .setTimestamp();\n        const reply: InteractionReplyOptions = {\n          embeds: [embedReply],\n          ephemeral: true,\n        };\n\n        this._logger.verbose(JSON.stringify(dto));\n        this._logger.verbose(interaction);\n\n        return reply;\n      }\n\n      return 'use /stats reg :gamertag: command to register first';\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Summary.html":{"url":"interfaces/Summary.html","title":"interface - Summary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Summary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assists\n                                        \n                                \n                                \n                                        \n                                            betrayals\n                                        \n                                \n                                \n                                        \n                                            deaths\n                                        \n                                \n                                \n                                        \n                                            kills\n                                        \n                                \n                                \n                                        \n                                            medals\n                                        \n                                \n                                \n                                        \n                                            suicides\n                                        \n                                \n                                \n                                        \n                                            vehicles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assists:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        betrayals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        betrayals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deaths\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deaths:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kills\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kills:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suicides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suicides:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vehicles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vehicles:         Vehicles\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vehicles\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimePlayed.html":{"url":"interfaces/TimePlayed.html","title":"interface - TimePlayed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimePlayed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            human\n                                        \n                                \n                                \n                                        \n                                            seconds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        human\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        human:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seconds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seconds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToJsonResponse.html":{"url":"interfaces/ToJsonResponse.html","title":"interface - ToJsonResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToJsonResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interaction-toJSON.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            applicationId\n                                        \n                                \n                                \n                                        \n                                            channelId\n                                        \n                                \n                                \n                                        \n                                            commandId\n                                        \n                                \n                                \n                                        \n                                            commandName\n                                        \n                                \n                                \n                                        \n                                            deferred\n                                        \n                                \n                                \n                                        \n                                            ephemeral\n                                        \n                                \n                                \n                                        \n                                            guildId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            member\n                                        \n                                \n                                \n                                        \n                                            memberPermissions\n                                        \n                                \n                                \n                                        \n                                            replied\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        applicationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        applicationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commandId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commandId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commandName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commandName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deferred\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deferred:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ephemeral\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ephemeral:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guildId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guildId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        member\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        member:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        memberPermissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        memberPermissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replied\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replied:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"APPLICATION_COMMAND\" | \"PING\" | \"MESSAGE_COMPONENT\" | \"APPLICATION_COMMAND_AUTOCOMPLETE\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"APPLICATION_COMMAND\" | \"PING\" | \"MESSAGE_COMPONENT\" | \"APPLICATION_COMMAND_AUTOCOMPLETE\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ToJsonResponse {\n  type:\n    | 'APPLICATION_COMMAND'\n    | 'PING'\n    | 'MESSAGE_COMPONENT'\n    | 'APPLICATION_COMMAND_AUTOCOMPLETE';\n  id: string;\n  applicationId: string;\n  channelId: string;\n  guildId: string;\n  user: string;\n  member: string;\n  version: 1;\n  memberPermissions: number;\n  commandId: string;\n  commandName: string;\n  deferred: boolean;\n  replied: boolean;\n  ephemeral: null;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwitterService.html":{"url":"injectables/TwitterService.html","title":"injectable - TwitterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TwitterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/twitter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _client\n                            \n                            \n                                    Private\n                                _haloSupportTweets\n                            \n                            \n                                    Private\n                                    Readonly\n                                _logger\n                            \n                            \n                                    Private\n                                _twitterAllowedSearchAuthorIds\n                            \n                            \n                                    Private\n                                _twitterUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                constructEmbedTweetMessage\n                            \n                            \n                                delay\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                next\n                            \n                            \n                                    Async\n                                pollHaloSupportTweets\n                            \n                            \n                                    Async\n                                recordTweet\n                            \n                            \n                                    Async\n                                sendChannel\n                            \n                            \n                                    Async\n                                upsertTweet\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newTweets$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _prismaService: PrismaService, _discordProvider: DiscordClientProvider)\n                    \n                \n                        \n                            \n                                Defined in src/services/twitter.service.ts:31\n                            \n                        \n\n                \n                    \n                            It creates a new instance of the TwitterApi class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nConfigService\n\n\n                                                        \n                                                \n                                                \n                                                        _prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe PrismaService is used to interact with the database.\n\n\n                                                        \n                                                \n                                                \n                                                        _discordProvider\n                                                  \n                                                        \n                                                                    DiscordClientProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDiscordClientProvider\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        constructEmbedTweetMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    constructEmbedTweetMessage(tweet: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:155\n                \n            \n\n\n            \n                \n                    It constructs a message embed for a tweet.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tweet\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTweetV2\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n            \n                \ndelay(ms: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:329\n                \n            \n\n\n            \n                \n                    Delay(ms: number) => Promise\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ms\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnumber\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Nothing.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:61\n                \n            \n\n\n            \n                \n                    It searches for users with the given IDs and returns them.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The twitter users.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(tweets: TweetV2[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:113\n                \n            \n\n\n            \n                \n                    It takes in an array of tweets and emits a new array of tweets\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tweets\n                                    \n                                            TweetV2[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTweetV2[]\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        pollHaloSupportTweets\n                        \n                    \n                \n            \n            \n                \n                    \n                    pollHaloSupportTweets()\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:205\n                \n            \n\n\n            \n                \n                    It searches for tweets that contain the words \"patch\", \"release\", \"update\", \"problem\", or \"issue\"\nand then checks to see if the tweet is from a user that we have allowed to tweet. If it is, it then\nchecks to see if the tweet is already in our database. If it is not, it then adds the tweet to our\ndatabase and then sends a message to the channels that we have configured\n\n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        recordTweet\n                        \n                    \n                \n            \n            \n                \n                    \n                    recordTweet(tweetData: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:273\n                \n            \n\n\n            \n                \n                    Create a new tweet record in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tweetData\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTweetV2\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendChannel\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendChannel(channelId: string, tweet: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:123\n                \n            \n\n\n            \n                \n                    It sends a message to a Discord channel.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    channelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the channel to send the message to.\n\n\n                                    \n                                \n                                \n                                    tweet\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTweetV2\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Nothing.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        upsertTweet\n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertTweet(tweetData: TweetV2)\n                \n            \n\n\n            \n                \n                    Defined in src/services/twitter.service.ts:298\n                \n            \n\n\n            \n                \n                    Upsert a tweet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tweetData\n                                    \n                                            TweetV2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTweetV2\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TwitterApi\n\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _haloSupportTweets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    null,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TwitterService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _twitterAllowedSearchAuthorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _twitterUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserV2[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/twitter.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newTweets$\n                    \n                \n\n                \n                    \n                        getnewTweets$()\n                    \n                \n                            \n                                \n                                    Defined in src/services/twitter.service.ts:105\n                                \n                            \n                    \n                        \n                                It returns an observable that emits the tweets that are currently in the store.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  ETwitterStreamEvent,\n  TweetStream,\n  TweetV2,\n  TweetV2SingleResult,\n  TwitterApi,\n  TwitterApiv2,\n  UserV2,\n  UserV2Result,\n} from 'twitter-api-v2';\n\nimport { BehaviorSubject, from, Observable } from 'rxjs';\nimport { PrismaService } from './prisma.service';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { DiscordClientProvider } from '@discord-nestjs/core';\nimport { TextChannel, MessageEmbed } from 'discord.js';\nimport { format } from 'date-fns';\n\n@Injectable()\nexport class TwitterService {\n  private readonly _logger = new Logger(TwitterService.name);\n  private _client: TwitterApi;\n\n  private _haloSupportTweets: BehaviorSubject = new BehaviorSubject(\n    null,\n  );\n\n  private _twitterAllowedSearchAuthorIds: string[] = [];\n  private _twitterUsers: UserV2[] = [];\n\n  /**\n   * It creates a new instance of the TwitterApi class.\n   * @param {ConfigService} _configService - ConfigService\n   * @param {PrismaService} _prismaService - The PrismaService is used to interact with the database.\n   * @param {DiscordClientProvider} _discordProvider - DiscordClientProvider\n   */\n  constructor(\n    private _configService: ConfigService,\n    private _prismaService: PrismaService,\n    private _discordProvider: DiscordClientProvider,\n  ) {\n    this._twitterAllowedSearchAuthorIds = this._configService\n      .get('twitterAllowedSearchAuthorIds')\n      .split(', ');\n\n    // console.debug('twitterAllowedSearchAuthorIds', this.twitterAllowedSearchAuthorIds)\n\n    this._client = new TwitterApi(\n      this._configService.get('twitterBearerToken'),\n    );\n\n    // this._logger.debug(`twitter client:  ${JSON.stringify(this._client)}`);\n  }\n\n  /**\n   * It searches for users with the given IDs and returns them.\n   * @returns The twitter users.\n   */\n  async init() {\n    try {\n      this._twitterUsers = [];\n      let foundError: boolean = false;\n      const notFoundUserIds: string[] = [];\n\n      for (const twitterUserId of this._twitterAllowedSearchAuthorIds) {\n        const user = await this._client.v2.user(twitterUserId);\n\n        if (user.data && !user.errors) {\n          this._logger.verbose(`twitter user: ${JSON.stringify(user)}`);\n          this._twitterUsers.push(user.data);\n        } else if (user.errors) {\n          foundError = true;\n          notFoundUserIds.push(user.errors[0].value);\n        }\n      }\n\n      await this.pollHaloSupportTweets().catch((error) => {\n        this._logger.error(error);\n      });\n\n      // this._logger.verbose(`twitter users: ${JSON.stringify(this._twitterUsers)}`);\n\n      if (foundError) {\n        return Promise.reject(\n          `User with IDs ${notFoundUserIds} not a valid Twitter User`,\n        );\n      } else {\n        return this._twitterUsers;\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It returns an observable that emits the tweets that are currently in the store.\n   * @returns An Observable of tweets.\n   */\n  get newTweets$() {\n    return this._haloSupportTweets.asObservable();\n  }\n\n  /**\n   * It takes in an array of tweets and emits a new array of tweets\n   * @param {TweetV2[]} tweets - TweetV2[]\n   */\n  next(tweets: TweetV2[]) {\n    this._haloSupportTweets.next([...tweets]);\n  }\n\n  /**\n   * It sends a message to a Discord channel.\n   * @param {string} channelId - The ID of the channel to send the message to.\n   * @param {TweetV2} tweet - TweetV2\n   * @returns Nothing.\n   */\n  async sendChannel(channelId: string, tweet: TweetV2) {\n    try {\n      const channel = (await this._discordProvider\n        .getClient()\n        .channels.fetch(channelId)) as TextChannel;\n      const createMessage = await this.constructEmbedTweetMessage(tweet).catch(\n        (error) => {\n          this._logger.error(error);\n        },\n      );\n\n      if (createMessage) {\n        return channel.send({ embeds: [createMessage] });\n      } else {\n        return Promise.reject(\n          `Problem sending message to channel ${channel.name}.`,\n        );\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It constructs a message embed for a tweet.\n   * @param {TweetV2} tweet - TweetV2\n   * @returns A promise.\n   */\n  async constructEmbedTweetMessage(tweet: TweetV2) {\n    try {\n      if (this._twitterUsers.some((user) => user.id === tweet.author_id)) {\n        const tweetAuthor = this._twitterUsers.filter(\n          (user) => user.id === tweet.author_id,\n        )[0];\n\n        const embedTweet = new MessageEmbed()\n          .setURL(`https://twitter.com/i/web/status/${tweet.id}`)\n          .setAuthor({\n            name: `@${tweetAuthor.username}`,\n            iconURL: null,\n            url: `https://twitter.com/${tweetAuthor.username}`,\n          })\n          .addFields(\n            {\n              name: 'Tweet',\n              value: tweet.text,\n            },\n            {\n              name: 'Actions',\n              value: `[Open Tweet](https://twitter.com/i/web/status/${tweet.id})`,\n            },\n          )\n          .setTimestamp(new Date(tweet.created_at))\n          .setFooter({\n            text: format(new Date(tweet.created_at), 'HH:mm'),\n          });\n        // .setURL(`https://twitter.com/i/web/status/${tweet.id}`)\n        return embedTweet;\n      } else {\n        Promise.reject(\n          'Could not find details for tweet author. Author twitter ID is not included in .env configuration TWITTER_ALLOWED_SEARCH_AUTHOR_IDS. Details for these users are loaded in init() function of TwitterService',\n        );\n      }\n    } catch (error) {\n      if (error && error.stack) {\n        return Promise.reject(this._logger.error(error.stack));\n      } else {\n        return Promise.reject(this._logger.error(error));\n      }\n    }\n  }\n\n  /**\n   * It searches for tweets that contain the words \"patch\", \"release\", \"update\", \"problem\", or \"issue\"\n   * and then checks to see if the tweet is from a user that we have allowed to tweet. If it is, it then\n   * checks to see if the tweet is already in our database. If it is not, it then adds the tweet to our\n   * database and then sends a message to the channels that we have configured\n   */\n  async pollHaloSupportTweets() {\n    try {\n      const search = await this._client.v2.search(\n        'from:HaloSupport (\"patch\" OR \"release\" OR \"update\" OR \"problem\" OR \"issue\")',\n        {\n          'tweet.fields': ['created_at', 'id', 'author_id', 'source'],\n        },\n      );\n\n      this._logger.debug('searching for new tweets');\n\n      // this._logger.debug('search', JSON.stringify(search))\n      const newTweets: TweetV2[] = [];\n\n      const sortData = search.data.data.sort((a, b) => {\n        return (\n          new Date(a.created_at).valueOf() - new Date(b.created_at).valueOf()\n        );\n      });\n\n      for (let i = 0; i  id == tweet.author_id,\n          )\n        ) {\n          const found = await this._prismaService.tweet.findUnique({\n            where: {\n              tweet_id: tweet.id,\n            },\n          });\n\n          if (!found) {\n            await this.recordTweet(tweet);\n            newTweets.push(tweet);\n\n            const supportTweetChannelIds: string[] = this._configService\n              .get('supportTweetChannelIds')\n              .split(', ');\n\n            for (let i = 0; i  Promise\n   * @param {number} ms - number\n   * @returns Nothing.\n   */\n  delay(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDto.html":{"url":"classes/UpdateDto.html","title":"class - UpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/stats/update/update.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gamertag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gamertag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({description: 'Xbox Gamer Tag', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/stats/update/update.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param, Choice, ParamType } from '@discord-nestjs/core';\n\nexport class UpdateDto {\n  @Param({ description: 'Xbox Gamer Tag', required: true })\n  gamertag: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                user\n                            \n                            \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            It creates a new instance of the PrismaService and assigns it to the prisma property.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe PrismaService instance.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: Prisma.BotUserCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:53\n                \n            \n\n\n            \n                \n                    Create a new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.BotUserCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data that will be used to create the user.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A BotUser object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(where: Prisma.BotUserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:80\n                \n            \n\n\n            \n                \n                    It deletes a user from the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.BotUserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA unique identifier for the user.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The botUser object that was deleted.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:64\n                \n            \n\n\n            \n                \n                    It updates a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \n{\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated user.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(userWhereUniqueInput: Prisma.BotUserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:18\n                \n            \n\n\n            \n                \n                    Find a unique BotUser by its id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userWhereUniqueInput\n                                    \n                                            Prisma.BotUserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPrisma.BotUserWhereUniqueInput\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A BotUser object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:31\n                \n            \n\n\n            \n                \n                    It returns a list of users.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \n{\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of BotUser objects.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { BotUser, Prisma } from '@prisma/client';\n\n@Injectable()\nexport class UserService {\n  /**\n   * It creates a new instance of the PrismaService and assigns it to the prisma property.\n   * @param {PrismaService} prisma - The PrismaService instance.\n   */\n  constructor(private prisma: PrismaService) {}\n\n  /**\n   * Find a unique BotUser by its id\n   * @param userWhereUniqueInput - Prisma.BotUserWhereUniqueInput\n   * @returns A BotUser object\n   */\n  async user(\n    userWhereUniqueInput: Prisma.BotUserWhereUniqueInput,\n  ): Promise {\n    return this.prisma.botUser.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  /**\n   * It returns a list of users.\n   * @param params - {\n   * @returns An array of BotUser objects.\n   */\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.BotUserWhereUniqueInput;\n    where?: Prisma.BotUserWhereInput;\n    orderBy?: Prisma.BotUserOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.botUser.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  /**\n   * Create a new user\n   * @param data - The data that will be used to create the user.\n   * @returns A BotUser object\n   */\n  async createUser(data: Prisma.BotUserCreateInput): Promise {\n    return this.prisma.botUser.create({\n      data,\n    });\n  }\n\n  /**\n   * It updates a user.\n   * @param params - {\n   * @returns The updated user.\n   */\n  async updateUser(params: {\n    where: Prisma.BotUserWhereUniqueInput;\n    data: Prisma.BotUserUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.botUser.update({\n      data,\n      where,\n    });\n  }\n\n  /**\n   * It deletes a user from the database.\n   * @param where - A unique identifier for the user.\n   * @returns The botUser object that was deleted.\n   */\n  async deleteUser(where: Prisma.BotUserWhereUniqueInput): Promise {\n    return this.prisma.botUser.delete({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Vehicles.html":{"url":"interfaces/Vehicles.html","title":"interface - Vehicles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Vehicles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/haloDotApi/service-record.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destroys\n                                        \n                                \n                                \n                                        \n                                            hijacks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destroys:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hijacks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hijacks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare module ServiceRecordsModels {\n  export interface Vehicles {\n    destroys: number;\n    hijacks: number;\n  }\n\n  export interface Summary {\n    kills: number;\n    deaths: number;\n    assists: number;\n    betrayals: number;\n    suicides: number;\n    vehicles: Vehicles;\n    medals: number;\n  }\n\n  export interface Damage {\n    taken: number;\n    dealt: number;\n    average: number;\n  }\n\n  export interface Shots {\n    fired: number;\n    landed: number;\n    missed: number;\n    accuracy: number;\n  }\n\n  export interface Kills {\n    melee: number;\n    grenades: number;\n    headshots: number;\n    power_weapons: number;\n  }\n\n  export interface Assists {\n    emp: number;\n    driver: number;\n    callouts: number;\n  }\n\n  export interface Matches {\n    wins: number;\n    losses: number;\n    left: number;\n    draws: number;\n  }\n\n  export interface Breakdowns {\n    kills: Kills;\n    assists: Assists;\n    matches: Matches;\n  }\n\n  export interface TimePlayed {\n    seconds: number;\n    human: string;\n  }\n\n  export interface Data {\n    summary: Summary;\n    damage: Damage;\n    shots: Shots;\n    breakdowns: Breakdowns;\n    kda: number;\n    kdr: number;\n    total_score: number;\n    matches_played: number;\n    time_played: TimePlayed;\n    win_rate: number;\n  }\n\n  export interface Additional {\n    gamertag: string;\n  }\n\n  export interface ServiceRecord {\n    data: Data;\n    additional: Additional;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/commands/stats/get/get.command.ts\n            \n            class\n            StatsGetSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/get/get.dto.ts\n            \n            class\n            GetDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/stats/help/help.command.ts\n            \n            class\n            StatsHelpSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/help/help.dto.ts\n            \n            class\n            StatsHelpDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commands/stats/register/register.command.ts\n            \n            class\n            StatsRegSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/register/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/commands/stats/stats.command.ts\n            \n            class\n            StatsBaseCommand\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/commands/stats/stats.dto.ts\n            \n            class\n            StatsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commands/stats/update/update.command.ts\n            \n            class\n            StatsUpdateSubCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commands/stats/update/update.dto.ts\n            \n            class\n            UpdateDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controllers/oauth2-discord/oauth2-discord.controller.ts\n            \n            controller\n            Oauth2DiscordController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/exception-filters/discord-command-validation.ts\n            \n            class\n            CommandValidationFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exception-filters/globalExceptions.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/message-fom-user.guard.ts\n            \n            class\n            MessageFromUserGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middleware/example.middleware.ts\n            \n            injectable\n            ExampleMiddleWare\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/interaction-toJSON.model.ts\n            \n            interface\n            ToJsonResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/models/sub-command-options.model.ts\n            \n            interface\n            Choice\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/sub-command-options.model.ts\n            \n            interface\n            DefineDiscordCommand\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/pipes/message-to-upper.pipe.ts\n            \n            class\n            MessageToUpperPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/discord-api.service.ts\n            \n            injectable\n            DiscordApiService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Additional\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            AllTime\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            CsrsRootObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Current\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            QueueGroups\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/csrs.models.ts\n            \n            interface\n            Season\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/halodotapi.service.ts\n            \n            injectable\n            HaloDotApiService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Additional\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Assists\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Breakdowns\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Damage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Kills\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Matches\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            ServiceRecord\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Shots\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Summary\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            TimePlayed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/haloDotApi/service-record.models.ts\n            \n            interface\n            Vehicles\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/services/twitter.service.ts\n            \n            injectable\n            TwitterService\n            \n                60 %\n                (9/15)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                85 %\n                (6/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @discord-nestjs/common : ^2.0.16\n        \n            @discord-nestjs/core : ^2.1.12\n        \n            @discordjs/rest : ^0.3.0\n        \n            @nestjs/axios : ^0.0.3\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/schedule : ^1.0.2\n        \n            @prisma/client : ^3.8.1\n        \n            date-fns : ^2.26.0\n        \n            discord-api-types : ^0.26.1\n        \n            discord.js : ^13.6.0\n        \n            forever-monitor : ^3.0.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.4.0\n        \n            twitter-api-v2 : ^1.6.5\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Language   (src/.../help.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commands/stats/help/help.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Language\n                    \n                \n                        \n                            \n                                 FI\n                            \n                        \n                        \n                            \n                                Value : fi\n                            \n                        \n                        \n                            \n                                 EN\n                            \n                        \n                        \n                            \n                                Value : en\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Create an instance of NestApplication, register the AppModule, and listen to port 3000\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n  \n  \n\n  Discord bot for Halo Finland  community .\n  \n  \n\n  Built with a progressive Node.js framework called  Nest\n    \n\n\n\n\n\n\n\n \n  \n\n  \n\nDescription\nHalo Finland Discord bot. Production ready versions start @ 1.0.0\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nThis project uses Nest framework.\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021-2022 Halo Finland Community\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Oauth2DiscordModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nOauth2DiscordModule\n\nOauth2DiscordModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nOauth2DiscordModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDiscordCommandProvider \n\nDiscordCommandProvider \n\nDiscordCommandProvider  -->\n\nSharedModule->DiscordCommandProvider \n\n\n\n\n\nHaloDotApiService \n\nHaloDotApiService \n\nHaloDotApiService  -->\n\nSharedModule->HaloDotApiService \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\n\n\nTwitterService \n\nTwitterService \n\nTwitterService  -->\n\nSharedModule->TwitterService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nSharedModule->UserService \n\n\n\n\n\nDiscordApiService\n\nDiscordApiService\n\nAppModule -->\n\nDiscordApiService->AppModule\n\n\n\n\n\nHaloDotApiService\n\nHaloDotApiService\n\nSharedModule -->\n\nHaloDotApiService->SharedModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\nTwitterService\n\nTwitterService\n\nSharedModule -->\n\nTwitterService->SharedModule\n\n\n\n\n\nUserService\n\nUserService\n\nSharedModule -->\n\nUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    22 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
